{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-vivia/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-128.png","path":"images/favicon-dark-128.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-180.png","path":"images/favicon-dark-180.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-192.png","path":"images/favicon-dark-192.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-32.png","path":"images/favicon-dark-32.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-128.png","path":"images/favicon-light-128.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-180.png","path":"images/favicon-light-180.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-192.png","path":"images/favicon-light-192.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-32.png","path":"images/favicon-light-32.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/tile.png","path":"images/tile.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/js/color.global.min.js","path":"js/color.global.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/js/jquery-3.4.1.min.js","path":"js/jquery-3.4.1.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/js/light-dark-switch.js","path":"js/light-dark-switch.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/js/load-settings.js","path":"js/load-settings.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/all.css","path":"fontawesome/css/all.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/all.min.css","path":"fontawesome/css/all.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/brands.css","path":"fontawesome/css/brands.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/brands.min.css","path":"fontawesome/css/brands.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/fontawesome.css","path":"fontawesome/css/fontawesome.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/fontawesome.min.css","path":"fontawesome/css/fontawesome.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/regular.css","path":"fontawesome/css/regular.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/regular.min.css","path":"fontawesome/css/regular.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/solid.css","path":"fontawesome/css/solid.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/solid.min.css","path":"fontawesome/css/solid.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/svg-with-js.css","path":"fontawesome/css/svg-with-js.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/svg-with-js.min.css","path":"fontawesome/css/svg-with-js.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/v4-font-face.css","path":"fontawesome/css/v4-font-face.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/v4-font-face.min.css","path":"fontawesome/css/v4-font-face.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/v4-shims.css","path":"fontawesome/css/v4-shims.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/v4-shims.min.css","path":"fontawesome/css/v4-shims.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/v5-font-face.css","path":"fontawesome/css/v5-font-face.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/v5-font-face.min.css","path":"fontawesome/css/v5-font-face.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/Roboto-Bold.ttf","path":"css/fonts/Roboto-Bold.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/Roboto-Medium.ttf","path":"css/fonts/Roboto-Medium.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/Roboto-Regular.ttf","path":"css/fonts/Roboto-Regular.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.woff2","path":"css/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/webfonts/fa-brands-400.ttf","path":"fontawesome/webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/webfonts/fa-brands-400.woff2","path":"fontawesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/webfonts/fa-regular-400.ttf","path":"fontawesome/webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/webfonts/fa-regular-400.woff2","path":"fontawesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/webfonts/fa-solid-900.ttf","path":"fontawesome/webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/webfonts/fa-solid-900.woff2","path":"fontawesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/webfonts/fa-v4compatibility.ttf","path":"fontawesome/webfonts/fa-v4compatibility.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/webfonts/fa-v4compatibility.woff2","path":"fontawesome/webfonts/fa-v4compatibility.woff2","modified":0,"renderable":1},{"_id":"source/assets/images/banner.jpg","path":"assets/images/banner.jpg","modified":0,"renderable":0},{"_id":"source/html/nest/media/icon.svg","path":"html/nest/media/icon.svg","modified":0,"renderable":0},{"_id":"source/html/nest/css/fonts/KaTeX_AMS-Regular.woff2","path":"html/nest/css/fonts/KaTeX_AMS-Regular.woff2","modified":0,"renderable":0},{"_id":"source/html/nest/css/fonts/KaTeX_Caligraphic-Bold.woff2","path":"html/nest/css/fonts/KaTeX_Caligraphic-Bold.woff2","modified":0,"renderable":0},{"_id":"source/html/nest/css/fonts/KaTeX_Caligraphic-Regular.woff2","path":"html/nest/css/fonts/KaTeX_Caligraphic-Regular.woff2","modified":0,"renderable":0},{"_id":"source/html/nest/css/fonts/KaTeX_Fraktur-Bold.woff2","path":"html/nest/css/fonts/KaTeX_Fraktur-Bold.woff2","modified":0,"renderable":0},{"_id":"source/html/nest/css/fonts/KaTeX_Fraktur-Regular.woff2","path":"html/nest/css/fonts/KaTeX_Fraktur-Regular.woff2","modified":0,"renderable":0},{"_id":"source/html/nest/css/fonts/KaTeX_Main-Bold.woff2","path":"html/nest/css/fonts/KaTeX_Main-Bold.woff2","modified":0,"renderable":0},{"_id":"source/html/nest/css/fonts/KaTeX_Main-BoldItalic.woff2","path":"html/nest/css/fonts/KaTeX_Main-BoldItalic.woff2","modified":0,"renderable":0},{"_id":"source/html/nest/css/fonts/KaTeX_Main-Italic.woff2","path":"html/nest/css/fonts/KaTeX_Main-Italic.woff2","modified":0,"renderable":0},{"_id":"source/html/nest/css/fonts/KaTeX_Main-Regular.woff2","path":"html/nest/css/fonts/KaTeX_Main-Regular.woff2","modified":0,"renderable":0},{"_id":"source/html/nest/css/fonts/KaTeX_Math-BoldItalic.woff2","path":"html/nest/css/fonts/KaTeX_Math-BoldItalic.woff2","modified":0,"renderable":0},{"_id":"source/html/nest/css/fonts/KaTeX_Math-Italic.woff2","path":"html/nest/css/fonts/KaTeX_Math-Italic.woff2","modified":0,"renderable":0},{"_id":"source/html/nest/css/fonts/KaTeX_SansSerif-Bold.woff2","path":"html/nest/css/fonts/KaTeX_SansSerif-Bold.woff2","modified":0,"renderable":0},{"_id":"source/html/nest/css/fonts/KaTeX_SansSerif-Italic.woff2","path":"html/nest/css/fonts/KaTeX_SansSerif-Italic.woff2","modified":0,"renderable":0},{"_id":"source/html/nest/css/fonts/KaTeX_SansSerif-Regular.woff2","path":"html/nest/css/fonts/KaTeX_SansSerif-Regular.woff2","modified":0,"renderable":0},{"_id":"source/html/nest/css/fonts/KaTeX_Script-Regular.woff2","path":"html/nest/css/fonts/KaTeX_Script-Regular.woff2","modified":0,"renderable":0},{"_id":"source/html/nest/css/fonts/KaTeX_Size1-Regular.woff2","path":"html/nest/css/fonts/KaTeX_Size1-Regular.woff2","modified":0,"renderable":0},{"_id":"source/html/nest/css/fonts/KaTeX_Size2-Regular.woff2","path":"html/nest/css/fonts/KaTeX_Size2-Regular.woff2","modified":0,"renderable":0},{"_id":"source/html/nest/css/fonts/KaTeX_Size3-Regular.woff2","path":"html/nest/css/fonts/KaTeX_Size3-Regular.woff2","modified":0,"renderable":0},{"_id":"source/html/nest/css/fonts/KaTeX_Size4-Regular.woff2","path":"html/nest/css/fonts/KaTeX_Size4-Regular.woff2","modified":0,"renderable":0},{"_id":"source/html/nest/css/fonts/KaTeX_Typewriter-Regular.woff2","path":"html/nest/css/fonts/KaTeX_Typewriter-Regular.woff2","modified":0,"renderable":0},{"_id":"source/html/nest/nest快速入门/media/icon.svg","path":"html/nest/nest快速入门/media/icon.svg","modified":0,"renderable":0},{"_id":"source/html/nest/nest快速入门/media/icon_1.svg","path":"html/nest/nest快速入门/media/icon_1.svg","modified":0,"renderable":0},{"_id":"source/html/nest/nest快速入门/media/nest工作流程.png","path":"html/nest/nest快速入门/media/nest工作流程.png","modified":0,"renderable":0},{"_id":"source/html/nest/nest中的装饰器/media/image.png","path":"html/nest/nest中的装饰器/media/image.png","modified":0,"renderable":0},{"_id":"source/html/nest/nest中的装饰器/media/image_1.png","path":"html/nest/nest中的装饰器/media/image_1.png","modified":0,"renderable":0},{"_id":"source/html/nest/nest中的装饰器/media/image_2.png","path":"html/nest/nest中的装饰器/media/image_2.png","modified":0,"renderable":0},{"_id":"source/html/nest/nest中的装饰器/media/image_3.png","path":"html/nest/nest中的装饰器/media/image_3.png","modified":0,"renderable":0},{"_id":"source/html/nest/nest中的装饰器/media/image_4.png","path":"html/nest/nest中的装饰器/media/image_4.png","modified":0,"renderable":0},{"_id":"source/html/nest/nest的框架特性/media/image.png","path":"html/nest/nest的框架特性/media/image.png","modified":0,"renderable":0},{"_id":"source/html/nest/nest的框架特性/media/image_1.png","path":"html/nest/nest的框架特性/media/image_1.png","modified":0,"renderable":0},{"_id":"source/html/nest/nest的框架特性/media/image_10.png","path":"html/nest/nest的框架特性/media/image_10.png","modified":0,"renderable":0},{"_id":"source/html/nest/nest的框架特性/media/image_11.png","path":"html/nest/nest的框架特性/media/image_11.png","modified":0,"renderable":0},{"_id":"source/html/nest/nest的框架特性/media/image_12.png","path":"html/nest/nest的框架特性/media/image_12.png","modified":0,"renderable":0},{"_id":"source/html/nest/nest的框架特性/media/image_13.png","path":"html/nest/nest的框架特性/media/image_13.png","modified":0,"renderable":0},{"_id":"source/html/nest/nest的框架特性/media/image_2.png","path":"html/nest/nest的框架特性/media/image_2.png","modified":0,"renderable":0},{"_id":"source/html/nest/nest的框架特性/media/image_3.png","path":"html/nest/nest的框架特性/media/image_3.png","modified":0,"renderable":0},{"_id":"source/html/nest/nest的框架特性/media/image_4.png","path":"html/nest/nest的框架特性/media/image_4.png","modified":0,"renderable":0},{"_id":"source/html/nest/nest的框架特性/media/image_5.png","path":"html/nest/nest的框架特性/media/image_5.png","modified":0,"renderable":0},{"_id":"source/html/nest/nest的框架特性/media/image_6.png","path":"html/nest/nest的框架特性/media/image_6.png","modified":0,"renderable":0},{"_id":"source/html/nest/nest的框架特性/media/image_7.png","path":"html/nest/nest的框架特性/media/image_7.png","modified":0,"renderable":0},{"_id":"source/html/nest/nest的框架特性/media/image_8.png","path":"html/nest/nest的框架特性/media/image_8.png","modified":0,"renderable":0},{"_id":"source/html/nest/nest的框架特性/media/image_9.png","path":"html/nest/nest的框架特性/media/image_9.png","modified":0,"renderable":0}],"Cache":[{"_id":"node_modules/hexo-theme-vivia/.gitattributes","hash":"ba3dfe345280bdcc5e817bb02cf49b8b8d8e1c4c","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/LICENSE","hash":"1039079fb6969c255e3df9a411ff5f94702f53ad","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/README.md","hash":"96ea5f5c9fdd46c24a071c1fc44ab6c338047d89","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/package.json","hash":"99c17a9278daba7310d6920960efb70f9e0581df","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/README.zh-CN.md","hash":"276ec37ef46e782b353e5a953a6c9facd4022eaa","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/languages/en-GB.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/_config.yml","hash":"bc429e8233e26aad0b578ec0d5f87bab9156653c","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/languages/en.yml","hash":"b4b55e56a0554bfdc383650742c2038cef777142","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/languages/en-US.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/languages/zh-CN.yml","hash":"89154c7877fa274d340e2adb2241167abda71c60","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/languages/zh-TW.yml","hash":"9098818e791e19d9921e256c771664b2cd999e13","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/example_config.vivia.yml","hash":"92e9b268c3801f8fa97433c462e695a8925f80c1","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/languages/zh.yml","hash":"e56bebd19d2abd1698e9aa87d337941957977468","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/scripts/archive-helper.js","hash":"a0fcc99f909f668c1d3d2dd63e9911266f23fa57","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/scripts/categories-process.js","hash":"dbb502b14015ca19b74db62a590319f790b28711","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/scripts/color-generate.js","hash":"90dff57087b692d2aa687c49980a0eed56a2f058","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/index.ejs","hash":"c9d8dca730a254ab3f48309677a3cb994e513ad6","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/layout.ejs","hash":"d28ff99ec0483e5fc0b932ca36afcbf8eeb75dc4","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_icon/menu.ejs","hash":"47f04d2c6413beaffee57d6164b5637bdb2cd1cb","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_icon/dark_mode.ejs","hash":"0ea0e23fb16103f424591cf46939fcf07738ccc1","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_icon/navigate_before.ejs","hash":"1c11e29aa2719674b161c072e53576ac38b1ee65","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_icon/wb_sunny.ejs","hash":"ef254cc64ba10918218a6672e34fd5f6d4ce08bb","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_icon/navigate_next.ejs","hash":"c3ecb137ebc9bb949aebe3fc0631b05ba578c8e1","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/archive.ejs","hash":"2106e7f5f73c9c8d592dcd7dab4359d23037f382","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/banner.ejs","hash":"7f9c0b7d10238b45c1c1a65df7f801c904ae898c","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/footer.ejs","hash":"e78a36c94879f70df2ec615ccc2b5d459eeb4fe7","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_icon/rss_feed.ejs","hash":"8bac3aa45c0e7a55f38783e7350039d0b1adb48b","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/back-to-top.ejs","hash":"a5132c5ab08b55891bcfe10d36ec83cacbfd60af","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/baidu-analytics.ejs","hash":"5951d0adc0490ff4d5c956e54d4828119755d1e7","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/article.ejs","hash":"5f26c4dfc4ab6336122bfba92faf1630a2549d8d","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/head.ejs","hash":"b52fd8595ec4849944564721810e74948895675f","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_widget/category.ejs","hash":"cc465be58bf6aeee7947e9cf9563c651e42e7a5d","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/sidebar.ejs","hash":"97eee27bfb59ccc109fcd9ce87963f686c2b6ba9","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/navbar.ejs","hash":"7d4a434cba72a3bca58b59fab4ce15894da68049","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_widget/archive.ejs","hash":"1dd3efd775f09f3e5a0e0205ddb8388851dfad57","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_widget/color.ejs","hash":"9e00f6c621db3c5c659b03d1dad6caa90d6217d9","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_widget/recent_posts.ejs","hash":"647f4151e7fca48af2b727228b84deb0652a6376","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_widget/profile.ejs","hash":"ccd8c2442f3437b6752946f4d573edefaf2cd4c0","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_widget/tag.ejs","hash":"f231a62130014c07dc1888ed30399bcfde3ed0c0","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/css/_variables.styl","hash":"376b7ccf4d4ef0706b3e45c059184a41cdde52c7","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/css/style.styl","hash":"a24d0d9ef5f292bfe3382435d23ffe5a6fa76354","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/css/_extend.styl","hash":"cc37f2c5f8ccdb77f87cf8ed35ea71a2d66c9605","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-128.png","hash":"44cceeef5fddc81a613faf6caa53bac139a6b564","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-180.png","hash":"4771a6bd0386924ad31719f8999c036b36ad5688","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-192.png","hash":"929acfdd6e69ceacdecf40a03ed520f826750c06","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-32.png","hash":"8ef87b664e5c6250e5badd7312fe192e30fe2e83","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-128.png","hash":"9c93c4ac222da14ca4f43b2d54573ce4099a161b","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-192.png","hash":"0d5f76f309b6a0661d695d6bf4db8ef8a56e4ae5","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-32.png","hash":"604915a91ddede7874d5dcfa4de0bc4b04ae5da6","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/images/tile.png","hash":"fbc016bfb004a5ca4a8c6f0b078ae320ec98ba20","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/js/color.global.min.js","hash":"8140005be5afebb828b2890ce6e686ece34e78df","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/js/load-settings.js","hash":"f420677aad3d200b4f92fca60ab5cb47c7db9a21","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-180.png","hash":"6b26caab1d036726beaf47510bada4cddf253b24","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/js/script.js","hash":"998ed4c5b147e1299bf62beebf33514474f28112","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/js/light-dark-switch.js","hash":"371eacee9af459d04de60190c549fe7f8374be36","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/post/date.ejs","hash":"760970e719ef973c18ac36c9fc9e13d0edaaaa5a","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/post/gallery.ejs","hash":"0282d116251bd60b91e05c786386e4d570035996","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/post/nav.ejs","hash":"86886e1ca10aec7087b44048f92719d24ac738f4","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/post/category.ejs","hash":"9f06ff87e50ff5005080c6bdebf4a0bbaf550aba","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/css/_util/color.styl","hash":"8ad148e35b7cb2a0612ff2c0fb09c0acc382bb5e","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/archive.styl","hash":"ee7b27115aed0182dc9ac51b637a2bf986b56f55","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/article.styl","hash":"9e8ec0aa97f6a21a54b0bbe29f0943892eb465e3","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/back-to-top.styl","hash":"0889a434c03d9fded8820ebbeaa5357d725766b6","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/header.styl","hash":"83633c613f0d4ad6caa82f87795799edde29fbb8","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/post/title.ejs","hash":"14e34508135bf83763d8c1f1f8d8467dff689002","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/main-title.styl","hash":"73df1241b15d62cc19665883cd789440d4c7e7a6","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/footer.styl","hash":"f038558bfe427b2cedd029cb9638c1d70d936763","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/comment.styl","hash":"08253d81e739c4074d5ae697f2ca9068355dae2c","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/settings.styl","hash":"6e67f8c3659f6a9dd49e513a595a01c1afebf87c","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/sidebar-aside.styl","hash":"04a0c9f6b86d62069a1349fdb7803d745759fe38","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/highlight.styl","hash":"3abb118aae2dba149cb616bbcbfed129ccfcb5b7","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/sidebar.styl","hash":"69a08fe059c5e2ee00760ae61f1123d61d90c39a","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/brands.css","hash":"8c4c541bc40f83787c6987e3ac681e4d3faa54c1","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/brands.min.css","hash":"18b8f500bb4f772c7d7f39c3fab1478a74825339","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/regular.min.css","hash":"659c14600584effc4b93be03a0160b21a90923b8","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/regular.css","hash":"f9334e2a68dce5b03b07148ac9a93c5ad98fe99e","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/solid.min.css","hash":"876c898134a50c7b8e42314fba36fdfef7df3a6e","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/solid.css","hash":"28c2b2461ee1078694ce253ae772f125ae4fa0ac","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/svg-with-js.min.css","hash":"b488e7f51b974eb12138921b606359553e7b6d3d","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/svg-with-js.css","hash":"fb14f74f1ee5072ca4b6d79850616816d57789dd","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/v4-shims.min.css","hash":"791742cd5dd90f208489f835d3924ee325695920","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/v4-shims.css","hash":"2e9933089ede320ba8c67509e0355aab49c5d293","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/v5-font-face.css","hash":"f5fac79059b214cf7e82de28544d9685cc1db3bc","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/v5-font-face.min.css","hash":"9b1d63f200b06ff5c6a306bd4c4404db38e78866","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/v4-font-face.css","hash":"b266ee63ab30304fefbf89faff2bc8d0c61b9149","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/v4-font-face.min.css","hash":"f32930ff09bccce04156af99f31231387af624f6","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/webfonts/fa-regular-400.woff2","hash":"3119676750af0e0bc338cc4aad220bdc72c56cc5","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/webfonts/fa-v4compatibility.woff2","hash":"dd7e4a76de26e9e39168dfac3fbb8a34a87b76bc","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/webfonts/fa-v4compatibility.ttf","hash":"52a84a6495e27f43e9762f2c2a9531d9fe15e9ee","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/webfonts/fa-regular-400.ttf","hash":"dad3ad71b383789bb62c249742ef59e34685e7d0","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/fontawesome.min.css","hash":"24ae04e00c6b58ae5b6dfcf7ca06acb3bd92d7e5","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/all.min.css","hash":"686e3160cff3fb1be2de10779754b40f15948208","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/fontawesome.css","hash":"f1239ac4cd2cf265ed3fa0e5ca8733d9a10ffd68","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/webfonts/fa-brands-400.woff2","hash":"b99813b3c531d8fe90aed3b75d2ed71f8e0c87f4","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1702271784127},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1702257962874},{"_id":"source/about/index.md","hash":"efa48f3f32daef71b87fb5d5734cd62b334fcc0e","modified":1702264984987},{"_id":"source/html/nest/index.html","hash":"013318a3bfdababad7b615032a57dcfbb7ce6fe0","modified":1702269660771},{"_id":"source/html/nest/css/prism.min.css","hash":"762a7d9282dbf6bbf815b77367947c0e647c4ca3","modified":1702268599020},{"_id":"source/html/nest/css/katex.min.css","hash":"21e561bbdb15a06c72dc8053e8b5876a862faa91","modified":1702268599020},{"_id":"source/html/nest/media/icon.svg","hash":"2573a9c33ea0c86a20d61dfe8a3ad1f9aafab2af","modified":1702268599003},{"_id":"source/html/nest/nest快速入门/.DS_Store","hash":"3c3923a9d23e26f4f7fda01cf07b22ce84613208","modified":1702268598981},{"_id":"source/html/nest/css/modern-norm.min.css","hash":"0faa77b89608a80bdbe0e1645e481447fc2faddb","modified":1702268599020},{"_id":"source/html/nest/css/fonts/KaTeX_AMS-Regular.woff2","hash":"5a054f5edee024483f35f5cdf80df8644240b17f","modified":1702268599011},{"_id":"source/html/nest/css/fonts/KaTeX_Fraktur-Regular.woff2","hash":"3ba4ba665fd7b50cec2e1c77196cf3f1378e4838","modified":1702268599013},{"_id":"source/html/nest/css/fonts/KaTeX_Fraktur-Bold.woff2","hash":"1013e3efeb975ed51fe92966ea81bb2a9a6c6c15","modified":1702268599012},{"_id":"source/html/nest/css/fonts/KaTeX_Caligraphic-Bold.woff2","hash":"b9eb1a68d5c0dc88600e2060e14c3213a00a1006","modified":1702268599011},{"_id":"source/html/nest/css/fonts/KaTeX_Main-BoldItalic.woff2","hash":"53e5af6e8fc5e982a1dfb61706e53bbd6e34eba0","modified":1702268599013},{"_id":"source/html/nest/css/fonts/KaTeX_Main-Bold.woff2","hash":"4a5ceb26085756f385c8c88e223c9d3ccca8b0cb","modified":1702268599013},{"_id":"source/html/nest/css/fonts/KaTeX_Main-Italic.woff2","hash":"c3fa9049e2c0cc873002f137d26262373f5d324a","modified":1702268599014},{"_id":"source/html/nest/css/fonts/KaTeX_Caligraphic-Regular.woff2","hash":"411d734acd0e542672df275aba86b652adb37a94","modified":1702268599012},{"_id":"source/html/nest/css/fonts/KaTeX_Math-BoldItalic.woff2","hash":"aed539172dd19f5fc53c690aa15e977474d0fedb","modified":1702268599014},{"_id":"source/html/nest/css/fonts/KaTeX_Main-Regular.woff2","hash":"86e1e697fc2053b6a7301fdd3b1149a57ae8135b","modified":1702268599014},{"_id":"source/html/nest/css/fonts/KaTeX_Math-Italic.woff2","hash":"6e7ed94016e53c8785944adbf599fc99a285342a","modified":1702268599014},{"_id":"source/html/nest/css/fonts/KaTeX_SansSerif-Bold.woff2","hash":"c54471c013cd359431416bf56c142b770845e6ee","modified":1702268599015},{"_id":"source/html/nest/css/fonts/KaTeX_SansSerif-Italic.woff2","hash":"474c722bb80cfc4dc47c9b90efce037bdcd29451","modified":1702268599015},{"_id":"source/html/nest/css/fonts/KaTeX_SansSerif-Regular.woff2","hash":"5f24eb1eb921a9c3d7c5c21b4a10b694474161d9","modified":1702268599018},{"_id":"source/html/nest/css/fonts/KaTeX_Size1-Regular.woff2","hash":"27b0108cd8a1da924d8333ba175ceba4868ff60b","modified":1702268599018},{"_id":"source/html/nest/css/fonts/KaTeX_Size2-Regular.woff2","hash":"f7bdaaddee3b1771446d6a96e9917cd81271c6fe","modified":1702268599018},{"_id":"source/html/nest/css/fonts/KaTeX_Size3-Regular.woff2","hash":"631b4c15a707aa5ca64e73920750b253dc900893","modified":1702268599019},{"_id":"source/html/nest/css/fonts/KaTeX_Size4-Regular.woff2","hash":"50eddc73d52fc19267eb3d38ae00428b4cd4eb93","modified":1702268599019},{"_id":"source/html/nest/css/fonts/KaTeX_Typewriter-Regular.woff2","hash":"d89b773af984fce159a4a9532bc62ada1378337b","modified":1702268599019},{"_id":"source/html/nest/css/fonts/KaTeX_Script-Regular.woff2","hash":"2a2706a57c1882ea2d85a784dba3340300f8065d","modified":1702268599018},{"_id":"source/html/nest/nest快速入门/media/icon.svg","hash":"2573a9c33ea0c86a20d61dfe8a3ad1f9aafab2af","modified":1702268598982},{"_id":"source/html/nest/nest快速入门/media/icon_1.svg","hash":"2573a9c33ea0c86a20d61dfe8a3ad1f9aafab2af","modified":1702268598983},{"_id":"source/html/nest/nest中的装饰器/media/image.png","hash":"ac5452a9cd285dc29ab32c60d1f136e58220fa1d","modified":1702268598993},{"_id":"source/html/nest/nest中的装饰器/media/image_2.png","hash":"f1b950abe584bb9897234d8cf17b464584d8a9b6","modified":1702268598994},{"_id":"source/html/nest/nest的框架特性/media/image_1.png","hash":"ae6de4da880e9d4f68d4ad2a3ab5196b0142c5c4","modified":1702268598957},{"_id":"source/html/nest/nest的框架特性/media/image.png","hash":"22f40c44cda932595bd038a432828a0789ccd5c0","modified":1702268598957},{"_id":"source/html/nest/nest的框架特性/media/image_10.png","hash":"2b45173cbac11f07b06d3adb7b2c86ffb9717d0c","modified":1702268598958},{"_id":"source/html/nest/nest的框架特性/media/image_2.png","hash":"920b948e8580ecf85fd9701bc4d50a3c28e81e1a","modified":1702268598965},{"_id":"source/html/nest/nest的框架特性/media/image_3.png","hash":"ee31bf0c12efbd061a5d1154057b9f46a43c2ff7","modified":1702268598965},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/css/all.css","hash":"e487581ce484a609b9cfe6c6e3faf70f933c7628","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/Roboto-Regular.ttf","hash":"56c5c0d38bde4c1f1549dda43db37b09c608aad3","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/webfonts/fa-brands-400.ttf","hash":"a14a91d8c170fc9e159040f6794369d829e0859e","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/Roboto-Bold.ttf","hash":"62442a18a9fe9457c1afeabf683d263a691b7798","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/webfonts/fa-solid-900.woff2","hash":"c0e6e76b4a02c34656ff2a41b671e02f2821829b","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/Roboto-Medium.ttf","hash":"3c6a09fcc6a454924c81af7dff94fc6d399ed79b","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1702271784127},{"_id":"source/html/nest/css/wolai.css","hash":"64877569944c7ef281fa2dac04166ce8a1ab5082","modified":1702273308592},{"_id":"source/html/nest/nest的框架特性/Nest的框架特性.html","hash":"75c28cf6f06b490c1a7e1a795480637e18e6585a","modified":1702268598956},{"_id":"source/html/nest/nest快速入门/media/nest工作流程.png","hash":"833689ebcbe1bac481589b6c7ff87df365f2d2e0","modified":1702268598983},{"_id":"source/html/nest/nest中的装饰器/media/image_1.png","hash":"944ea8c2ec913992db849ddade2c0fdd0681b11b","modified":1702268598993},{"_id":"source/html/nest/nest中的装饰器/media/image_3.png","hash":"4d1daf773786785db49d766a2c0e47d211f87073","modified":1702268598994},{"_id":"source/html/nest/nest中的装饰器/media/image_4.png","hash":"afc76cdae63088689c6ad0268a44a1bb8f872f80","modified":1702268598994},{"_id":"source/html/nest/nest的框架特性/media/image_4.png","hash":"05a5bcd31c5d44b914a3ea3a960c6d3633b97529","modified":1702268598965},{"_id":"source/html/nest/nest的框架特性/media/image_7.png","hash":"3b276f704f1e6937b701c2865b2e13f1b20ece2f","modified":1702268598971},{"_id":"source/html/nest/nest快速入门/Nest快速入门.html","hash":"9fbf329b203c0f1d515f02608e34e3f9b1c4b5c2","modified":1702268598982},{"_id":"source/html/nest/nest中的装饰器/Nest中的装饰器.html","hash":"da64a48d017d4cb84ab119fcae1ef729ea3828d0","modified":1702272740378},{"_id":"source/html/nest/nest的框架特性/media/image_6.png","hash":"13ca6303812f9eb4be409d76539d82899999a262","modified":1702268598967},{"_id":"source/html/nest/nest的框架特性/media/image_8.png","hash":"02f294361145217544f066c5398fd805ca48b473","modified":1702268598971},{"_id":"source/html/nest/nest的框架特性/media/image_9.png","hash":"61c796e4a4edc93b92512922e45d492d4af08c08","modified":1702268598972},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1702271784127},{"_id":"node_modules/hexo-theme-vivia/source/fontawesome/webfonts/fa-solid-900.ttf","hash":"3eb9b4b2ea22711b96e3b356196fd20b4f17fb0e","modified":1702271784127},{"_id":"source/html/nest/nest的框架特性/media/image_13.png","hash":"d7bbe945e8abb3aa6cffb431c2f9f4e7bae61cb9","modified":1702268598965},{"_id":"source/html/nest/nest的框架特性/media/image_5.png","hash":"be3a1b98ce9417f14ea8ef1bc51cc543c1aeaab4","modified":1702268598967},{"_id":"source/html/nest/nest的框架特性/media/image_12.png","hash":"86c29b9ef82307c29b120b758aeb5df23a891956","modified":1702268598961},{"_id":"source/html/nest/nest的框架特性/media/image_11.png","hash":"03aa8f0fde04de4b3da3b376c58006d92f5c19c2","modified":1702268598960},{"_id":"source/assets/images/banner.jpg","hash":"8326388c2ff3c60a78644df73b5c2d685f25eecb","modified":1702270093744},{"_id":"public/html/nest/css/prism.min.css","hash":"762a7d9282dbf6bbf815b77367947c0e647c4ca3","modified":1702272028905},{"_id":"public/html/nest/css/katex.min.css","hash":"21e561bbdb15a06c72dc8053e8b5876a862faa91","modified":1702272028905},{"_id":"public/html/nest/css/modern-norm.min.css","hash":"0faa77b89608a80bdbe0e1645e481447fc2faddb","modified":1702272028905},{"_id":"public/html/nest/css/wolai.css","hash":"64877569944c7ef281fa2dac04166ce8a1ab5082","modified":1702273323024},{"_id":"public/about/index.html","hash":"91ca1132c503650a0dce97335694c9055ba9a333","modified":1702272028905},{"_id":"public/html/nest/index.html","hash":"206bdb033ab32c1ebd9997ead0b06522451f8ff5","modified":1702272028905},{"_id":"public/2023/12/11/hello-world/index.html","hash":"08f0f93dd3a36d4b033735bb23149db1f68859a2","modified":1702272028905},{"_id":"public/archives/index.html","hash":"a417e41bf8ad8f4a8a30b4d2e12dc0f5b40227d8","modified":1702272028905},{"_id":"public/archives/2023/index.html","hash":"7309067d3e1a78b0ce98ab121cb06373a156383d","modified":1702272028905},{"_id":"public/archives/2023/12/index.html","hash":"7c2d884504806778505214d86957ed11bec26495","modified":1702272028905},{"_id":"public/index.html","hash":"eaef47ef1768e12e99b6f6f49cd2dd8462af5c9a","modified":1702272028905},{"_id":"public/html/nest/nest快速入门/Nest快速入门.html","hash":"6ab3850887fe3464ddab30a5215210b9f61e5b8b","modified":1702272028905},{"_id":"public/html/nest/nest的框架特性/Nest的框架特性.html","hash":"fb6d01013dfc22e85a7f80addc026c3f02044adb","modified":1702272028905},{"_id":"public/html/nest/nest中的装饰器/Nest中的装饰器.html","hash":"97040facc7777ef822ea466128b544e4e893b2fb","modified":1702272744600},{"_id":"public/images/favicon-dark-128.png","hash":"44cceeef5fddc81a613faf6caa53bac139a6b564","modified":1702272028905},{"_id":"public/images/favicon-dark-180.png","hash":"4771a6bd0386924ad31719f8999c036b36ad5688","modified":1702272028905},{"_id":"public/images/favicon-dark-192.png","hash":"929acfdd6e69ceacdecf40a03ed520f826750c06","modified":1702272028905},{"_id":"public/images/favicon-light-128.png","hash":"9c93c4ac222da14ca4f43b2d54573ce4099a161b","modified":1702272028905},{"_id":"public/images/favicon-light-180.png","hash":"6b26caab1d036726beaf47510bada4cddf253b24","modified":1702272028905},{"_id":"public/images/favicon-light-192.png","hash":"0d5f76f309b6a0661d695d6bf4db8ef8a56e4ae5","modified":1702272028905},{"_id":"public/images/favicon-light-32.png","hash":"604915a91ddede7874d5dcfa4de0bc4b04ae5da6","modified":1702272028905},{"_id":"public/images/tile.png","hash":"fbc016bfb004a5ca4a8c6f0b078ae320ec98ba20","modified":1702272028905},{"_id":"public/fontawesome/webfonts/fa-regular-400.ttf","hash":"dad3ad71b383789bb62c249742ef59e34685e7d0","modified":1702272028905},{"_id":"public/fontawesome/webfonts/fa-regular-400.woff2","hash":"3119676750af0e0bc338cc4aad220bdc72c56cc5","modified":1702272028905},{"_id":"public/fontawesome/webfonts/fa-v4compatibility.ttf","hash":"52a84a6495e27f43e9762f2c2a9531d9fe15e9ee","modified":1702272028905},{"_id":"public/fontawesome/webfonts/fa-v4compatibility.woff2","hash":"dd7e4a76de26e9e39168dfac3fbb8a34a87b76bc","modified":1702272028905},{"_id":"public/html/nest/media/icon.svg","hash":"2573a9c33ea0c86a20d61dfe8a3ad1f9aafab2af","modified":1702272028905},{"_id":"public/html/nest/css/fonts/KaTeX_AMS-Regular.woff2","hash":"5a054f5edee024483f35f5cdf80df8644240b17f","modified":1702272028905},{"_id":"public/html/nest/css/fonts/KaTeX_Caligraphic-Bold.woff2","hash":"b9eb1a68d5c0dc88600e2060e14c3213a00a1006","modified":1702272028905},{"_id":"public/html/nest/css/fonts/KaTeX_Caligraphic-Regular.woff2","hash":"411d734acd0e542672df275aba86b652adb37a94","modified":1702272028905},{"_id":"public/html/nest/css/fonts/KaTeX_Fraktur-Bold.woff2","hash":"1013e3efeb975ed51fe92966ea81bb2a9a6c6c15","modified":1702272028905},{"_id":"public/html/nest/css/fonts/KaTeX_Fraktur-Regular.woff2","hash":"3ba4ba665fd7b50cec2e1c77196cf3f1378e4838","modified":1702272028905},{"_id":"public/html/nest/css/fonts/KaTeX_Main-Bold.woff2","hash":"4a5ceb26085756f385c8c88e223c9d3ccca8b0cb","modified":1702272028905},{"_id":"public/html/nest/css/fonts/KaTeX_Main-BoldItalic.woff2","hash":"53e5af6e8fc5e982a1dfb61706e53bbd6e34eba0","modified":1702272028905},{"_id":"public/html/nest/css/fonts/KaTeX_Main-Italic.woff2","hash":"c3fa9049e2c0cc873002f137d26262373f5d324a","modified":1702272028905},{"_id":"public/html/nest/css/fonts/KaTeX_Math-BoldItalic.woff2","hash":"aed539172dd19f5fc53c690aa15e977474d0fedb","modified":1702272028905},{"_id":"public/html/nest/css/fonts/KaTeX_Math-Italic.woff2","hash":"6e7ed94016e53c8785944adbf599fc99a285342a","modified":1702272028905},{"_id":"public/html/nest/css/fonts/KaTeX_Main-Regular.woff2","hash":"86e1e697fc2053b6a7301fdd3b1149a57ae8135b","modified":1702272028905},{"_id":"public/html/nest/css/fonts/KaTeX_SansSerif-Bold.woff2","hash":"c54471c013cd359431416bf56c142b770845e6ee","modified":1702272028905},{"_id":"public/html/nest/css/fonts/KaTeX_SansSerif-Italic.woff2","hash":"474c722bb80cfc4dc47c9b90efce037bdcd29451","modified":1702272028905},{"_id":"public/html/nest/css/fonts/KaTeX_SansSerif-Regular.woff2","hash":"5f24eb1eb921a9c3d7c5c21b4a10b694474161d9","modified":1702272028905},{"_id":"public/html/nest/css/fonts/KaTeX_Script-Regular.woff2","hash":"2a2706a57c1882ea2d85a784dba3340300f8065d","modified":1702272028905},{"_id":"public/html/nest/css/fonts/KaTeX_Size1-Regular.woff2","hash":"27b0108cd8a1da924d8333ba175ceba4868ff60b","modified":1702272028905},{"_id":"public/html/nest/css/fonts/KaTeX_Size2-Regular.woff2","hash":"f7bdaaddee3b1771446d6a96e9917cd81271c6fe","modified":1702272028905},{"_id":"public/html/nest/css/fonts/KaTeX_Size3-Regular.woff2","hash":"631b4c15a707aa5ca64e73920750b253dc900893","modified":1702272028905},{"_id":"public/html/nest/css/fonts/KaTeX_Size4-Regular.woff2","hash":"50eddc73d52fc19267eb3d38ae00428b4cd4eb93","modified":1702272028905},{"_id":"public/html/nest/css/fonts/KaTeX_Typewriter-Regular.woff2","hash":"d89b773af984fce159a4a9532bc62ada1378337b","modified":1702272028905},{"_id":"public/html/nest/nest快速入门/media/icon.svg","hash":"2573a9c33ea0c86a20d61dfe8a3ad1f9aafab2af","modified":1702272028905},{"_id":"public/html/nest/nest快速入门/media/icon_1.svg","hash":"2573a9c33ea0c86a20d61dfe8a3ad1f9aafab2af","modified":1702272028905},{"_id":"public/images/favicon-dark-32.png","hash":"8ef87b664e5c6250e5badd7312fe192e30fe2e83","modified":1702272028905},{"_id":"public/html/nest/nest中的装饰器/media/image.png","hash":"ac5452a9cd285dc29ab32c60d1f136e58220fa1d","modified":1702272028905},{"_id":"public/html/nest/nest中的装饰器/media/image_2.png","hash":"f1b950abe584bb9897234d8cf17b464584d8a9b6","modified":1702272028905},{"_id":"public/html/nest/nest的框架特性/media/image.png","hash":"22f40c44cda932595bd038a432828a0789ccd5c0","modified":1702272028905},{"_id":"public/html/nest/nest的框架特性/media/image_1.png","hash":"ae6de4da880e9d4f68d4ad2a3ab5196b0142c5c4","modified":1702272028905},{"_id":"public/html/nest/nest的框架特性/media/image_10.png","hash":"2b45173cbac11f07b06d3adb7b2c86ffb9717d0c","modified":1702272028905},{"_id":"public/html/nest/nest的框架特性/media/image_2.png","hash":"920b948e8580ecf85fd9701bc4d50a3c28e81e1a","modified":1702272028905},{"_id":"public/html/nest/nest的框架特性/media/image_3.png","hash":"ee31bf0c12efbd061a5d1154057b9f46a43c2ff7","modified":1702272028905},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1702272028905},{"_id":"public/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1702272028905},{"_id":"public/fontawesome/webfonts/fa-brands-400.woff2","hash":"b99813b3c531d8fe90aed3b75d2ed71f8e0c87f4","modified":1702272028905},{"_id":"public/html/nest/nest快速入门/media/nest工作流程.png","hash":"833689ebcbe1bac481589b6c7ff87df365f2d2e0","modified":1702272028905},{"_id":"public/html/nest/nest中的装饰器/media/image_1.png","hash":"944ea8c2ec913992db849ddade2c0fdd0681b11b","modified":1702272028905},{"_id":"public/html/nest/nest中的装饰器/media/image_4.png","hash":"afc76cdae63088689c6ad0268a44a1bb8f872f80","modified":1702272028905},{"_id":"public/html/nest/nest的框架特性/media/image_4.png","hash":"05a5bcd31c5d44b914a3ea3a960c6d3633b97529","modified":1702272028905},{"_id":"public/html/nest/nest中的装饰器/media/image_3.png","hash":"4d1daf773786785db49d766a2c0e47d211f87073","modified":1702272028905},{"_id":"public/html/nest/nest的框架特性/media/image_7.png","hash":"3b276f704f1e6937b701c2865b2e13f1b20ece2f","modified":1702272028905},{"_id":"public/js/light-dark-switch.js","hash":"371eacee9af459d04de60190c549fe7f8374be36","modified":1702272028905},{"_id":"public/js/load-settings.js","hash":"f420677aad3d200b4f92fca60ab5cb47c7db9a21","modified":1702272028905},{"_id":"public/js/script.js","hash":"998ed4c5b147e1299bf62beebf33514474f28112","modified":1702272028905},{"_id":"public/fontawesome/css/regular.min.css","hash":"659c14600584effc4b93be03a0160b21a90923b8","modified":1702272028905},{"_id":"public/fontawesome/css/solid.min.css","hash":"876c898134a50c7b8e42314fba36fdfef7df3a6e","modified":1702272028905},{"_id":"public/fontawesome/css/regular.css","hash":"f9334e2a68dce5b03b07148ac9a93c5ad98fe99e","modified":1702272028905},{"_id":"public/fontawesome/css/solid.css","hash":"28c2b2461ee1078694ce253ae772f125ae4fa0ac","modified":1702272028905},{"_id":"public/fontawesome/css/v4-font-face.css","hash":"b266ee63ab30304fefbf89faff2bc8d0c61b9149","modified":1702272028905},{"_id":"public/fontawesome/css/v4-font-face.min.css","hash":"f32930ff09bccce04156af99f31231387af624f6","modified":1702272028905},{"_id":"public/fontawesome/css/v5-font-face.css","hash":"f5fac79059b214cf7e82de28544d9685cc1db3bc","modified":1702272028905},{"_id":"public/fontawesome/css/v5-font-face.min.css","hash":"9b1d63f200b06ff5c6a306bd4c4404db38e78866","modified":1702272028905},{"_id":"public/css/style.css","hash":"ebd408590e46c9fdec08f81a8a41e51adb6977b6","modified":1702272028905},{"_id":"public/js/color.global.min.js","hash":"8140005be5afebb828b2890ce6e686ece34e78df","modified":1702272028905},{"_id":"public/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1702272028905},{"_id":"public/fontawesome/css/brands.css","hash":"8c4c541bc40f83787c6987e3ac681e4d3faa54c1","modified":1702272028905},{"_id":"public/fontawesome/css/brands.min.css","hash":"18b8f500bb4f772c7d7f39c3fab1478a74825339","modified":1702272028905},{"_id":"public/fontawesome/css/all.min.css","hash":"686e3160cff3fb1be2de10779754b40f15948208","modified":1702272028905},{"_id":"public/fontawesome/css/all.css","hash":"e487581ce484a609b9cfe6c6e3faf70f933c7628","modified":1702272028905},{"_id":"public/fontawesome/css/fontawesome.css","hash":"f1239ac4cd2cf265ed3fa0e5ca8733d9a10ffd68","modified":1702272028905},{"_id":"public/fontawesome/css/svg-with-js.css","hash":"fb14f74f1ee5072ca4b6d79850616816d57789dd","modified":1702272028905},{"_id":"public/fontawesome/css/fontawesome.min.css","hash":"24ae04e00c6b58ae5b6dfcf7ca06acb3bd92d7e5","modified":1702272028905},{"_id":"public/fontawesome/css/v4-shims.css","hash":"2e9933089ede320ba8c67509e0355aab49c5d293","modified":1702272028905},{"_id":"public/fontawesome/css/svg-with-js.min.css","hash":"b488e7f51b974eb12138921b606359553e7b6d3d","modified":1702272028905},{"_id":"public/fontawesome/css/v4-shims.min.css","hash":"791742cd5dd90f208489f835d3924ee325695920","modified":1702272028905},{"_id":"public/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1702272028905},{"_id":"public/css/fonts/Roboto-Bold.ttf","hash":"62442a18a9fe9457c1afeabf683d263a691b7798","modified":1702272028905},{"_id":"public/css/fonts/Roboto-Medium.ttf","hash":"3c6a09fcc6a454924c81af7dff94fc6d399ed79b","modified":1702272028905},{"_id":"public/css/fonts/Roboto-Regular.ttf","hash":"56c5c0d38bde4c1f1549dda43db37b09c608aad3","modified":1702272028905},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1702272028905},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1702272028905},{"_id":"public/fontawesome/webfonts/fa-brands-400.ttf","hash":"a14a91d8c170fc9e159040f6794369d829e0859e","modified":1702272028905},{"_id":"public/fontawesome/webfonts/fa-solid-900.woff2","hash":"c0e6e76b4a02c34656ff2a41b671e02f2821829b","modified":1702272028905},{"_id":"public/html/nest/nest的框架特性/media/image_6.png","hash":"13ca6303812f9eb4be409d76539d82899999a262","modified":1702272028905},{"_id":"public/html/nest/nest的框架特性/media/image_8.png","hash":"02f294361145217544f066c5398fd805ca48b473","modified":1702272028905},{"_id":"public/html/nest/nest的框架特性/media/image_9.png","hash":"61c796e4a4edc93b92512922e45d492d4af08c08","modified":1702272028905},{"_id":"public/html/nest/nest的框架特性/media/image_13.png","hash":"d7bbe945e8abb3aa6cffb431c2f9f4e7bae61cb9","modified":1702272028905},{"_id":"public/html/nest/nest的框架特性/media/image_5.png","hash":"be3a1b98ce9417f14ea8ef1bc51cc543c1aeaab4","modified":1702272028905},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1702272028905},{"_id":"public/fontawesome/webfonts/fa-solid-900.ttf","hash":"3eb9b4b2ea22711b96e3b356196fd20b4f17fb0e","modified":1702272028905},{"_id":"public/html/nest/nest的框架特性/media/image_12.png","hash":"86c29b9ef82307c29b120b758aeb5df23a891956","modified":1702272028905},{"_id":"public/html/nest/nest的框架特性/media/image_11.png","hash":"03aa8f0fde04de4b3da3b376c58006d92f5c19c2","modified":1702272028905},{"_id":"public/assets/images/banner.jpg","hash":"8326388c2ff3c60a78644df73b5c2d685f25eecb","modified":1702272028905},{"_id":"source/html/nest/css/style.css","hash":"62fc39ebcbf9bc5f4c81e21fd18e077a9f3ebe23","modified":1702272288849},{"_id":"public/html/nest/css/style.css","hash":"62fc39ebcbf9bc5f4c81e21fd18e077a9f3ebe23","modified":1702272293493}],"Category":[],"Data":[],"Page":[{"title":"about","date":"2023-12-11T03:23:04.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2023-12-11 11:23:04\n---\n","updated":"2023-12-11T03:23:04.987Z","path":"about/index.html","comments":1,"layout":"page","_id":"clq0gtc9r0000zqq9ej8fdx4l","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"_content":"code[class*=\"language-\"],\npre[class*=\"language-\"] {\n    color          : #000;\n    background     : 0 0;\n    text-shadow    : 0 1px #fff;\n    font-family    : Consolas, Monaco, \"Andale Mono\", \"Ubuntu Mono\", monospace;\n    font-size      : 1em;\n    text-align     : left;\n    white-space    : pre;\n    word-spacing   : normal;\n    word-break     : normal;\n    word-wrap      : normal;\n    line-height    : 1.5;\n    -moz-tab-size  : 4;\n    -o-tab-size    : 4;\n    tab-size       : 4;\n    -webkit-hyphens: none;\n    -moz-hyphens   : none;\n    -ms-hyphens    : none;\n    hyphens        : none;\n}\n\ncode[class*=\"language-\"] ::-moz-selection,\ncode[class*=\"language-\"]::-moz-selection,\npre[class*=\"language-\"] ::-moz-selection,\npre[class*=\"language-\"]::-moz-selection {\n    text-shadow: none;\n    background : #b3d4fc;\n}\n\ncode[class*=\"language-\"] ::selection,\ncode[class*=\"language-\"]::selection,\npre[class*=\"language-\"] ::selection,\npre[class*=\"language-\"]::selection {\n    text-shadow: none;\n    background : #b3d4fc;\n}\n\n@media print {\n\n    code[class*=\"language-\"],\n    pre[class*=\"language-\"] {\n        text-shadow: none;\n    }\n}\n\npre[class*=\"language-\"] {\n    padding : 1em;\n    margin  : 0.5em 0;\n    overflow: auto;\n}\n\n:not(pre)>code[class*=\"language-\"],\npre[class*=\"language-\"] {\n    background: #f5f2f0;\n}\n\n:not(pre)>code[class*=\"language-\"] {\n    padding      : 0.1em;\n    border-radius: 0.3em;\n    white-space  : normal;\n}\n\n.token.cdata,\n.token.comment,\n.token.doctype,\n.token.prolog {\n    color: #909faf;\n}\n\n.token.punctuation {\n    color: #999;\n}\n\n.token.namespace {\n    opacity: 0.7;\n}\n\n.token.boolean,\n.token.constant,\n.token.deleted,\n.token.number,\n.token.property,\n.token.symbol,\n.token.tag {\n    color: #905;\n}\n\n.token.attr-name,\n.token.builtin,\n.token.char,\n.token.inserted,\n.token.selector,\n.token.string {\n    color: #690;\n}\n\n.language-css .token.string,\n.style .token.string,\n.token.entity,\n.token.operator,\n.token.url {\n    color     : #9a6e3a;\n    background: hsla(0, 0%, 100%, 0.5);\n}\n\n.token.atrule,\n.token.attr-value,\n.token.keyword {\n    color: #07a;\n}\n\n.token.class-name,\n.token.function {\n    color: #dd4a68;\n}\n\n.token.important,\n.token.regex,\n.token.variable {\n    color: #e90;\n}\n\n.token.bold,\n.token.important {\n    font-weight: 700;\n}\n\n.token.italic {\n    font-style: italic;\n}\n\n.token.entity {\n    cursor: help;\n}","source":"html/nest/css/prism.min.css","raw":"code[class*=\"language-\"],\npre[class*=\"language-\"] {\n    color          : #000;\n    background     : 0 0;\n    text-shadow    : 0 1px #fff;\n    font-family    : Consolas, Monaco, \"Andale Mono\", \"Ubuntu Mono\", monospace;\n    font-size      : 1em;\n    text-align     : left;\n    white-space    : pre;\n    word-spacing   : normal;\n    word-break     : normal;\n    word-wrap      : normal;\n    line-height    : 1.5;\n    -moz-tab-size  : 4;\n    -o-tab-size    : 4;\n    tab-size       : 4;\n    -webkit-hyphens: none;\n    -moz-hyphens   : none;\n    -ms-hyphens    : none;\n    hyphens        : none;\n}\n\ncode[class*=\"language-\"] ::-moz-selection,\ncode[class*=\"language-\"]::-moz-selection,\npre[class*=\"language-\"] ::-moz-selection,\npre[class*=\"language-\"]::-moz-selection {\n    text-shadow: none;\n    background : #b3d4fc;\n}\n\ncode[class*=\"language-\"] ::selection,\ncode[class*=\"language-\"]::selection,\npre[class*=\"language-\"] ::selection,\npre[class*=\"language-\"]::selection {\n    text-shadow: none;\n    background : #b3d4fc;\n}\n\n@media print {\n\n    code[class*=\"language-\"],\n    pre[class*=\"language-\"] {\n        text-shadow: none;\n    }\n}\n\npre[class*=\"language-\"] {\n    padding : 1em;\n    margin  : 0.5em 0;\n    overflow: auto;\n}\n\n:not(pre)>code[class*=\"language-\"],\npre[class*=\"language-\"] {\n    background: #f5f2f0;\n}\n\n:not(pre)>code[class*=\"language-\"] {\n    padding      : 0.1em;\n    border-radius: 0.3em;\n    white-space  : normal;\n}\n\n.token.cdata,\n.token.comment,\n.token.doctype,\n.token.prolog {\n    color: #909faf;\n}\n\n.token.punctuation {\n    color: #999;\n}\n\n.token.namespace {\n    opacity: 0.7;\n}\n\n.token.boolean,\n.token.constant,\n.token.deleted,\n.token.number,\n.token.property,\n.token.symbol,\n.token.tag {\n    color: #905;\n}\n\n.token.attr-name,\n.token.builtin,\n.token.char,\n.token.inserted,\n.token.selector,\n.token.string {\n    color: #690;\n}\n\n.language-css .token.string,\n.style .token.string,\n.token.entity,\n.token.operator,\n.token.url {\n    color     : #9a6e3a;\n    background: hsla(0, 0%, 100%, 0.5);\n}\n\n.token.atrule,\n.token.attr-value,\n.token.keyword {\n    color: #07a;\n}\n\n.token.class-name,\n.token.function {\n    color: #dd4a68;\n}\n\n.token.important,\n.token.regex,\n.token.variable {\n    color: #e90;\n}\n\n.token.bold,\n.token.important {\n    font-weight: 700;\n}\n\n.token.italic {\n    font-style: italic;\n}\n\n.token.entity {\n    cursor: help;\n}","date":"2023-12-11T04:23:19.020Z","updated":"2023-12-11T04:23:19.020Z","path":"html/nest/css/prism.min.css","layout":"false","title":"","comments":1,"_id":"clq0gtc9t0001zqq9gk4papyh","content":"code[class*=\"language-\"],\npre[class*=\"language-\"] {\n    color          : #000;\n    background     : 0 0;\n    text-shadow    : 0 1px #fff;\n    font-family    : Consolas, Monaco, \"Andale Mono\", \"Ubuntu Mono\", monospace;\n    font-size      : 1em;\n    text-align     : left;\n    white-space    : pre;\n    word-spacing   : normal;\n    word-break     : normal;\n    word-wrap      : normal;\n    line-height    : 1.5;\n    -moz-tab-size  : 4;\n    -o-tab-size    : 4;\n    tab-size       : 4;\n    -webkit-hyphens: none;\n    -moz-hyphens   : none;\n    -ms-hyphens    : none;\n    hyphens        : none;\n}\n\ncode[class*=\"language-\"] ::-moz-selection,\ncode[class*=\"language-\"]::-moz-selection,\npre[class*=\"language-\"] ::-moz-selection,\npre[class*=\"language-\"]::-moz-selection {\n    text-shadow: none;\n    background : #b3d4fc;\n}\n\ncode[class*=\"language-\"] ::selection,\ncode[class*=\"language-\"]::selection,\npre[class*=\"language-\"] ::selection,\npre[class*=\"language-\"]::selection {\n    text-shadow: none;\n    background : #b3d4fc;\n}\n\n@media print {\n\n    code[class*=\"language-\"],\n    pre[class*=\"language-\"] {\n        text-shadow: none;\n    }\n}\n\npre[class*=\"language-\"] {\n    padding : 1em;\n    margin  : 0.5em 0;\n    overflow: auto;\n}\n\n:not(pre)>code[class*=\"language-\"],\npre[class*=\"language-\"] {\n    background: #f5f2f0;\n}\n\n:not(pre)>code[class*=\"language-\"] {\n    padding      : 0.1em;\n    border-radius: 0.3em;\n    white-space  : normal;\n}\n\n.token.cdata,\n.token.comment,\n.token.doctype,\n.token.prolog {\n    color: #909faf;\n}\n\n.token.punctuation {\n    color: #999;\n}\n\n.token.namespace {\n    opacity: 0.7;\n}\n\n.token.boolean,\n.token.constant,\n.token.deleted,\n.token.number,\n.token.property,\n.token.symbol,\n.token.tag {\n    color: #905;\n}\n\n.token.attr-name,\n.token.builtin,\n.token.char,\n.token.inserted,\n.token.selector,\n.token.string {\n    color: #690;\n}\n\n.language-css .token.string,\n.style .token.string,\n.token.entity,\n.token.operator,\n.token.url {\n    color     : #9a6e3a;\n    background: hsla(0, 0%, 100%, 0.5);\n}\n\n.token.atrule,\n.token.attr-value,\n.token.keyword {\n    color: #07a;\n}\n\n.token.class-name,\n.token.function {\n    color: #dd4a68;\n}\n\n.token.important,\n.token.regex,\n.token.variable {\n    color: #e90;\n}\n\n.token.bold,\n.token.important {\n    font-weight: 700;\n}\n\n.token.italic {\n    font-style: italic;\n}\n\n.token.entity {\n    cursor: help;\n}","site":{"data":{}},"length":232,"excerpt":"","more":"code[class*=\"language-\"],\npre[class*=\"language-\"] {\n    color          : #000;\n    background     : 0 0;\n    text-shadow    : 0 1px #fff;\n    font-family    : Consolas, Monaco, \"Andale Mono\", \"Ubuntu Mono\", monospace;\n    font-size      : 1em;\n    text-align     : left;\n    white-space    : pre;\n    word-spacing   : normal;\n    word-break     : normal;\n    word-wrap      : normal;\n    line-height    : 1.5;\n    -moz-tab-size  : 4;\n    -o-tab-size    : 4;\n    tab-size       : 4;\n    -webkit-hyphens: none;\n    -moz-hyphens   : none;\n    -ms-hyphens    : none;\n    hyphens        : none;\n}\n\ncode[class*=\"language-\"] ::-moz-selection,\ncode[class*=\"language-\"]::-moz-selection,\npre[class*=\"language-\"] ::-moz-selection,\npre[class*=\"language-\"]::-moz-selection {\n    text-shadow: none;\n    background : #b3d4fc;\n}\n\ncode[class*=\"language-\"] ::selection,\ncode[class*=\"language-\"]::selection,\npre[class*=\"language-\"] ::selection,\npre[class*=\"language-\"]::selection {\n    text-shadow: none;\n    background : #b3d4fc;\n}\n\n@media print {\n\n    code[class*=\"language-\"],\n    pre[class*=\"language-\"] {\n        text-shadow: none;\n    }\n}\n\npre[class*=\"language-\"] {\n    padding : 1em;\n    margin  : 0.5em 0;\n    overflow: auto;\n}\n\n:not(pre)>code[class*=\"language-\"],\npre[class*=\"language-\"] {\n    background: #f5f2f0;\n}\n\n:not(pre)>code[class*=\"language-\"] {\n    padding      : 0.1em;\n    border-radius: 0.3em;\n    white-space  : normal;\n}\n\n.token.cdata,\n.token.comment,\n.token.doctype,\n.token.prolog {\n    color: #909faf;\n}\n\n.token.punctuation {\n    color: #999;\n}\n\n.token.namespace {\n    opacity: 0.7;\n}\n\n.token.boolean,\n.token.constant,\n.token.deleted,\n.token.number,\n.token.property,\n.token.symbol,\n.token.tag {\n    color: #905;\n}\n\n.token.attr-name,\n.token.builtin,\n.token.char,\n.token.inserted,\n.token.selector,\n.token.string {\n    color: #690;\n}\n\n.language-css .token.string,\n.style .token.string,\n.token.entity,\n.token.operator,\n.token.url {\n    color     : #9a6e3a;\n    background: hsla(0, 0%, 100%, 0.5);\n}\n\n.token.atrule,\n.token.attr-value,\n.token.keyword {\n    color: #07a;\n}\n\n.token.class-name,\n.token.function {\n    color: #dd4a68;\n}\n\n.token.important,\n.token.regex,\n.token.variable {\n    color: #e90;\n}\n\n.token.bold,\n.token.important {\n    font-weight: 700;\n}\n\n.token.italic {\n    font-style: italic;\n}\n\n.token.entity {\n    cursor: help;\n}"},{"_content":"<!DOCTYPE html>\n<html lang=\"zh-Hans-CN\"><head><meta charset=\"utf-8\"/><meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/modern-norm.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/prism.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/katex.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/wolai.css\"/><title>Nest快速入门 - wolai 笔记</title><link rel=\"shortcut icon\" href=\"media/icon_1.svg\"></link></head><body class=\"more-lead\"><header><div class=\"image has\" style=\"background-position-y: 50%; background-image: url(&quot;https://cdn.wostatic.cn/cover/watercolor/3VMGfCa8UCpJ4Dy36jMNKa.jpg&quot;)\"></div><div class=\"title\"><div class=\"banner\"><div class=\"icon icon-image\" style=\"background-image: url(&quot;media/icon.svg&quot;)\"></div></div><div data-title=\"Nest快速入门\" class=\"main-title\"></div></div></header><article><h2 id=\"a1uYtFztFiFWjQkag7tYSF\" class=\"wolai-block\"><span class=\"inline-wrap\">背景</span></h2><h3 id=\"2iiyyJ4VXgZxP7VYJ3TJEe\" class=\"wolai-block\"><span class=\"inline-wrap\">全栈</span></h3><div id=\"rNfBe4qzEvxuvxE2XEbazd\" class=\"wolai-block wolai-text\"><div><span class=\"red inline-wrap\">发展全栈</span><span class=\"inline-wrap\">对公司和个人都大有益处，但最重要的还是对个人的发展如何。个人发展全栈主要还是为了应对未来，主要有几方面： 避免被淘汰、 提升个人价值、 走向管理职位、 实现创业梦。\n从个人为出发点，后端语言百花齐放，想要到一个比较深入的程度，那对所使用的开发语言、框架就需要稍微深入了。例如同时要深入<span class=\"jill\"></span>typescript、Java<span class=\"jill\"></span>的领域，那就会谈到精力问题，对个人来说似乎会很累，不太现实。</span></div></div><div id=\"dNVX1Zw72DNunVMHVer1Bv\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"vTj3PN5xW51TBHb1gAfTJE\" class=\"wolai-block\"><span class=\"inline-wrap\">NestJS</span></h3><div id=\"mFMJbA7fiswLxZFxjs6sCR\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">根据官网介绍：</span></div></div><blockquote id=\"csa4o4BUrgL7sYwrwviWQ9\" class=\"wolai-block\"><span class=\"inline-wrap\"><a href=\"https://docs.nestjs.cn/9/introduction\"><span class=\"red\">Nest (NestJS)</span></a></span><span class=\"inline-wrap\"> 是一个用于构建高效、可扩展的</span><span class=\"blue inline-wrap\"> </span><span class=\"inline-wrap\"><a href=\"https://nodejs.org/en/\"><span class=\"blue\">Node.js</span></a></span><span class=\"inline-wrap\"> 服务器端应用程序的开发框架。它利用<span class=\"jill\"></span>JavaScript 的渐进增强的能力，使用并完全支持 </span><span class=\"inline-wrap\"><a href=\"https://www.typescriptlang.org/\"><span class=\"blue\">TypeScript</span></a></span><span class=\"inline-wrap\"> （仍然允许开发者使用纯 JavaScript 进行开发），并结合了 OOP （面向对象编程）、FP （函数式编程）和 FRP （函数响应式编程）。</span></blockquote><div id=\"2t7XfBkTDUDuUnVXQyJEov\" class=\"wolai-block wolai-text\"><div><span class=\"red inline-wrap\">NestJS</span><span class=\"inline-wrap\"> 的一些</span><span class=\"inline-wrap\"><b>优势</b></span><span class=\"inline-wrap\">包括：</span></div></div><ul class=\"wolai-block\"><li id=\"x26B2f6QXtw18djiHcyCUz\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">构建在现代 JavaScript 栈之上，完全支持 TypeScript。</span></li><li id=\"f8gyHZnWYUSR6Gp7bA3r3X\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">基于 TypeScript，提供了</span><span class=\"inline-wrap\"><b>强类型和静态类型检查</b></span><span class=\"inline-wrap\">。</span></li><li id=\"dYvG1ygHryQbL6nZ3ZX7NQ\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">基于 Angular 的架构和语法，提供了强大的</span><span class=\"inline-wrap\"><b>模块化</b></span><span class=\"inline-wrap\">系统和</span><span class=\"inline-wrap\"><b>依赖注入</b></span><span class=\"inline-wrap\">功能。</span></li><li id=\"fqW4pZS4g6LKE8WuhcqZCH\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">提供了丰富的工具和模块，可用于构建各种类型的服务器端应用程序，包括 </span><span class=\"inline-wrap\"><b>RESTful API</b></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><b>GraphQL API</b></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><b>WebSocket 服务器</b></span><span class=\"inline-wrap\">等。</span></li><li id=\"8kbkCtiNrFD1mDah6Na1ZT\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">提供了一组可扩展的构建块，可用于快速构建应用程序。</span></li><li id=\"53cv5CExTcPbShMUZrfcAw\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">提供了与</span><span class=\"inline-wrap\"><b>主流数据库和身份验证系统</b></span><span class=\"inline-wrap\">的集成。</span></li></ul><div id=\"aMYXzPgbgRtY9UwbN7JRKb\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">对于前端人员来说，“一招<span class=\"jill\"></span>Typescript”吃遍前后端，何乐而不为。</span></div></div><div id=\"t1Kny6NdW3D3gAPFy5UZza\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"gfWAckkx1vMWubhqGyKCi8\" class=\"wolai-block\"><span class=\"inline-wrap\">前期准备</span></h2><h3 id=\"fYdFXJXZ5USEMGwLepasPa\" class=\"wolai-block\"><span class=\"inline-wrap\">项目初始化</span></h3><div id=\"f4sTWj3XAtj7MrfMK18oMY\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">确保已经安装了 </span><span class=\"inline-wrap\"><a href=\"https://nodejs.org/\"><span>Node.js</span></a></span><span class=\"inline-wrap\">（版本 &gt;= 12，v13 除外）</span></div></div><code-block id=\"mFKWA1ZpgZ6w69BXSdCdmo\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Bash\" class=\"marker\"></div><pre>$ <span class=\"token function\">npm</span> i <span class=\"token parameter variable\">-g</span> @nestjs/cli \n$ nest new project-name</pre></div></code-block><h3 id=\"27GR4p5NSjNFuhDYmGFh81\" class=\"wolai-block\"><span class=\"inline-wrap\">运行项目</span></h3><div id=\"8e1JnYkDG4KG7Vbd8R1mBo\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">启动 HTTP 服务监听定义在 src/main.ts 文件中定义的端口号。在浏览器访问</span><span class=\"inline-wrap\"><code>[http://localhost:3000](http://localhost:3000/)/</code></span><span class=\"inline-wrap\">，访问成功代表服务已经<span class=\"jill\"></span>OK<span class=\"jill\"></span>了；</span></div></div><code-block id=\"xz5ySJsu6vB8JXeeD69bxj\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Bash\" class=\"marker\"></div><pre><span class=\"token comment\"># dev为热更新模式</span>\n$ <span class=\"token function\">npm</span> run start:dev</pre></div></code-block><div id=\"7VgkYyTik3S3XVZaSH8MJM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"hR2z7zBQpPyDK4NWaTWpip\" class=\"wolai-block\"><span class=\"inline-wrap\">框架约束</span></h3><div id=\"4XZve4qTxCGbkdAEzojv8u\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><b>NestJS<span class=\"jill\"></span>文件约束：</b></span></div></div><ul class=\"wolai-block\"><li id=\"9uMYBrKqn82mq54BYEy5sC\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">每个模块最少有三种文件组合：</span><span class=\"inline-wrap\"><b>module</b></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><b>server</b></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><b>controller</b></span><span class=\"inline-wrap\">。</span></li><li id=\"rTDPDGyPgdZvs9HUviSrvm\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">具有同一</span><span class=\"inline-wrap\"><b>应用程序域</b></span><span class=\"inline-wrap\">的文件应该放到同一个</span><span class=\"inline-wrap\"><b>功能模块</b></span><span class=\"inline-wrap\">下。</span></li><li id=\"gybWw8KrcrL7uhanYCbab2\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">NestJS<span class=\"jill\"></span>允许命令行创建不生成</span><span class=\"inline-wrap\"><code>.spec</code></span><span class=\"inline-wrap\">(</span><span class=\"inline-wrap\"><code>nest g controller product --no-spec</code></span><span class=\"inline-wrap\">)。</span></li></ul><div id=\"vTu8EN1DrNwGGfs9DqDNc3\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">初始化后项目的</span><span class=\"inline-wrap\"><b>主要</b></span><span class=\"inline-wrap\">目录结构：</span></div></div><div id=\"1djLGgWgtPj97LG6GLjLaE\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"https://cdn.nlark.com/yuque/0/2023/png/21771732/1676175485415-b4298c68-ff05-46de-8abc-ee7e74de4962.png#averageHue=%23232425&amp;clientId=u31848435-c35d-4&amp;from=paste&amp;height=231&amp;id=r8Kpi&amp;name=image.png&amp;originHeight=136&amp;originWidth=226&amp;originalType=binary&amp;ratio=2&amp;rotation=0&amp;showTitle=false&amp;size=8527&amp;status=done&amp;style=none&amp;taskId=u260e6f9f-ef8f-4ac3-912f-1f04d640f74&amp;title=&amp;width=384\" style=\"width: 350px\"/></figure></div><div id=\"bggoUcy6VZvLdMzDEf5YgT\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">\n这里涉及到<span class=\"jill\"></span>NestJs<span class=\"jill\"></span>框架的文件约束：</span></div></div><div id=\"jRke5GJNYEuQUZRWiX8bne\" class=\"wolai-block wolai-simple-table\"><table><thead><tr><th style=\"width: 370px\"><span class=\"inline-wrap\">app.controller.ts</span></th><th style=\"width: 370px\"><span class=\"inline-wrap\">单个路由的基本控制器(Controller)</span></th></tr></thead><tbody><tr><td><span class=\"inline-wrap\">app.controller.spec.ts</span></td><td><span class=\"inline-wrap\">针对控制器的单元测试</span></td></tr><tr><td><span class=\"inline-wrap\">app.module.ts</span></td><td><span class=\"inline-wrap\">应用程序的根模块(Module)</span></td></tr><tr><td><span class=\"inline-wrap\">app.service.ts</span></td><td><span class=\"inline-wrap\">具有单一方法的基本服务(Service)</span></td></tr><tr><td><span class=\"inline-wrap\">main.ts</span></td><td><span class=\"inline-wrap\">应用程序的入口文件，它使用核心函数 NestFactory 来创建 Nest 应用程序的实例。</span></td></tr></tbody></table></div><div id=\"rV2f48p1L2kPwgsrb4ibVf\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在</span><span class=\"inline-wrap\"><code>main.ts</code></span><span class=\"inline-wrap\">中使用工厂函数</span><span class=\"inline-wrap\"><code>NestFactory</code></span><span class=\"inline-wrap\">创建一个 </span><span class=\"inline-wrap\"><code>AppModule</code></span><span class=\"inline-wrap\"> 应用实例，启动 HTTP 监听器，等待 HTTP 请求。</span></div></div><code-block id=\"2zVyJ5Zj9Gc1KtqLKmGg5v\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NestFactory <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NestExpressApplication <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/platform-express'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.module'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// &lt;NestExpressApplication> ｜ &lt;NestFastifyApplication> | &lt;></span>\n  <span class=\"token comment\">// 一般来说我们选择 NestExpress，因为网上资源多，官方文档有很多例子都是基于Express</span>\n  <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> NestFactory<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>NestExpressApplication<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>AppModule<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 设置全局路由前缀</span>\n  <span class=\"token comment\">// app.setGlobalPrefix('api');</span>\n  <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></div></code-block><details id=\"oENuQB9kWyuNtBn3iuWeRq\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">可选平台</span></summary><ul class=\"wolai-block\"><li id=\"jcM4g8n6NCYGMaBAXSJ1V8\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><a href=\"https://expressjs.com/\"><span>Express</span></a></span><span class=\"inline-wrap\"> 是一个众所周知的 node.js 简约 Web 框架。 这是一个经过实战考验，适用于生产的库，拥有大量社区资源。 默认情况下使用 @nestjs/platform-express 包。许多用户都可以使用 Express ，并且无需采取任何操作即可启用它。</span></li><li id=\"xL5xdwkuFqYuvSxN53cDC\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><a href=\"https://www.fastify.io/\"><span>Fastify</span></a></span><span class=\"inline-wrap\"> 是一个高性能，低开销的框架，专注于提供最高的效率和速度。 在</span><span class=\"inline-wrap\"><a href=\"https://docs.nestjs.cn/8/techniques?id=性能（fastify）\"><span>这里</span></a></span><span class=\"inline-wrap\">\n阅读如何使用它。</span></li></ul></details><div id=\"2TfvXszk3zPuSJSuoUvV1a\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"oFsM1zTaWu6mkwgrVcmsT4\" class=\"wolai-block\"><span class=\"inline-wrap\">工作流程</span></h3><div id=\"phcgqypcfvXSQL2PgMGqiM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在开始之前，不妨先看一下 Nest 的工作流程：</span></div></div><div id=\"s8gPx96gyGdKv3uajmm4Z4\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/nest%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B.png\" style=\"width: 623px\"/></figure></div><div id=\"jfvXdPDg8ZhaGcZ265MTXb\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">整个请求的过程如上图所示，正常情况下提供者组件都以</span><span class=\"inline-wrap\"><b>全局第一</b></span><span class=\"inline-wrap\">顺序执行的原则，而过滤器则相反，会从最底层开始处理，即路由→控制器→全局。</span></div></div><div id=\"skRhpCWNtaPD1hWvzRyShU\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"6zBjY2FBSyoNJ3XX3rVxb1\" class=\"wolai-block\"><span class=\"inline-wrap\">基础概念</span></h2><h3 id=\"hmYZ962ZGum1RFZKAtsWCk\" class=\"wolai-block\"><span class=\"inline-wrap\">模块</span></h3><aside id=\"fWXgHuLtRLCW1qqHj3Sxuh\" class=\"bg-cultured wolai-block\"><div data-symbol=\"📌\" class=\"icon\"></div><span class=\"inline-wrap\">模块是用 </span><span class=\"inline-wrap\"><code>@Module()</code></span><span class=\"inline-wrap\"> 装饰的类。 </span><span class=\"inline-wrap\"><code>@Module()</code></span><span class=\"inline-wrap\"> 装饰器提供了元数据，Nest 用它来组织应用程序结构。</span></aside><div id=\"dB289MjQc5vNitMLAUWHgD\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">模块主要分<span class=\"jill\"></span>4<span class=\"jill\"></span>种：</span></div></div><ol class=\"wolai-block\"><li id=\"1DpNdvQWj9EahKJXEEepFS\"><div class=\"marker\"></div><span class=\"inline-wrap\">功能模块</span></li><li id=\"ah6VB7pjpePaGbp4DERt1L\"><div class=\"marker\"></div><span class=\"inline-wrap\">共享模块</span></li><li id=\"m5k5fNL9kiHZFm4iAoEPQB\"><div class=\"marker\"></div><span class=\"inline-wrap\">全局模块</span></li><li id=\"8miLPP9z4vaNjrMURbn6JT\"><div class=\"marker\"></div><span class=\"inline-wrap\">动态模块</span></li></ol><div id=\"swxK5XbJrZqcMaFke43iPk\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>main.ts</code></span><span class=\"inline-wrap\"> 只引入了</span><span class=\"inline-wrap\"><code>app.module.ts</code></span><span class=\"inline-wrap\">文件，此为应用程序的根模块(每个 Nest 应用程序至少有一个模块)：</span></div></div><code-block id=\"cbUuD1wnyPqUNWZovjYCzq\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppController <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n</pre></div></code-block><blockquote id=\"vseGVCvR5BTjHLiAZactLz\" class=\"wolai-block\"><span class=\"inline-wrap\">对装饰器不了解的，可以看</span><span class=\"inline-wrap\"><a href=\"https://juejin.cn/post/6859314697204662279#heading-2\"><span>走近<span class=\"jill\"></span>MidwayJS：初识<span class=\"jill\"></span>TS<span class=\"jill\"></span>装饰器与<span class=\"jill\"></span>IoC<span class=\"jill\"></span>机制</span></a></span></blockquote><div id=\"sG5SX3DZsTx8XT9BgzhwR4\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Module()</code></span><span class=\"inline-wrap\">装饰器接收四个属性：</span><span class=\"inline-wrap\"><code>providers</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>controllers</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>imports</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>exports</code></span><span class=\"inline-wrap\">。</span></div></div><div id=\"2VBB1rY6YW1e9u3U4MZQAi\" class=\"wolai-block wolai-simple-table\"><table><thead><tr><th style=\"width: 173px\"><span class=\"inline-wrap\"><code>providers</code></span></th><th style=\"width: 561px\"><span class=\"inline-wrap\">Nest.js<span class=\"jill\"></span>注入器实例化的提供者（服务提供者），处理具体的业务逻辑，各个模块之间可以共享；</span></th></tr></thead><tbody><tr><td><span class=\"inline-wrap\"><code>controllers</code></span></td><td><span class=\"inline-wrap\">处理<span class=\"jill\"></span>http<span class=\"jill\"></span>请求，包括路由控制，向客户端返回响应，将具体业务逻辑委托给<span class=\"jill\"></span>providers<span class=\"jill\"></span>处理；</span></td></tr><tr><td><span class=\"inline-wrap\"><code>imports</code></span></td><td><span class=\"inline-wrap\">导入模块的列表，如果需要使用其他模块的服务，需要通过这里导入；</span></td></tr><tr><td><span class=\"inline-wrap\"><code>exports</code></span></td><td><span class=\"inline-wrap\">导出服务的列表，供其他模块导入使用。如果希望当前模块下的服务可以被其他模块共享，需要在这里配置导出；</span></td></tr></tbody></table></div><div id=\"omBzRKQVUWmuM3HNYPpxyK\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">下面通过一个产品的<span class=\"jill\"></span>CRUD<span class=\"jill\"></span>例子来进行演示：</span></div></div><div id=\"jD3WK7TEnYZQA2viyPemkE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">NestJs<span class=\"jill\"></span>中，具有同一</span><span class=\"inline-wrap\"><b>应用程序域</b></span><span class=\"inline-wrap\">的文件应该放到同一个</span><span class=\"inline-wrap\"><b>功能模块</b></span><span class=\"inline-wrap\">下：\n首先我们可以通过<span class=\"jill\"></span>nest-cli<span class=\"jill\"></span>提供的命令生成模块:</span></div></div><ul class=\"wolai-block\"><li id=\"3j7Xowd15z596hM6Xvsad1\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>nest g module products</code></span></li></ul><code-block id=\"xnqKdNQD5C2i29oeUV1YT5\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"vHYj4xDXmoeouCbyWTuhUk\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">同时 </span><span class=\"inline-wrap\"><b>ProductsModule</b></span><span class=\"inline-wrap\"> 也会被自动注册到根模块：</span></div></div><code-block id=\"bLLkubnsadm6D3gCYsKXBJ\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppController <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ProductsModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./products/products.module'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>ProductsModule<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"kQDnu61E1bMjr2AYjeFQkh\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这样便完成了一个新的功能模块的注册。</span></div></div><details id=\"baDsYanmXFZmawKW3uZY4C\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">共享模块</span></summary><div id=\"euyBAoUFoWW3vte4CsZRau\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在 Nest 中，默认情况下，模块是</span><span class=\"inline-wrap\"><b>单例</b></span><span class=\"inline-wrap\">的，因此我们可以轻松地在多个模块之间共享</span><span class=\"inline-wrap\"><b>同一个提供者实例</b></span><span class=\"inline-wrap\">。模块本身存在</span><span class=\"inline-wrap\"><b>共享性，</b></span><span class=\"inline-wrap\"> 一个模块一旦创建便可以被任意模块重复使用。例如：</span></div></div><code-block id=\"nw7TzB8MSkHSVfsLon9zru\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CatsController <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./cats.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CatsService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./cats.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>CatsController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>CatsService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 导出模块供其他模块倒入，所有模块共享catsService实例</span>\n  exports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>CatsService<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CatsModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></pre></div></code-block></details><details id=\"qYVqSPXtXLbDAn4gJJUnWA\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">全局模块</span></summary><div id=\"v9vw5N3wkGuLHXiYmMZZz4\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">如果想提供一些通用的模块，如：helper，数据库连接等等，可以创建全局模块，也比较简单，增加</span><span class=\"inline-wrap\"><code>@Global</code></span><span class=\"inline-wrap\">即可，全局模块应该只注册一次，最好由根或核心模块注册。</span></div></div><code-block id=\"k5ofsFrfpW73wfZJwUevGz\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module<span class=\"token punctuation\">,</span> Global <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CatsController <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./cats.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CatsService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./cats.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Global</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>CatsController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>CatsService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  exports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>CatsService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CatsModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></pre></div></code-block></details><details id=\"v8PRgFFSfSFVUKiyDENMYE\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">动态模块</span></summary><div id=\"gxavGczvAKZm9TgRei3QV6\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">动态模块在 Nest 中也是非常重要的。此功能使您可以轻松创建可自定义的模块，这些模块可以动态注册和配置提供程序。例如：注册动态模块：</span><span class=\"inline-wrap\"><code>DatabaseModule</code></span></div></div><code-block id=\"tzLFeHfN5pwoSAZ7texrid\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module<span class=\"token punctuation\">,</span> DynamicModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createDatabaseProviders <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./database.providers'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Connection <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./connection.provider'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>Connection<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DatabaseModule</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> <span class=\"token function\">forRoot</span><span class=\"token punctuation\">(</span>entities <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> options<span class=\"token operator\">?</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> DynamicModule <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> providers <span class=\"token operator\">=</span> <span class=\"token function\">createDatabaseProviders</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">,</span> entities<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      module<span class=\"token operator\">:</span> DatabaseModule<span class=\"token punctuation\">,</span>\n      providers<span class=\"token operator\">:</span> providers<span class=\"token punctuation\">,</span>\n      exports<span class=\"token operator\">:</span> providers<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"wsiaZW9ERDPEpyNWJ9o1ct\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">使用该模块</span></div></div><code-block id=\"jfFEsHvBAZRKPePid8MMbe\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> DatabaseModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./database/database.module'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> User <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./users/entities/user.entity'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>DatabaseModule<span class=\"token punctuation\">.</span><span class=\"token function\">forRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>User<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></pre></div></code-block></details><div id=\"3zLBwbLKVc2kyFZGPWR2H6\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"fkBxHS4Cwjg7YytF3h2JmB\" class=\"wolai-block\"><span class=\"inline-wrap\">控制器</span></h3><div id=\"aVofQxHeGr29Wn7DDnaFoR\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">同样的，通过<span class=\"jill\"></span>nest-cli<span class=\"jill\"></span>提供的命令生成控制器:</span></div></div><ul class=\"wolai-block\"><li id=\"99RTU8gciASTX9pz1riv7C\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>nest g controller products</code></span></li></ul><blockquote id=\"5HXKVBNFHsMKGjsBu7K8mQ\" class=\"wolai-block\"><span class=\"inline-wrap\">在<span class=\"jill\"></span>Nest<span class=\"jill\"></span>中，使用装饰器</span><span class=\"inline-wrap\"><code>@Controller()</code></span><span class=\"inline-wrap\">定义一个基本的控制器，该装饰器可以传入一个路径参数</span></blockquote><code-block id=\"ndFQZZyoCX6i9eBidw3rDB\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'products'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 下一步生成服务提供者后需要注入控制器</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> productsService<span class=\"token operator\">:</span> ProductsService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"ufkgyV3TVBCiLB9uTYhCXL\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">同时在 </span><span class=\"inline-wrap\"><code>products.module.ts</code></span><span class=\"inline-wrap\">文件中会自动注册 ProductsController。</span></div></div><div id=\"uXWJqcFCLGGKCUzzpxm2d7\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"1MT8Pn8Q1pu1TnUw3UrsgN\" class=\"wolai-block\"><span class=\"inline-wrap\">服务</span></h3><div id=\"m7eTjTbuKUCEMePeo2op5T\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">一样的操作，使用命令生成</span></div></div><ul class=\"wolai-block\"><li id=\"qT8A69NxdVE4LitWSq18gt\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>nest g service products</code></span></li></ul><blockquote id=\"5yXzeJjh3sQQvRkdB8d174\" class=\"wolai-block\"><span class=\"inline-wrap\">其实可以通过 </span><span class=\"inline-wrap\"><code>nest g resource products</code></span><span class=\"inline-wrap\">一次性生成。\n更多创建命令可以通过 </span><span class=\"inline-wrap\"><code>nest generate --help</code></span><span class=\"inline-wrap\">查看。</span></blockquote><code-block id=\"7hNmcZjBRM6Lf3DwwCJLKg\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Injectable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsService</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"1H8c2jJLye8wyxhLrFTSJG\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">此时的 products.module.ts 文件</span></div></div><code-block id=\"xbLr6rWMcMVjx45eAT1iJX\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ProductsController <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./products.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ProductsService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./products.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>ProductsController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>ProductsService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"hjvefEsX7pXJs2BGuRbFYX\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">到目前为止，已经完成了 </span><span class=\"inline-wrap\"><code>Products</code></span><span class=\"inline-wrap\"> 功能模块的搭建。接下来了解一下上面的操作，Nest<span class=\"jill\"></span>帮我们做了什么？</span></div></div><div id=\"wJsRr2QHLxqdw4EWAm5qs4\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"4JTe9tdnKAuXwmL7N2ZKeF\" class=\"wolai-block\"><span class=\"inline-wrap\">依赖注入</span></h3><aside id=\"t8R5k2spMpnHQn2JpTmLKK\" class=\"bg-cultured wolai-block\"><div data-symbol=\"🚗\" class=\"icon\"></div><span class=\"inline-wrap\">上面我们大概认识了</span><span class=\"red inline-wrap\">Nest</span><span class=\"inline-wrap\">的</span><span class=\"inline-wrap\"><b>模块化</b></span><span class=\"inline-wrap\">，那</span><span class=\"red inline-wrap\"> Nest </span><span class=\"inline-wrap\">的</span><span class=\"inline-wrap\"><b>依赖注入</b></span><span class=\"inline-wrap\">又是怎样的呢？</span></aside><div id=\"rK5FcPgrKFNnuCNrgzTc7D\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"> 先回顾一下之前的大致操作：</span></div></div><ol class=\"wolai-block\"><li id=\"3mETwFcPD5AELb2yrSFew5\"><div class=\"marker\"></div><span class=\"inline-wrap\">在</span><span class=\"inline-wrap\"><code>products.service.ts</code></span><span class=\"inline-wrap\">中，装饰器</span><span class=\"inline-wrap\"><code>@Injectable()</code></span><span class=\"inline-wrap\">将类</span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\">标记为可以被<span class=\"jill\"></span>Nest IoC<span class=\"jill\"></span>容器管理的类。</span></li><li id=\"wPC3nNME6Jxeg8zzmcRjQh\"><div class=\"marker\"></div><span class=\"inline-wrap\">在</span><span class=\"inline-wrap\"><code>products.controller.ts</code></span><span class=\"inline-wrap\"> 中，</span><span class=\"inline-wrap\"><code>ProductsController</code></span><span class=\"inline-wrap\"> 通过构造函数注入声明对</span><span class=\"inline-wrap\"><code>CatsService</code></span><span class=\"inline-wrap\">的依赖：</span><code-block id=\"5eUm8RXgNVLUbLfngbEGW2\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> productsService<span class=\"token operator\">:</span> ProductsService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre></div></code-block></li><li id=\"caiFZSs1bYpHRSe1ZAcTgW\"><div class=\"marker\"></div><span class=\"inline-wrap\">在</span><span class=\"inline-wrap\"><code>products.module.ts</code></span><span class=\"inline-wrap\">模块（ IoC 容器）中注册提供者。</span><code-block id=\"9Qf1rA2r4PnJ9hMwifZaoz\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>ProductsController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>ProductsService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></pre></div></code-block></li></ol><div id=\"jVZ14ge29sf1b7EAomH4gG\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这个过程是<span class=\"jill\"></span>Nest 是如何处理的：</span></div></div><div id=\"qEUB79D8hwZNYwzow2wcFK\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"rPFYyg9a6aQK71pDpgxvcy\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">当 Nest IoC 容器实例化 </span><span class=\"red inline-wrap\">ProductsController </span><span class=\"inline-wrap\">时，它首先查找任何依赖项。当它找到 </span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\"> 依赖项时，它会对 </span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\"> 令牌执行查找，根据注册步骤（第<span class=\"jill\"></span>3）返回 </span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\"> 类。</span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\">假设 </span><span class=\"inline-wrap\"><code>SINGLETON</code></span><span class=\"inline-wrap\"> 作用域（默认行为），Nest 将创建一个 </span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\"> 实例，缓存它并返回它，或者如果已经缓存了一个实例，则返回现有实例。</span></div></div><blockquote id=\"bFtMPbZfGY21bLYDS521Tm\" class=\"wolai-block\"><span class=\"inline-wrap\">事实上，语法</span><span class=\"inline-wrap\"><code>providers: [ProductsService]</code></span><span class=\"inline-wrap\"> 是更完整语法的简写：</span><code-block id=\"db4Kb3GTLNoTXkxCjSgGUk\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre>providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n  provide<span class=\"token operator\">:</span> ProductsService<span class=\"token punctuation\">,</span>\n  useClass<span class=\"token operator\">:</span> ProductsService<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></div></code-block><div id=\"nY8xtmJrzQJRc47FdJ9jZ9\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">现在我们看到了这个显式构造，我们可以了解注册过程。在这里，我们清楚地将令牌<span class=\"jill\"></span>ProductsService<span class=\"jill\"></span>与</span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\">相关联。</span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\">速记符号只是为了简化最常见的用例，其中令牌用于请求具有</span><span class=\"inline-wrap\"><b>相同名称的类</b></span><span class=\"inline-wrap\">的实例。</span></div></div></blockquote><div id=\"2wLN9fQd4RzadisGGt4cyQ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"88o2MQFdRi242G6No8QFYy\" class=\"wolai-block\"><span class=\"inline-wrap\">核心概念</span></h2><div id=\"rSup3o9c1JPyMgLvUmcAhs\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">接下来围绕业务来介绍其他几个核心概念，在这之前，先来了解一下 </span><span class=\"inline-wrap\"><b>NestJS</b></span><span class=\"inline-wrap\"> 如何接入数据库。</span></div></div><h3 id=\"8PacdTkzmhJrmTHQEQJ3BE\" class=\"wolai-block\"><span class=\"inline-wrap\">数据库</span></h3><div id=\"wqA7Z9BrQVSQsoAxmjXwJx\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这里以</span><span class=\"inline-wrap\"><b>TypeORM<span class=\"jill\"></span>框架</b></span><span class=\"inline-wrap\">为例与<span class=\"jill\"></span>MySQL<span class=\"jill\"></span>数据库进行交互。</span></div></div><blockquote id=\"6T2QEySC3NLyekC89RZek4\" class=\"wolai-block\"><span class=\"inline-wrap\">ORM<span class=\"jill\"></span>技术（Object-Relational Mapping）,把关系数据库的变结构映射到对象上。</span></blockquote><div id=\"pVHfUECp1UVhRrhuZSdBtB\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">安装依赖：</span></div></div><code-block id=\"x9shieZiit8X7JJZGk2Yze\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Bash\" class=\"marker\"></div><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> @nestjs/typeorm typeorm mysql2 <span class=\"token parameter variable\">-S</span></pre></div></code-block><div id=\"t9NqEiVt4KKHETEAjSbAzA\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在 app.module.ts 中注册：</span></div></div><code-block id=\"oo1brk5EE7KP61RueGPvMt\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> TypeOrmModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/typeorm'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppController <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ProductsModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./products/products.module'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    ProductsModule<span class=\"token punctuation\">,</span>\n    TypeOrmModule<span class=\"token punctuation\">.</span><span class=\"token function\">forRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">'mysql'</span><span class=\"token punctuation\">,</span>\n      host<span class=\"token operator\">:</span> <span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span>\n      port<span class=\"token operator\">:</span> <span class=\"token number\">3306</span><span class=\"token punctuation\">,</span>\n      username<span class=\"token operator\">:</span> <span class=\"token string\">'root'</span><span class=\"token punctuation\">,</span>\n      password<span class=\"token operator\">:</span> <span class=\"token string\">'123456'</span><span class=\"token punctuation\">,</span>\n      database<span class=\"token operator\">:</span> <span class=\"token string\">'store'</span><span class=\"token punctuation\">,</span>\n      autoLoadEntities<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 自动加载实体</span>\n      synchronize<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n</pre></div></code-block><div id=\"xqeMoecUQKU2gcr9Vet5MC\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这是最简单的配置方式，当然 **TypeORM **也非常方便地支持：</span></div></div><ul class=\"wolai-block\"><li id=\"imBZdVmoVYP63draomysvG\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">存储库模式</span><ul class=\"wolai-block\"><li id=\"xpsF59KPPiuLyVFRZisFsY\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">每个实体都有自己的存储库<span class=\"jill\"></span>Entity。</span></li></ul></li><li id=\"bPLHW6RB66AKSvK9SHJ5jE\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">实体关系</span><ul class=\"wolai-block\"><li id=\"7pgTFQK7DVUyyFZn1F8SXE\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">一对一</span><span class=\"inline-wrap\"><code>@OneToOne()</code></span><span class=\"inline-wrap\">，一对多</span><span class=\"inline-wrap\"><code>@OneToMany()</code></span><span class=\"inline-wrap\">和</span><span class=\"inline-wrap\"><code>@ManyToOne()</code></span><span class=\"inline-wrap\">，多对多</span><span class=\"inline-wrap\"><code>@ManyToMany()</code></span></li></ul></li><li id=\"bTwdqug4H6vUdzcrkZFgij\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">自动载入实体</span></li><li id=\"owh5nhB7i5m1oNyeT6ajhN\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">事务</span></li><li id=\"bB3jo9MYEJC3YSG36jfyiB\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">多数据库</span></li><li id=\"19WF656LVus4GGmAWRgTHg\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">异步配置</span></li><li id=\"gMTJHqE4p2ZhBVeq51DaEf\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">等等</span></li></ul><div id=\"wVAjtxjG6J1fwegi6eAw4L\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">详细可参考</span><span class=\"inline-wrap\"><a href=\"https://docs.nestjs.cn/8/techniques?id=数据库\"><span>官方文档</span></a></span><span class=\"inline-wrap\">。</span></div></div><div id=\"pYSxj9qczvtvKR1x2J6eyi\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">对了，不忘创建一下 </span><span class=\"inline-wrap\"><code>Products</code></span><span class=\"inline-wrap\"> 的实体类；</span></div></div><code-block id=\"1DiNRwS15WPcvirUZHxVM9\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Column<span class=\"token punctuation\">,</span> Entity<span class=\"token punctuation\">,</span> PrimaryGeneratedColumn <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Entity</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'products'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsEntity</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">PrimaryGeneratedColumn</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  id<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 标记为主列，值自动生成</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Column</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> length<span class=\"token operator\">:</span> <span class=\"token number\">50</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  title<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Column</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'text'</span><span class=\"token punctuation\">)</span>\n  desc<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Column</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  thumb_url<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Column</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'tinyint'</span><span class=\"token punctuation\">)</span>\n  type<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Column</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'timestamp'</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">default</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">'CURRENT_TIMESTAMP'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  create_time<span class=\"token operator\">:</span> Date<span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Column</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'timestamp'</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">default</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">'CURRENT_TIMESTAMP'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  update_time<span class=\"token operator\">:</span> Date<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block><div id=\"1KFQPpLd5fLHjhjS9cr6XW\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">完成数据库的打通后，开始增加业务逻辑代码。</span></div></div><div id=\"3aZNCYoqj5aaUQY7YSB1k1\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"6aaF3c5Xz3vUDp3g8YJUJn\" class=\"wolai-block\"><span class=\"inline-wrap\">HTTP<span class=\"jill\"></span>装饰器</span></h3><div id=\"k4bcPecj5zszYX3nRRcaXk\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">HTTP 装饰器使用起来同样非常简单；\nNest 为所有标准的 HTTP 方法提供了相应的装饰器：</span></div></div><ul class=\"wolai-block\"><li id=\"mEWkPd3qW4X39HTPu3oirU\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Get()</code></span></li><li id=\"3B23A4ZKtezmVtGwW5rF7A\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Post()</code></span></li><li id=\"h2TaCX4oUHLFrJw5haNqzE\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Put()</code></span></li><li id=\"kX1vjzkk1xt2uEUcSyWzS4\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Delete()</code></span></li><li id=\"bvB3u8smKMKzb6e4qUnpui\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Patch()</code></span></li><li id=\"59uJoGZn4ioDkzpqN9TJz4\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Options()</code></span></li><li id=\"txTiANQNf2A4KG77GG6CUj\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Head()</code></span></li><li id=\"pRbQyTwx54JKMbhRn5yUWK\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@All() </code></span><span class=\"inline-wrap\">用于定义一个用于处理所有 HTTP 请求方法的处理程序。</span></li></ul><div id=\"dVR7z84Qcbecjo31SqHKmt\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">经过它们装饰的方法，可以对相应的<span class=\"jill\"></span>HTTP<span class=\"jill\"></span>请求进行响应。\n同时它们可以接受一个字符串或一个字符串数组作为参数，这里的</span><span class=\"inline-wrap\"><b>字符串</b></span><span class=\"inline-wrap\">可以是固定的路径，也可以是</span><span class=\"inline-wrap\"><b>通配符</b></span><span class=\"inline-wrap\">。</span></div></div><code-block id=\"p3p1JCt33h5EDhPpGdGN9t\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Body<span class=\"token punctuation\">,</span> Controller<span class=\"token punctuation\">,</span> Delete<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Param<span class=\"token punctuation\">,</span> Post<span class=\"token punctuation\">,</span> Put<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ApiOperation<span class=\"token punctuation\">,</span> ApiTags <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/swagger'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CreateProductDto <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./dto/create-product.dto'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ProductsService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./products.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiTags</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'产品'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'products'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> productsService<span class=\"token operator\">:</span> ProductsService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiOperation</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> summary<span class=\"token operator\">:</span> <span class=\"token string\">'创建产品'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Post</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Body</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> product<span class=\"token operator\">:</span> CreateProductDto<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsService<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>ProductsEntity<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsService<span class=\"token punctuation\">.</span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">':id'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">findById</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Param</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsService<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Put</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">':id'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Param</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span> id<span class=\"token punctuation\">,</span> <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Body</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> product<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsService<span class=\"token punctuation\">.</span><span class=\"token function\">updateById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Delete</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Param</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsService<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"tz2cfHamcN2vQYAJBtQccB\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h4 id=\"5LRjxn2QnDbWnzQ7sRaLSU\" class=\"wolai-block\"><span class=\"inline-wrap\">@Req()、@Res()</span></h4><div id=\"vwVsLsgmaTfu83JogFEjkQ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest 提供了对底层平台（默认为 Express）的</span><span class=\"inline-wrap\"><a href=\"http://expressjs.com/en/api.html#req\"><span>请求对象</span></a></span><span class=\"inline-wrap\">（request）的访问方式。我们可以在待处理函数的签名中增加</span><span class=\"inline-wrap\"><code>@Req()</code></span><span class=\"inline-wrap\">装饰器，Nest 则会自动注入请求对象。</span></div></div><div id=\"4DHNVkC4EESEdN3oipF3j7\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">针对<span class=\"jill\"></span>HTTP<span class=\"jill\"></span>请求，Nest 提供了开箱即用的专有装饰器，如下</span></div></div><div id=\"2hhHqDif8teP5BWxtczMGq\" class=\"wolai-block wolai-simple-table\"><table><thead><tr><th style=\"width: 370px\"><span class=\"inline-wrap\"><b></b></span><span class=\"inline-wrap\"><b>装饰器</b></span></th><th style=\"width: 370px\"><span class=\"inline-wrap\"><b></b></span><span class=\"inline-wrap\"><b>对应参数</b></span></th></tr></thead><tbody><tr><td><span class=\"inline-wrap\">@Request()，@Req()</span></td><td><span class=\"inline-wrap\">req</span></td></tr><tr><td><span class=\"inline-wrap\">@Response()，@Res()*</span></td><td><span class=\"inline-wrap\">res</span></td></tr><tr><td><span class=\"inline-wrap\">@Next()</span></td><td><span class=\"inline-wrap\">next</span></td></tr><tr><td><span class=\"inline-wrap\">@Session()</span></td><td><span class=\"inline-wrap\">req.session</span></td></tr><tr><td><span class=\"inline-wrap\">@Param(key?: string)</span></td><td><span class=\"inline-wrap\">req.params/req.params[key]</span></td></tr><tr><td><span class=\"inline-wrap\">@Body(key?: string)</span></td><td><span class=\"inline-wrap\">req.body/req.body[key]</span></td></tr><tr><td><span class=\"inline-wrap\">@Query(key?: string)</span></td><td><span class=\"inline-wrap\">req.query/req.query[key]</span></td></tr><tr><td><span class=\"inline-wrap\">@Headers(name?: string)</span></td><td><span class=\"inline-wrap\">req.headers/req.headers[name]</span></td></tr><tr><td><span class=\"inline-wrap\">@Ip()</span></td><td><span class=\"inline-wrap\">req.ip</span></td></tr><tr><td><span class=\"inline-wrap\">@HostParam()</span></td><td><span class=\"inline-wrap\">req.hosts</span></td></tr></tbody></table></div><div id=\"4mvAaoD3Zq9aAgUTqVUnoA\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">另外，Nest<span class=\"jill\"></span>还支持较多的装饰器，例如</span></div></div><ul class=\"wolai-block\"><li id=\"dkF9aTHtEcB64epMpxUKBt\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@HttpCode(statusCode)</code></span><span class=\"inline-wrap\"> 修改响应状态码</span></li><li id=\"sVdukeLBifaNor4LoU26SN\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Header(key, value)</code></span><span class=\"inline-wrap\">  自定义响应头</span></li><li id=\"jPXiJYr6Dr2XL4A96p92Pg\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Redirect(url, statusCode|302)</code></span><span class=\"inline-wrap\"> 设置重定向</span></li></ul><div id=\"enpdNw7rvLtCmEQ5MkeAkV\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">详细可参考</span><span class=\"inline-wrap\"><a href=\"https://docs.nestjs.com/controllers\"><span>官方文档</span></a></span><span class=\"inline-wrap\">查阅。</span></div></div><div id=\"iMXKuc8znNMgiqqKi2nAYE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"hQPRDcSjY776EmSXShBfSo\" class=\"wolai-block\"><span class=\"inline-wrap\">Repository</span></h3><div id=\"a8pf73Bu6fToHEL8GeCZAo\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">上面介绍了 </span><span class=\"inline-wrap\"><b>TypeORM</b></span><span class=\"inline-wrap\"> 以及 </span><span class=\"inline-wrap\"><b>Entity</b></span><span class=\"inline-wrap\">，这里具体化一下 service；</span></div></div><code-block id=\"aXoWFKGuL1Yyo1xhkCRv4M\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HttpException<span class=\"token punctuation\">,</span> Injectable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> InjectRepository <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/typeorm'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Repository <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ProductsEntity <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./products.entity'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsService</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>\n    <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">InjectRepository</span></span><span class=\"token punctuation\">(</span>ProductsEntity<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> productsRepository<span class=\"token operator\">:</span> Repository<span class=\"token operator\">&lt;</span>ProductsEntity<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 创建产品</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span>product<span class=\"token operator\">:</span> Partial<span class=\"token operator\">&lt;</span>ProductsEntity<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>ProductsEntity<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> title <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> product<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>title<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpException</span><span class=\"token punctuation\">(</span><span class=\"token string\">'缺少产品标题'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> doc <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> where<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> title <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpException</span><span class=\"token punctuation\">(</span><span class=\"token string\">'产品已存在'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 获取指定产品</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>ProductsEntity<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findOneBy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> id <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 更新产品</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">updateById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> product<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>ProductsEntity<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> existProduct <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>existProduct<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpException</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">id为</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">的产品不存在</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> updateProduct <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">merge</span><span class=\"token punctuation\">(</span>existProduct<span class=\"token punctuation\">,</span> product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>updateProduct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 刪除产品</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> existProduct <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>existProduct<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpException</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">id为</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">的产品不存在</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>existProduct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 获取产品列表</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>ProductsEntity<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block><div id=\"c1RVoMZJqw8oUSYxaTbCDS\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">自此一个完成的请求就已经完成了，但为了接口更加规范，还可以再进一步完善；</span></div></div><div id=\"c4uAETuPtRLn6VVnSYHhot\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"huggnYtU3PxsU1cfcvJ9LQ\" class=\"wolai-block\"><span class=\"inline-wrap\">过滤器</span></h3><div id=\"uQaJXzDCcUSxL4sRwtHZmt\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">过滤器也是 </span><span class=\"inline-wrap\"><b>NestJS</b></span><span class=\"inline-wrap\"> 的众多<span class=\"jill\"></span>provider<span class=\"jill\"></span>之一；这里用过滤器来简单处理错误请求；\n</span><span class=\"inline-wrap\"><code>nest g filter core/filter/http-exception</code></span><span class=\"inline-wrap\">\n代码实现：</span></div></div><code-block id=\"d7uZsfNUCpeoCPWdA9XGyE\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  ArgumentsHost<span class=\"token punctuation\">,</span>\n  Catch<span class=\"token punctuation\">,</span>\n  ExceptionFilter<span class=\"token punctuation\">,</span>\n  HttpException<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Catch</span></span><span class=\"token punctuation\">(</span>HttpException<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HttpExceptionFilter</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ExceptionFilter</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>exception<span class=\"token operator\">:</span> HttpException<span class=\"token punctuation\">,</span> host<span class=\"token operator\">:</span> ArgumentsHost<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> host<span class=\"token punctuation\">.</span><span class=\"token function\">switchToHttp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取请求上下文</span>\n    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getResponse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取请求上下文中的 response对象</span>\n    <span class=\"token keyword\">const</span> status <span class=\"token operator\">=</span> exception<span class=\"token punctuation\">.</span><span class=\"token function\">getStatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取异常状态码</span>\n\n    <span class=\"token comment\">// 设置错误信息</span>\n    <span class=\"token keyword\">const</span> message <span class=\"token operator\">=</span> exception<span class=\"token punctuation\">.</span>message\n      <span class=\"token operator\">?</span> exception<span class=\"token punctuation\">.</span>message\n      <span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>status <span class=\"token operator\">>=</span> <span class=\"token number\">500</span> <span class=\"token operator\">?</span> <span class=\"token string\">'Service Error'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Client Error'</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> errorResponse <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      message<span class=\"token operator\">:</span> message<span class=\"token punctuation\">,</span>\n      code<span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 设置返回的状态码， 请求头，发送错误信息</span>\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'application/json; charset=utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>errorResponse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block><div id=\"ub8QLmR2ujZLLX7xRdsnhJ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在<span class=\"jill\"></span>main.js<span class=\"jill\"></span>中注册：</span></div></div><code-block id=\"nZtAwuswBU97Ac6hwFYiBU\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token operator\">...</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HttpExceptionFilter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./core/filter/http-exception/http-exception.filter'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> NestFactory<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>NestExpressApplication<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>AppModule<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 注册全局错误的过滤器</span>\n  app<span class=\"token punctuation\">.</span><span class=\"token function\">useGlobalFilters</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpExceptionFilter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">...</span>\n  <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block><div id=\"g6dUQq6iEeDA3jH35vtpBL\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">接下来对请求成功返回的格式进行统一的处理，可以用<span class=\"jill\"></span>Nest.js<span class=\"jill\"></span>的</span><span class=\"inline-wrap\"><b>拦截器</b></span><span class=\"inline-wrap\">来实现。</span></div></div><div id=\"oBwWAsRKffKGUqhZR83Zsb\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"jnRnLx5KqV45ZvDZXSGw2t\" class=\"wolai-block\"><span class=\"inline-wrap\">拦截器</span></h3><div id=\"cFsDSr5e6WCKH5hkePP8GJ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">拦截器可以在调用路由处理程序之前和之后访问响应/请求。比如 logger 或者 统一处理</span><span class=\"inline-wrap\"><b>响应结果</b></span><span class=\"inline-wrap\">；</span></div></div><div id=\"k3KC2JCscYEvJr7SzNsTmP\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">老配方，首先使用命令创建一个拦截器：\n</span><span class=\"inline-wrap\"><code>nest g interceptor core/interceptor/transform</code></span></div></div><div id=\"5pCnEmvSvrhWSxmmETdr8H\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">代码实现</span></div></div><code-block id=\"gcgpKkN9e514UbadWHpeVW\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  CallHandler<span class=\"token punctuation\">,</span>\n  ExecutionContext<span class=\"token punctuation\">,</span>\n  Injectable<span class=\"token punctuation\">,</span>\n  NestInterceptor<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> map<span class=\"token punctuation\">,</span> Observable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TransformInterceptor</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">NestInterceptor</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">intercept</span><span class=\"token punctuation\">(</span>context<span class=\"token operator\">:</span> ExecutionContext<span class=\"token punctuation\">,</span> next<span class=\"token operator\">:</span> CallHandler<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Observable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> next<span class=\"token punctuation\">.</span><span class=\"token function\">handle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n          data<span class=\"token punctuation\">,</span>\n          code<span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n          msg<span class=\"token operator\">:</span> <span class=\"token string\">'请求成功'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block><div id=\"tQfDhBFJMdFR47rpqTMuaW\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">注册到<span class=\"jill\"></span>main.js</span></div></div><code-block id=\"7ekbP7oUzKhaJgqKQkPsbC\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token operator\">...</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> TransformInterceptor <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./core/interceptor/transform/transform.interceptor'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> NestFactory<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>NestExpressApplication<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>AppModule<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">...</span>\n  <span class=\"token comment\">// 全局注册拦截器</span>\n  app<span class=\"token punctuation\">.</span><span class=\"token function\">useGlobalInterceptors</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">TransformInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">...</span>\n  <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block><div id=\"bgytXUUpjsA83neoMw1J6R\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"pdusHm5R5ccGjniCeddU11\" class=\"wolai-block\"><span class=\"inline-wrap\">接口文档</span></h3><div id=\"mAVnad8ZBGTCebzFmRdkBN\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">规范化接口当然少不了接口文档，Nest<span class=\"jill\"></span>也是完美支持 swagge，在</span><span class=\"inline-wrap\"><b>product</b></span><span class=\"inline-wrap\">\n目录下创建一个</span><span class=\"inline-wrap\"><code>dto</code></span><span class=\"inline-wrap\">文件夹，再创建一个</span><span class=\"inline-wrap\"><code>create-post.dto.ts</code></span><span class=\"inline-wrap\">文件：</span></div></div><code-block id=\"6xiCYSAk5Dh5fMACiZW3Gs\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ApiProperty<span class=\"token punctuation\">,</span> ApiPropertyOptional <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/swagger'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CreateProductDto</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiProperty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品标题'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> title<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiProperty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品描述'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> desc<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiPropertyOptional</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品缩略图'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> thumb_url<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiProperty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品类型'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> type<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block><div id=\"exF7AUGwXmkomwotyCtf9F\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">完善<span class=\"jill\"></span>controller，进行说明：</span></div></div><code-block id=\"5USAcTJoyP1HrzRJU3U6Ws\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token operator\">...</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiTags</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'产品'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'products'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> productsService<span class=\"token operator\">:</span> ProductsService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiOperation</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> summary<span class=\"token operator\">:</span> <span class=\"token string\">'创建产品'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Post</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Body</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> product<span class=\"token operator\">:</span> CreateProductDto<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsService<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"f12wmMZmvc5WYnbg8DZu5c\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"1b7J6ux8Ntqia2Yi4h39Fo\" class=\"wolai-block\"><span class=\"inline-wrap\">数据验证</span></h3><div id=\"uFJJ5syGhNxxwpu4Yqu1vE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在<span class=\"jill\"></span>Nest.js<span class=\"jill\"></span>中，</span><span class=\"inline-wrap\"><b>管道（Pipes）</b></span><span class=\"inline-wrap\"> 就是专门用来做数据转换的，我们看一下它的定义：</span></div></div><blockquote id=\"fJg8v96ympMYJnSmWHEThc\" class=\"wolai-block\"><span class=\"inline-wrap\">管道是具有 @Injectable() 装饰器的类。管道应实现 PipeTransform 接口。管道有两个类型:</span><ul class=\"wolai-block\"><li id=\"8Fm1QADfsFBb4uPSgUWKe8\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><b>转换</b></span><span class=\"inline-wrap\">：管道将输入数据转换为所需的数据输出</span></li><li id=\"e3P4RnRJB9FabfgkwEQKya\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><b>验证</b></span><span class=\"inline-wrap\">：对输入数据进行验证，如果验证成功继续传递; 验证失败则抛出异常;</span></li></ul><div id=\"ipCSsaxYkcgmt6mdgBsBeY\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">管道在异常区域内运行。这意味着当抛出异常时，它们由核心异常处理程序和应用于当前上下文的 </span><span class=\"inline-wrap\"><a href=\"https://docs.nestjs.cn/8/exceptionfilters\"><span>异常过滤器</span></a></span><span class=\"inline-wrap\"> 处理。当在 Pipe 中发生异常，controller 不会继续执行任何方法。</span></div></div></blockquote><div id=\"rYEbt9Nb24eoY2FYtJRo29\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">通俗来讲就是，对请求接口的入参进行验证和转换的前置操作，验证好了我才会将内容给到路由对应的方法中去，失败了就进入异常过滤器中。</span></div></div><div id=\"k9tyRFTDNwDUBjw16cTTRQ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"1SajZGaSmpxag69e2rtdCB\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">安装依赖：</span></div></div><ul class=\"wolai-block\"><li id=\"7MwwMJ4L6hj6bnCC8NdLJa\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>npm install class-validator class-transformer -S</code></span></li></ul><div id=\"tSsjHuUYjJmsjjm3jdZrs1\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest.js<span class=\"jill\"></span>自带了<span class=\"jill\"></span>9<span class=\"jill\"></span>个开箱即用的管道：</span></div></div><ol class=\"wolai-block\"><li id=\"mtVxEngYpb3QokXS6n6Hed\"><div class=\"marker\"></div><span class=\"inline-wrap\">ValidationPipe</span></li><li id=\"bMbFfUUp9xusaqR2KwwLzt\"><div class=\"marker\"></div><span class=\"inline-wrap\">ParseIntPipe</span></li><li id=\"6r2wBw45fxGTUNLL8E1Zzm\"><div class=\"marker\"></div><span class=\"inline-wrap\">ParseFloatPipe</span></li><li id=\"gs4miRrKYZsW4xXgk617tF\"><div class=\"marker\"></div><span class=\"inline-wrap\">ParseBoolPipe</span></li><li id=\"tvdaxUAePfLEpv5vHWxMNU\"><div class=\"marker\"></div><span class=\"inline-wrap\">ParseArrayPipe</span></li><li id=\"qWMEMjxgiU3vZz9eqHQm6H\"><div class=\"marker\"></div><span class=\"inline-wrap\">ParseUUIDPipe</span></li><li id=\"8yQNoYPGRpy8zjGuM7KVsD\"><div class=\"marker\"></div><span class=\"inline-wrap\">ParseEnumPipe</span></li><li id=\"snjtnm5gYePmUSjBgm9yqa\"><div class=\"marker\"></div><span class=\"inline-wrap\">DefaultValuePipe</span></li><li id=\"s9xuDZxYr3Hd46a4szYeGx\"><div class=\"marker\"></div><span class=\"inline-wrap\">ParseFilePipe</span></li></ol><div id=\"uezZf6DZmM4d8D9YtGk8Dp\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">可以单独使用</span></div></div><code-block id=\"aMWdCf1Z5auUWkXzCjEL7H\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">':id'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">async</span> <span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Param</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> ParseIntPipe<span class=\"token punctuation\">)</span> id<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>catsService<span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"eMhY3vMomyST1XXqhyvmzT\" class=\"wolai-block wolai-text\"><div></div></div><div id=\"uPxoMnSirLthRbGAfkwxGT\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">也可以配合 class-validator<span class=\"jill\"></span>使用实现类校验器，可以完美的实现对参数类型进行验证，验证失败抛出异常。</span></div></div><div id=\"uNvi4okVKhHvhbA2X4ZN3m\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">管道验证操作通常用在<span class=\"jill\"></span>dto<span class=\"jill\"></span>这种传输层的文件中,用作验证操作。安装两个需要的依赖包：</span></div></div><div id=\"ihJin1RjoBoC3C4nLPFT1R\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>class-transformer</code></span><span class=\"inline-wrap\">和</span><span class=\"inline-wrap\"><code>class-validator</code></span></div></div><div id=\"7ahXJ29MK6WBiNAk8SUdjb\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">安装依赖：</span></div></div><div id=\"vcvrAs7Tu2FCVu92iG3oFf\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>npm install class-validator class-transformer -S</code></span></div></div><div id=\"3Zb7PnjVUMynXFwfFVCNrf\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">然后在<span class=\"jill\"></span>create-post.dto.ts<span class=\"jill\"></span>文件中添加验证, 完善错误信息提示：</span></div></div><code-block id=\"qSsXjWXM8YFwvPmzijo9pD\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ApiProperty<span class=\"token punctuation\">,</span> ApiPropertyOptional <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/swagger'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> IsNotEmpty<span class=\"token punctuation\">,</span> IsNumber <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'class-validator'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CreateProductDto</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">IsNotEmpty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> message<span class=\"token operator\">:</span> <span class=\"token string\">'产品标题必填'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiProperty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品标题'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> title<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">IsNotEmpty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> message<span class=\"token operator\">:</span> <span class=\"token string\">'缺少产品描述'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiProperty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品描述'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> desc<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiPropertyOptional</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品缩略图'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> thumb_url<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">IsNumber</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiProperty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品类型'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> type<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block><blockquote id=\"m8tSw6s74CZzP33X3VJktM\" class=\"wolai-block\"><span class=\"inline-wrap\">上面只编写了一些常用的验证，class-validator<span class=\"jill\"></span>还提供了很多的验证方法， 感兴趣可以看</span><span class=\"inline-wrap\"><a href=\"https://github.com/typestack/class-validator#validation-messages\"><span>官方文档</span></a></span><span class=\"inline-wrap\">.</span></blockquote><div id=\"eN1gY9VXkFx6CvU9WR2HRb\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"htvJskYfA5Zu6WL32mULfC\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">最后我们还有一个重要的步骤， 就是在<span class=\"jill\"></span>main.ts<span class=\"jill\"></span>中全局注册一下管道</span><span class=\"inline-wrap\"><b>ValidationPipe</b></span><span class=\"inline-wrap\">：</span></div></div><code-block id=\"q192eF9ij9LDBQqvokWwQV\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token operator\">...</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ValidationPipe <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> NestFactory<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>NestExpressApplication<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>AppModule<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">...</span>\n  <span class=\"token comment\">// 注册校验管道</span>\n  app<span class=\"token punctuation\">.</span><span class=\"token function\">useGlobalPipes</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ValidationPipe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block><div id=\"n8zeC4GEKvfWDc4w2rXkmV\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"budrUjTXfrbRUNNf9jhkrP\" class=\"wolai-block\"><span class=\"inline-wrap\">生命周期</span></h3><div id=\"mACFSmS9Y7mPmKNBiTZmyV\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest<span class=\"jill\"></span>在 </span><span class=\"inline-wrap\"><b>modules</b></span><span class=\"inline-wrap\"> ，</span><span class=\"inline-wrap\"><b>providers</b></span><span class=\"inline-wrap\"> 和 </span><span class=\"inline-wrap\"><b>controllers</b></span><span class=\"inline-wrap\"> 的以下每个生命周期事件中调用注册钩子方法。</span></div></div><div id=\"wxp3KHGNg1uKnNNnsKVgG8\" class=\"wolai-block wolai-simple-table\"><table><thead><tr><th style=\"width: 241px\"><span class=\"inline-wrap\">生命周期钩子方法</span></th><th style=\"width: 484px\"><span class=\"inline-wrap\">生命周期时间触发钩子方法调用</span></th></tr></thead><tbody><tr><td><span class=\"inline-wrap\">OnModuleInit()</span></td><td><span class=\"inline-wrap\">初始化主模块依赖处理后调用一次</span></td></tr><tr><td><span class=\"inline-wrap\">OnApplicationBootstrap()</span></td><td><span class=\"inline-wrap\">在应用程序完全启动并监听连接后调用一次</span></td></tr><tr><td><span class=\"inline-wrap\">OnModuleDestroy()</span></td><td><span class=\"inline-wrap\">收到终止信号(例如<span class=\"jill\"></span>SIGTERM)后调用</span></td></tr><tr><td><span class=\"inline-wrap\">beforeApplicationShutdown()</span></td><td><span class=\"inline-wrap\">在<span class=\"jill\"></span>onModuleDestroy()完成(Promise<span class=\"jill\"></span>被<span class=\"jill\"></span>resolved<span class=\"jill\"></span>或者<span class=\"jill\"></span>rejected)；一旦完成，将关闭所有连接(调用<span class=\"jill\"></span>app.close() 方法).</span></td></tr><tr><td><span class=\"inline-wrap\">OnApplicationShutdown()</span></td><td><span class=\"inline-wrap\">连接关闭处理时调用(app.close())</span></td></tr></tbody></table></div><div id=\"7Cwx3ksi9akqUjUpnhTqz7\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"xt3v1bVA2cKVCbPGafegvw\" class=\"wolai-block\"><span class=\"inline-wrap\">总结</span></h2><div id=\"nghMbVvEyw3HypqwccYkxP\" class=\"wolai-block wolai-text\"><div><span class=\"red inline-wrap\">NodeJS</span><span class=\"inline-wrap\">后端已经有很好生态，各类工程化与微服务需要功能都有了<span class=\"jill\"></span>npm<span class=\"jill\"></span>版本，内部数据通过<span class=\"jill\"></span>TypeScript<span class=\"jill\"></span>验证保证类型无误，只要处理好输入数据的验证和转换问题，是可以在实际项目中发挥力量的，但是，如果需要执行大量的计算（物联网，电子商务平台，大数据），那么使用<span class=\"jill\"></span>Spring Boot<span class=\"jill\"></span>会是更好的选择。</span></div></div><div id=\"kKE2KyGo1wGY3b3NGmMFN7\" class=\"wolai-block wolai-text\"><div></div></div></article><footer></footer></body></html>","source":"html/nest/nest快速入门/Nest快速入门.html","raw":"<!DOCTYPE html>\n<html lang=\"zh-Hans-CN\"><head><meta charset=\"utf-8\"/><meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/modern-norm.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/prism.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/katex.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/wolai.css\"/><title>Nest快速入门 - wolai 笔记</title><link rel=\"shortcut icon\" href=\"media/icon_1.svg\"></link></head><body class=\"more-lead\"><header><div class=\"image has\" style=\"background-position-y: 50%; background-image: url(&quot;https://cdn.wostatic.cn/cover/watercolor/3VMGfCa8UCpJ4Dy36jMNKa.jpg&quot;)\"></div><div class=\"title\"><div class=\"banner\"><div class=\"icon icon-image\" style=\"background-image: url(&quot;media/icon.svg&quot;)\"></div></div><div data-title=\"Nest快速入门\" class=\"main-title\"></div></div></header><article><h2 id=\"a1uYtFztFiFWjQkag7tYSF\" class=\"wolai-block\"><span class=\"inline-wrap\">背景</span></h2><h3 id=\"2iiyyJ4VXgZxP7VYJ3TJEe\" class=\"wolai-block\"><span class=\"inline-wrap\">全栈</span></h3><div id=\"rNfBe4qzEvxuvxE2XEbazd\" class=\"wolai-block wolai-text\"><div><span class=\"red inline-wrap\">发展全栈</span><span class=\"inline-wrap\">对公司和个人都大有益处，但最重要的还是对个人的发展如何。个人发展全栈主要还是为了应对未来，主要有几方面： 避免被淘汰、 提升个人价值、 走向管理职位、 实现创业梦。\n从个人为出发点，后端语言百花齐放，想要到一个比较深入的程度，那对所使用的开发语言、框架就需要稍微深入了。例如同时要深入<span class=\"jill\"></span>typescript、Java<span class=\"jill\"></span>的领域，那就会谈到精力问题，对个人来说似乎会很累，不太现实。</span></div></div><div id=\"dNVX1Zw72DNunVMHVer1Bv\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"vTj3PN5xW51TBHb1gAfTJE\" class=\"wolai-block\"><span class=\"inline-wrap\">NestJS</span></h3><div id=\"mFMJbA7fiswLxZFxjs6sCR\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">根据官网介绍：</span></div></div><blockquote id=\"csa4o4BUrgL7sYwrwviWQ9\" class=\"wolai-block\"><span class=\"inline-wrap\"><a href=\"https://docs.nestjs.cn/9/introduction\"><span class=\"red\">Nest (NestJS)</span></a></span><span class=\"inline-wrap\"> 是一个用于构建高效、可扩展的</span><span class=\"blue inline-wrap\"> </span><span class=\"inline-wrap\"><a href=\"https://nodejs.org/en/\"><span class=\"blue\">Node.js</span></a></span><span class=\"inline-wrap\"> 服务器端应用程序的开发框架。它利用<span class=\"jill\"></span>JavaScript 的渐进增强的能力，使用并完全支持 </span><span class=\"inline-wrap\"><a href=\"https://www.typescriptlang.org/\"><span class=\"blue\">TypeScript</span></a></span><span class=\"inline-wrap\"> （仍然允许开发者使用纯 JavaScript 进行开发），并结合了 OOP （面向对象编程）、FP （函数式编程）和 FRP （函数响应式编程）。</span></blockquote><div id=\"2t7XfBkTDUDuUnVXQyJEov\" class=\"wolai-block wolai-text\"><div><span class=\"red inline-wrap\">NestJS</span><span class=\"inline-wrap\"> 的一些</span><span class=\"inline-wrap\"><b>优势</b></span><span class=\"inline-wrap\">包括：</span></div></div><ul class=\"wolai-block\"><li id=\"x26B2f6QXtw18djiHcyCUz\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">构建在现代 JavaScript 栈之上，完全支持 TypeScript。</span></li><li id=\"f8gyHZnWYUSR6Gp7bA3r3X\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">基于 TypeScript，提供了</span><span class=\"inline-wrap\"><b>强类型和静态类型检查</b></span><span class=\"inline-wrap\">。</span></li><li id=\"dYvG1ygHryQbL6nZ3ZX7NQ\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">基于 Angular 的架构和语法，提供了强大的</span><span class=\"inline-wrap\"><b>模块化</b></span><span class=\"inline-wrap\">系统和</span><span class=\"inline-wrap\"><b>依赖注入</b></span><span class=\"inline-wrap\">功能。</span></li><li id=\"fqW4pZS4g6LKE8WuhcqZCH\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">提供了丰富的工具和模块，可用于构建各种类型的服务器端应用程序，包括 </span><span class=\"inline-wrap\"><b>RESTful API</b></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><b>GraphQL API</b></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><b>WebSocket 服务器</b></span><span class=\"inline-wrap\">等。</span></li><li id=\"8kbkCtiNrFD1mDah6Na1ZT\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">提供了一组可扩展的构建块，可用于快速构建应用程序。</span></li><li id=\"53cv5CExTcPbShMUZrfcAw\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">提供了与</span><span class=\"inline-wrap\"><b>主流数据库和身份验证系统</b></span><span class=\"inline-wrap\">的集成。</span></li></ul><div id=\"aMYXzPgbgRtY9UwbN7JRKb\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">对于前端人员来说，“一招<span class=\"jill\"></span>Typescript”吃遍前后端，何乐而不为。</span></div></div><div id=\"t1Kny6NdW3D3gAPFy5UZza\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"gfWAckkx1vMWubhqGyKCi8\" class=\"wolai-block\"><span class=\"inline-wrap\">前期准备</span></h2><h3 id=\"fYdFXJXZ5USEMGwLepasPa\" class=\"wolai-block\"><span class=\"inline-wrap\">项目初始化</span></h3><div id=\"f4sTWj3XAtj7MrfMK18oMY\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">确保已经安装了 </span><span class=\"inline-wrap\"><a href=\"https://nodejs.org/\"><span>Node.js</span></a></span><span class=\"inline-wrap\">（版本 &gt;= 12，v13 除外）</span></div></div><code-block id=\"mFKWA1ZpgZ6w69BXSdCdmo\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Bash\" class=\"marker\"></div><pre>$ <span class=\"token function\">npm</span> i <span class=\"token parameter variable\">-g</span> @nestjs/cli \n$ nest new project-name</pre></div></code-block><h3 id=\"27GR4p5NSjNFuhDYmGFh81\" class=\"wolai-block\"><span class=\"inline-wrap\">运行项目</span></h3><div id=\"8e1JnYkDG4KG7Vbd8R1mBo\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">启动 HTTP 服务监听定义在 src/main.ts 文件中定义的端口号。在浏览器访问</span><span class=\"inline-wrap\"><code>[http://localhost:3000](http://localhost:3000/)/</code></span><span class=\"inline-wrap\">，访问成功代表服务已经<span class=\"jill\"></span>OK<span class=\"jill\"></span>了；</span></div></div><code-block id=\"xz5ySJsu6vB8JXeeD69bxj\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Bash\" class=\"marker\"></div><pre><span class=\"token comment\"># dev为热更新模式</span>\n$ <span class=\"token function\">npm</span> run start:dev</pre></div></code-block><div id=\"7VgkYyTik3S3XVZaSH8MJM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"hR2z7zBQpPyDK4NWaTWpip\" class=\"wolai-block\"><span class=\"inline-wrap\">框架约束</span></h3><div id=\"4XZve4qTxCGbkdAEzojv8u\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><b>NestJS<span class=\"jill\"></span>文件约束：</b></span></div></div><ul class=\"wolai-block\"><li id=\"9uMYBrKqn82mq54BYEy5sC\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">每个模块最少有三种文件组合：</span><span class=\"inline-wrap\"><b>module</b></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><b>server</b></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><b>controller</b></span><span class=\"inline-wrap\">。</span></li><li id=\"rTDPDGyPgdZvs9HUviSrvm\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">具有同一</span><span class=\"inline-wrap\"><b>应用程序域</b></span><span class=\"inline-wrap\">的文件应该放到同一个</span><span class=\"inline-wrap\"><b>功能模块</b></span><span class=\"inline-wrap\">下。</span></li><li id=\"gybWw8KrcrL7uhanYCbab2\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">NestJS<span class=\"jill\"></span>允许命令行创建不生成</span><span class=\"inline-wrap\"><code>.spec</code></span><span class=\"inline-wrap\">(</span><span class=\"inline-wrap\"><code>nest g controller product --no-spec</code></span><span class=\"inline-wrap\">)。</span></li></ul><div id=\"vTu8EN1DrNwGGfs9DqDNc3\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">初始化后项目的</span><span class=\"inline-wrap\"><b>主要</b></span><span class=\"inline-wrap\">目录结构：</span></div></div><div id=\"1djLGgWgtPj97LG6GLjLaE\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"https://cdn.nlark.com/yuque/0/2023/png/21771732/1676175485415-b4298c68-ff05-46de-8abc-ee7e74de4962.png#averageHue=%23232425&amp;clientId=u31848435-c35d-4&amp;from=paste&amp;height=231&amp;id=r8Kpi&amp;name=image.png&amp;originHeight=136&amp;originWidth=226&amp;originalType=binary&amp;ratio=2&amp;rotation=0&amp;showTitle=false&amp;size=8527&amp;status=done&amp;style=none&amp;taskId=u260e6f9f-ef8f-4ac3-912f-1f04d640f74&amp;title=&amp;width=384\" style=\"width: 350px\"/></figure></div><div id=\"bggoUcy6VZvLdMzDEf5YgT\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">\n这里涉及到<span class=\"jill\"></span>NestJs<span class=\"jill\"></span>框架的文件约束：</span></div></div><div id=\"jRke5GJNYEuQUZRWiX8bne\" class=\"wolai-block wolai-simple-table\"><table><thead><tr><th style=\"width: 370px\"><span class=\"inline-wrap\">app.controller.ts</span></th><th style=\"width: 370px\"><span class=\"inline-wrap\">单个路由的基本控制器(Controller)</span></th></tr></thead><tbody><tr><td><span class=\"inline-wrap\">app.controller.spec.ts</span></td><td><span class=\"inline-wrap\">针对控制器的单元测试</span></td></tr><tr><td><span class=\"inline-wrap\">app.module.ts</span></td><td><span class=\"inline-wrap\">应用程序的根模块(Module)</span></td></tr><tr><td><span class=\"inline-wrap\">app.service.ts</span></td><td><span class=\"inline-wrap\">具有单一方法的基本服务(Service)</span></td></tr><tr><td><span class=\"inline-wrap\">main.ts</span></td><td><span class=\"inline-wrap\">应用程序的入口文件，它使用核心函数 NestFactory 来创建 Nest 应用程序的实例。</span></td></tr></tbody></table></div><div id=\"rV2f48p1L2kPwgsrb4ibVf\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在</span><span class=\"inline-wrap\"><code>main.ts</code></span><span class=\"inline-wrap\">中使用工厂函数</span><span class=\"inline-wrap\"><code>NestFactory</code></span><span class=\"inline-wrap\">创建一个 </span><span class=\"inline-wrap\"><code>AppModule</code></span><span class=\"inline-wrap\"> 应用实例，启动 HTTP 监听器，等待 HTTP 请求。</span></div></div><code-block id=\"2zVyJ5Zj9Gc1KtqLKmGg5v\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NestFactory <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NestExpressApplication <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/platform-express'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.module'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// &lt;NestExpressApplication> ｜ &lt;NestFastifyApplication> | &lt;></span>\n  <span class=\"token comment\">// 一般来说我们选择 NestExpress，因为网上资源多，官方文档有很多例子都是基于Express</span>\n  <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> NestFactory<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>NestExpressApplication<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>AppModule<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 设置全局路由前缀</span>\n  <span class=\"token comment\">// app.setGlobalPrefix('api');</span>\n  <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></div></code-block><details id=\"oENuQB9kWyuNtBn3iuWeRq\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">可选平台</span></summary><ul class=\"wolai-block\"><li id=\"jcM4g8n6NCYGMaBAXSJ1V8\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><a href=\"https://expressjs.com/\"><span>Express</span></a></span><span class=\"inline-wrap\"> 是一个众所周知的 node.js 简约 Web 框架。 这是一个经过实战考验，适用于生产的库，拥有大量社区资源。 默认情况下使用 @nestjs/platform-express 包。许多用户都可以使用 Express ，并且无需采取任何操作即可启用它。</span></li><li id=\"xL5xdwkuFqYuvSxN53cDC\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><a href=\"https://www.fastify.io/\"><span>Fastify</span></a></span><span class=\"inline-wrap\"> 是一个高性能，低开销的框架，专注于提供最高的效率和速度。 在</span><span class=\"inline-wrap\"><a href=\"https://docs.nestjs.cn/8/techniques?id=性能（fastify）\"><span>这里</span></a></span><span class=\"inline-wrap\">\n阅读如何使用它。</span></li></ul></details><div id=\"2TfvXszk3zPuSJSuoUvV1a\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"oFsM1zTaWu6mkwgrVcmsT4\" class=\"wolai-block\"><span class=\"inline-wrap\">工作流程</span></h3><div id=\"phcgqypcfvXSQL2PgMGqiM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在开始之前，不妨先看一下 Nest 的工作流程：</span></div></div><div id=\"s8gPx96gyGdKv3uajmm4Z4\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/nest%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B.png\" style=\"width: 623px\"/></figure></div><div id=\"jfvXdPDg8ZhaGcZ265MTXb\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">整个请求的过程如上图所示，正常情况下提供者组件都以</span><span class=\"inline-wrap\"><b>全局第一</b></span><span class=\"inline-wrap\">顺序执行的原则，而过滤器则相反，会从最底层开始处理，即路由→控制器→全局。</span></div></div><div id=\"skRhpCWNtaPD1hWvzRyShU\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"6zBjY2FBSyoNJ3XX3rVxb1\" class=\"wolai-block\"><span class=\"inline-wrap\">基础概念</span></h2><h3 id=\"hmYZ962ZGum1RFZKAtsWCk\" class=\"wolai-block\"><span class=\"inline-wrap\">模块</span></h3><aside id=\"fWXgHuLtRLCW1qqHj3Sxuh\" class=\"bg-cultured wolai-block\"><div data-symbol=\"📌\" class=\"icon\"></div><span class=\"inline-wrap\">模块是用 </span><span class=\"inline-wrap\"><code>@Module()</code></span><span class=\"inline-wrap\"> 装饰的类。 </span><span class=\"inline-wrap\"><code>@Module()</code></span><span class=\"inline-wrap\"> 装饰器提供了元数据，Nest 用它来组织应用程序结构。</span></aside><div id=\"dB289MjQc5vNitMLAUWHgD\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">模块主要分<span class=\"jill\"></span>4<span class=\"jill\"></span>种：</span></div></div><ol class=\"wolai-block\"><li id=\"1DpNdvQWj9EahKJXEEepFS\"><div class=\"marker\"></div><span class=\"inline-wrap\">功能模块</span></li><li id=\"ah6VB7pjpePaGbp4DERt1L\"><div class=\"marker\"></div><span class=\"inline-wrap\">共享模块</span></li><li id=\"m5k5fNL9kiHZFm4iAoEPQB\"><div class=\"marker\"></div><span class=\"inline-wrap\">全局模块</span></li><li id=\"8miLPP9z4vaNjrMURbn6JT\"><div class=\"marker\"></div><span class=\"inline-wrap\">动态模块</span></li></ol><div id=\"swxK5XbJrZqcMaFke43iPk\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>main.ts</code></span><span class=\"inline-wrap\"> 只引入了</span><span class=\"inline-wrap\"><code>app.module.ts</code></span><span class=\"inline-wrap\">文件，此为应用程序的根模块(每个 Nest 应用程序至少有一个模块)：</span></div></div><code-block id=\"cbUuD1wnyPqUNWZovjYCzq\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppController <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n</pre></div></code-block><blockquote id=\"vseGVCvR5BTjHLiAZactLz\" class=\"wolai-block\"><span class=\"inline-wrap\">对装饰器不了解的，可以看</span><span class=\"inline-wrap\"><a href=\"https://juejin.cn/post/6859314697204662279#heading-2\"><span>走近<span class=\"jill\"></span>MidwayJS：初识<span class=\"jill\"></span>TS<span class=\"jill\"></span>装饰器与<span class=\"jill\"></span>IoC<span class=\"jill\"></span>机制</span></a></span></blockquote><div id=\"sG5SX3DZsTx8XT9BgzhwR4\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Module()</code></span><span class=\"inline-wrap\">装饰器接收四个属性：</span><span class=\"inline-wrap\"><code>providers</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>controllers</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>imports</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>exports</code></span><span class=\"inline-wrap\">。</span></div></div><div id=\"2VBB1rY6YW1e9u3U4MZQAi\" class=\"wolai-block wolai-simple-table\"><table><thead><tr><th style=\"width: 173px\"><span class=\"inline-wrap\"><code>providers</code></span></th><th style=\"width: 561px\"><span class=\"inline-wrap\">Nest.js<span class=\"jill\"></span>注入器实例化的提供者（服务提供者），处理具体的业务逻辑，各个模块之间可以共享；</span></th></tr></thead><tbody><tr><td><span class=\"inline-wrap\"><code>controllers</code></span></td><td><span class=\"inline-wrap\">处理<span class=\"jill\"></span>http<span class=\"jill\"></span>请求，包括路由控制，向客户端返回响应，将具体业务逻辑委托给<span class=\"jill\"></span>providers<span class=\"jill\"></span>处理；</span></td></tr><tr><td><span class=\"inline-wrap\"><code>imports</code></span></td><td><span class=\"inline-wrap\">导入模块的列表，如果需要使用其他模块的服务，需要通过这里导入；</span></td></tr><tr><td><span class=\"inline-wrap\"><code>exports</code></span></td><td><span class=\"inline-wrap\">导出服务的列表，供其他模块导入使用。如果希望当前模块下的服务可以被其他模块共享，需要在这里配置导出；</span></td></tr></tbody></table></div><div id=\"omBzRKQVUWmuM3HNYPpxyK\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">下面通过一个产品的<span class=\"jill\"></span>CRUD<span class=\"jill\"></span>例子来进行演示：</span></div></div><div id=\"jD3WK7TEnYZQA2viyPemkE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">NestJs<span class=\"jill\"></span>中，具有同一</span><span class=\"inline-wrap\"><b>应用程序域</b></span><span class=\"inline-wrap\">的文件应该放到同一个</span><span class=\"inline-wrap\"><b>功能模块</b></span><span class=\"inline-wrap\">下：\n首先我们可以通过<span class=\"jill\"></span>nest-cli<span class=\"jill\"></span>提供的命令生成模块:</span></div></div><ul class=\"wolai-block\"><li id=\"3j7Xowd15z596hM6Xvsad1\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>nest g module products</code></span></li></ul><code-block id=\"xnqKdNQD5C2i29oeUV1YT5\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"vHYj4xDXmoeouCbyWTuhUk\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">同时 </span><span class=\"inline-wrap\"><b>ProductsModule</b></span><span class=\"inline-wrap\"> 也会被自动注册到根模块：</span></div></div><code-block id=\"bLLkubnsadm6D3gCYsKXBJ\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppController <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ProductsModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./products/products.module'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>ProductsModule<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"kQDnu61E1bMjr2AYjeFQkh\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这样便完成了一个新的功能模块的注册。</span></div></div><details id=\"baDsYanmXFZmawKW3uZY4C\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">共享模块</span></summary><div id=\"euyBAoUFoWW3vte4CsZRau\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在 Nest 中，默认情况下，模块是</span><span class=\"inline-wrap\"><b>单例</b></span><span class=\"inline-wrap\">的，因此我们可以轻松地在多个模块之间共享</span><span class=\"inline-wrap\"><b>同一个提供者实例</b></span><span class=\"inline-wrap\">。模块本身存在</span><span class=\"inline-wrap\"><b>共享性，</b></span><span class=\"inline-wrap\"> 一个模块一旦创建便可以被任意模块重复使用。例如：</span></div></div><code-block id=\"nw7TzB8MSkHSVfsLon9zru\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CatsController <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./cats.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CatsService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./cats.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>CatsController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>CatsService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 导出模块供其他模块倒入，所有模块共享catsService实例</span>\n  exports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>CatsService<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CatsModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></pre></div></code-block></details><details id=\"qYVqSPXtXLbDAn4gJJUnWA\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">全局模块</span></summary><div id=\"v9vw5N3wkGuLHXiYmMZZz4\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">如果想提供一些通用的模块，如：helper，数据库连接等等，可以创建全局模块，也比较简单，增加</span><span class=\"inline-wrap\"><code>@Global</code></span><span class=\"inline-wrap\">即可，全局模块应该只注册一次，最好由根或核心模块注册。</span></div></div><code-block id=\"k5ofsFrfpW73wfZJwUevGz\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module<span class=\"token punctuation\">,</span> Global <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CatsController <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./cats.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CatsService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./cats.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Global</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>CatsController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>CatsService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  exports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>CatsService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CatsModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></pre></div></code-block></details><details id=\"v8PRgFFSfSFVUKiyDENMYE\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">动态模块</span></summary><div id=\"gxavGczvAKZm9TgRei3QV6\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">动态模块在 Nest 中也是非常重要的。此功能使您可以轻松创建可自定义的模块，这些模块可以动态注册和配置提供程序。例如：注册动态模块：</span><span class=\"inline-wrap\"><code>DatabaseModule</code></span></div></div><code-block id=\"tzLFeHfN5pwoSAZ7texrid\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module<span class=\"token punctuation\">,</span> DynamicModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createDatabaseProviders <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./database.providers'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Connection <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./connection.provider'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>Connection<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DatabaseModule</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> <span class=\"token function\">forRoot</span><span class=\"token punctuation\">(</span>entities <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> options<span class=\"token operator\">?</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> DynamicModule <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> providers <span class=\"token operator\">=</span> <span class=\"token function\">createDatabaseProviders</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">,</span> entities<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      module<span class=\"token operator\">:</span> DatabaseModule<span class=\"token punctuation\">,</span>\n      providers<span class=\"token operator\">:</span> providers<span class=\"token punctuation\">,</span>\n      exports<span class=\"token operator\">:</span> providers<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"wsiaZW9ERDPEpyNWJ9o1ct\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">使用该模块</span></div></div><code-block id=\"jfFEsHvBAZRKPePid8MMbe\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> DatabaseModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./database/database.module'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> User <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./users/entities/user.entity'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>DatabaseModule<span class=\"token punctuation\">.</span><span class=\"token function\">forRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>User<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></pre></div></code-block></details><div id=\"3zLBwbLKVc2kyFZGPWR2H6\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"fkBxHS4Cwjg7YytF3h2JmB\" class=\"wolai-block\"><span class=\"inline-wrap\">控制器</span></h3><div id=\"aVofQxHeGr29Wn7DDnaFoR\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">同样的，通过<span class=\"jill\"></span>nest-cli<span class=\"jill\"></span>提供的命令生成控制器:</span></div></div><ul class=\"wolai-block\"><li id=\"99RTU8gciASTX9pz1riv7C\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>nest g controller products</code></span></li></ul><blockquote id=\"5HXKVBNFHsMKGjsBu7K8mQ\" class=\"wolai-block\"><span class=\"inline-wrap\">在<span class=\"jill\"></span>Nest<span class=\"jill\"></span>中，使用装饰器</span><span class=\"inline-wrap\"><code>@Controller()</code></span><span class=\"inline-wrap\">定义一个基本的控制器，该装饰器可以传入一个路径参数</span></blockquote><code-block id=\"ndFQZZyoCX6i9eBidw3rDB\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'products'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 下一步生成服务提供者后需要注入控制器</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> productsService<span class=\"token operator\">:</span> ProductsService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"ufkgyV3TVBCiLB9uTYhCXL\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">同时在 </span><span class=\"inline-wrap\"><code>products.module.ts</code></span><span class=\"inline-wrap\">文件中会自动注册 ProductsController。</span></div></div><div id=\"uXWJqcFCLGGKCUzzpxm2d7\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"1MT8Pn8Q1pu1TnUw3UrsgN\" class=\"wolai-block\"><span class=\"inline-wrap\">服务</span></h3><div id=\"m7eTjTbuKUCEMePeo2op5T\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">一样的操作，使用命令生成</span></div></div><ul class=\"wolai-block\"><li id=\"qT8A69NxdVE4LitWSq18gt\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>nest g service products</code></span></li></ul><blockquote id=\"5yXzeJjh3sQQvRkdB8d174\" class=\"wolai-block\"><span class=\"inline-wrap\">其实可以通过 </span><span class=\"inline-wrap\"><code>nest g resource products</code></span><span class=\"inline-wrap\">一次性生成。\n更多创建命令可以通过 </span><span class=\"inline-wrap\"><code>nest generate --help</code></span><span class=\"inline-wrap\">查看。</span></blockquote><code-block id=\"7hNmcZjBRM6Lf3DwwCJLKg\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Injectable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsService</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"1H8c2jJLye8wyxhLrFTSJG\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">此时的 products.module.ts 文件</span></div></div><code-block id=\"xbLr6rWMcMVjx45eAT1iJX\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ProductsController <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./products.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ProductsService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./products.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>ProductsController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>ProductsService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"hjvefEsX7pXJs2BGuRbFYX\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">到目前为止，已经完成了 </span><span class=\"inline-wrap\"><code>Products</code></span><span class=\"inline-wrap\"> 功能模块的搭建。接下来了解一下上面的操作，Nest<span class=\"jill\"></span>帮我们做了什么？</span></div></div><div id=\"wJsRr2QHLxqdw4EWAm5qs4\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"4JTe9tdnKAuXwmL7N2ZKeF\" class=\"wolai-block\"><span class=\"inline-wrap\">依赖注入</span></h3><aside id=\"t8R5k2spMpnHQn2JpTmLKK\" class=\"bg-cultured wolai-block\"><div data-symbol=\"🚗\" class=\"icon\"></div><span class=\"inline-wrap\">上面我们大概认识了</span><span class=\"red inline-wrap\">Nest</span><span class=\"inline-wrap\">的</span><span class=\"inline-wrap\"><b>模块化</b></span><span class=\"inline-wrap\">，那</span><span class=\"red inline-wrap\"> Nest </span><span class=\"inline-wrap\">的</span><span class=\"inline-wrap\"><b>依赖注入</b></span><span class=\"inline-wrap\">又是怎样的呢？</span></aside><div id=\"rK5FcPgrKFNnuCNrgzTc7D\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"> 先回顾一下之前的大致操作：</span></div></div><ol class=\"wolai-block\"><li id=\"3mETwFcPD5AELb2yrSFew5\"><div class=\"marker\"></div><span class=\"inline-wrap\">在</span><span class=\"inline-wrap\"><code>products.service.ts</code></span><span class=\"inline-wrap\">中，装饰器</span><span class=\"inline-wrap\"><code>@Injectable()</code></span><span class=\"inline-wrap\">将类</span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\">标记为可以被<span class=\"jill\"></span>Nest IoC<span class=\"jill\"></span>容器管理的类。</span></li><li id=\"wPC3nNME6Jxeg8zzmcRjQh\"><div class=\"marker\"></div><span class=\"inline-wrap\">在</span><span class=\"inline-wrap\"><code>products.controller.ts</code></span><span class=\"inline-wrap\"> 中，</span><span class=\"inline-wrap\"><code>ProductsController</code></span><span class=\"inline-wrap\"> 通过构造函数注入声明对</span><span class=\"inline-wrap\"><code>CatsService</code></span><span class=\"inline-wrap\">的依赖：</span><code-block id=\"5eUm8RXgNVLUbLfngbEGW2\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> productsService<span class=\"token operator\">:</span> ProductsService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre></div></code-block></li><li id=\"caiFZSs1bYpHRSe1ZAcTgW\"><div class=\"marker\"></div><span class=\"inline-wrap\">在</span><span class=\"inline-wrap\"><code>products.module.ts</code></span><span class=\"inline-wrap\">模块（ IoC 容器）中注册提供者。</span><code-block id=\"9Qf1rA2r4PnJ9hMwifZaoz\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>ProductsController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>ProductsService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></pre></div></code-block></li></ol><div id=\"jVZ14ge29sf1b7EAomH4gG\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这个过程是<span class=\"jill\"></span>Nest 是如何处理的：</span></div></div><div id=\"qEUB79D8hwZNYwzow2wcFK\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"rPFYyg9a6aQK71pDpgxvcy\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">当 Nest IoC 容器实例化 </span><span class=\"red inline-wrap\">ProductsController </span><span class=\"inline-wrap\">时，它首先查找任何依赖项。当它找到 </span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\"> 依赖项时，它会对 </span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\"> 令牌执行查找，根据注册步骤（第<span class=\"jill\"></span>3）返回 </span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\"> 类。</span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\">假设 </span><span class=\"inline-wrap\"><code>SINGLETON</code></span><span class=\"inline-wrap\"> 作用域（默认行为），Nest 将创建一个 </span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\"> 实例，缓存它并返回它，或者如果已经缓存了一个实例，则返回现有实例。</span></div></div><blockquote id=\"bFtMPbZfGY21bLYDS521Tm\" class=\"wolai-block\"><span class=\"inline-wrap\">事实上，语法</span><span class=\"inline-wrap\"><code>providers: [ProductsService]</code></span><span class=\"inline-wrap\"> 是更完整语法的简写：</span><code-block id=\"db4Kb3GTLNoTXkxCjSgGUk\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre>providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n  provide<span class=\"token operator\">:</span> ProductsService<span class=\"token punctuation\">,</span>\n  useClass<span class=\"token operator\">:</span> ProductsService<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></div></code-block><div id=\"nY8xtmJrzQJRc47FdJ9jZ9\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">现在我们看到了这个显式构造，我们可以了解注册过程。在这里，我们清楚地将令牌<span class=\"jill\"></span>ProductsService<span class=\"jill\"></span>与</span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\">相关联。</span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\">速记符号只是为了简化最常见的用例，其中令牌用于请求具有</span><span class=\"inline-wrap\"><b>相同名称的类</b></span><span class=\"inline-wrap\">的实例。</span></div></div></blockquote><div id=\"2wLN9fQd4RzadisGGt4cyQ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"88o2MQFdRi242G6No8QFYy\" class=\"wolai-block\"><span class=\"inline-wrap\">核心概念</span></h2><div id=\"rSup3o9c1JPyMgLvUmcAhs\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">接下来围绕业务来介绍其他几个核心概念，在这之前，先来了解一下 </span><span class=\"inline-wrap\"><b>NestJS</b></span><span class=\"inline-wrap\"> 如何接入数据库。</span></div></div><h3 id=\"8PacdTkzmhJrmTHQEQJ3BE\" class=\"wolai-block\"><span class=\"inline-wrap\">数据库</span></h3><div id=\"wqA7Z9BrQVSQsoAxmjXwJx\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这里以</span><span class=\"inline-wrap\"><b>TypeORM<span class=\"jill\"></span>框架</b></span><span class=\"inline-wrap\">为例与<span class=\"jill\"></span>MySQL<span class=\"jill\"></span>数据库进行交互。</span></div></div><blockquote id=\"6T2QEySC3NLyekC89RZek4\" class=\"wolai-block\"><span class=\"inline-wrap\">ORM<span class=\"jill\"></span>技术（Object-Relational Mapping）,把关系数据库的变结构映射到对象上。</span></blockquote><div id=\"pVHfUECp1UVhRrhuZSdBtB\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">安装依赖：</span></div></div><code-block id=\"x9shieZiit8X7JJZGk2Yze\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Bash\" class=\"marker\"></div><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> @nestjs/typeorm typeorm mysql2 <span class=\"token parameter variable\">-S</span></pre></div></code-block><div id=\"t9NqEiVt4KKHETEAjSbAzA\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在 app.module.ts 中注册：</span></div></div><code-block id=\"oo1brk5EE7KP61RueGPvMt\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> TypeOrmModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/typeorm'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppController <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ProductsModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./products/products.module'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    ProductsModule<span class=\"token punctuation\">,</span>\n    TypeOrmModule<span class=\"token punctuation\">.</span><span class=\"token function\">forRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">'mysql'</span><span class=\"token punctuation\">,</span>\n      host<span class=\"token operator\">:</span> <span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span>\n      port<span class=\"token operator\">:</span> <span class=\"token number\">3306</span><span class=\"token punctuation\">,</span>\n      username<span class=\"token operator\">:</span> <span class=\"token string\">'root'</span><span class=\"token punctuation\">,</span>\n      password<span class=\"token operator\">:</span> <span class=\"token string\">'123456'</span><span class=\"token punctuation\">,</span>\n      database<span class=\"token operator\">:</span> <span class=\"token string\">'store'</span><span class=\"token punctuation\">,</span>\n      autoLoadEntities<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 自动加载实体</span>\n      synchronize<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n</pre></div></code-block><div id=\"xqeMoecUQKU2gcr9Vet5MC\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这是最简单的配置方式，当然 **TypeORM **也非常方便地支持：</span></div></div><ul class=\"wolai-block\"><li id=\"imBZdVmoVYP63draomysvG\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">存储库模式</span><ul class=\"wolai-block\"><li id=\"xpsF59KPPiuLyVFRZisFsY\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">每个实体都有自己的存储库<span class=\"jill\"></span>Entity。</span></li></ul></li><li id=\"bPLHW6RB66AKSvK9SHJ5jE\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">实体关系</span><ul class=\"wolai-block\"><li id=\"7pgTFQK7DVUyyFZn1F8SXE\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">一对一</span><span class=\"inline-wrap\"><code>@OneToOne()</code></span><span class=\"inline-wrap\">，一对多</span><span class=\"inline-wrap\"><code>@OneToMany()</code></span><span class=\"inline-wrap\">和</span><span class=\"inline-wrap\"><code>@ManyToOne()</code></span><span class=\"inline-wrap\">，多对多</span><span class=\"inline-wrap\"><code>@ManyToMany()</code></span></li></ul></li><li id=\"bTwdqug4H6vUdzcrkZFgij\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">自动载入实体</span></li><li id=\"owh5nhB7i5m1oNyeT6ajhN\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">事务</span></li><li id=\"bB3jo9MYEJC3YSG36jfyiB\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">多数据库</span></li><li id=\"19WF656LVus4GGmAWRgTHg\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">异步配置</span></li><li id=\"gMTJHqE4p2ZhBVeq51DaEf\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">等等</span></li></ul><div id=\"wVAjtxjG6J1fwegi6eAw4L\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">详细可参考</span><span class=\"inline-wrap\"><a href=\"https://docs.nestjs.cn/8/techniques?id=数据库\"><span>官方文档</span></a></span><span class=\"inline-wrap\">。</span></div></div><div id=\"pYSxj9qczvtvKR1x2J6eyi\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">对了，不忘创建一下 </span><span class=\"inline-wrap\"><code>Products</code></span><span class=\"inline-wrap\"> 的实体类；</span></div></div><code-block id=\"1DiNRwS15WPcvirUZHxVM9\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Column<span class=\"token punctuation\">,</span> Entity<span class=\"token punctuation\">,</span> PrimaryGeneratedColumn <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Entity</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'products'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsEntity</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">PrimaryGeneratedColumn</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  id<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 标记为主列，值自动生成</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Column</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> length<span class=\"token operator\">:</span> <span class=\"token number\">50</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  title<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Column</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'text'</span><span class=\"token punctuation\">)</span>\n  desc<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Column</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  thumb_url<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Column</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'tinyint'</span><span class=\"token punctuation\">)</span>\n  type<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Column</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'timestamp'</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">default</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">'CURRENT_TIMESTAMP'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  create_time<span class=\"token operator\">:</span> Date<span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Column</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'timestamp'</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">default</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">'CURRENT_TIMESTAMP'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  update_time<span class=\"token operator\">:</span> Date<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block><div id=\"1KFQPpLd5fLHjhjS9cr6XW\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">完成数据库的打通后，开始增加业务逻辑代码。</span></div></div><div id=\"3aZNCYoqj5aaUQY7YSB1k1\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"6aaF3c5Xz3vUDp3g8YJUJn\" class=\"wolai-block\"><span class=\"inline-wrap\">HTTP<span class=\"jill\"></span>装饰器</span></h3><div id=\"k4bcPecj5zszYX3nRRcaXk\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">HTTP 装饰器使用起来同样非常简单；\nNest 为所有标准的 HTTP 方法提供了相应的装饰器：</span></div></div><ul class=\"wolai-block\"><li id=\"mEWkPd3qW4X39HTPu3oirU\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Get()</code></span></li><li id=\"3B23A4ZKtezmVtGwW5rF7A\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Post()</code></span></li><li id=\"h2TaCX4oUHLFrJw5haNqzE\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Put()</code></span></li><li id=\"kX1vjzkk1xt2uEUcSyWzS4\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Delete()</code></span></li><li id=\"bvB3u8smKMKzb6e4qUnpui\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Patch()</code></span></li><li id=\"59uJoGZn4ioDkzpqN9TJz4\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Options()</code></span></li><li id=\"txTiANQNf2A4KG77GG6CUj\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Head()</code></span></li><li id=\"pRbQyTwx54JKMbhRn5yUWK\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@All() </code></span><span class=\"inline-wrap\">用于定义一个用于处理所有 HTTP 请求方法的处理程序。</span></li></ul><div id=\"dVR7z84Qcbecjo31SqHKmt\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">经过它们装饰的方法，可以对相应的<span class=\"jill\"></span>HTTP<span class=\"jill\"></span>请求进行响应。\n同时它们可以接受一个字符串或一个字符串数组作为参数，这里的</span><span class=\"inline-wrap\"><b>字符串</b></span><span class=\"inline-wrap\">可以是固定的路径，也可以是</span><span class=\"inline-wrap\"><b>通配符</b></span><span class=\"inline-wrap\">。</span></div></div><code-block id=\"p3p1JCt33h5EDhPpGdGN9t\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Body<span class=\"token punctuation\">,</span> Controller<span class=\"token punctuation\">,</span> Delete<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Param<span class=\"token punctuation\">,</span> Post<span class=\"token punctuation\">,</span> Put<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ApiOperation<span class=\"token punctuation\">,</span> ApiTags <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/swagger'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CreateProductDto <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./dto/create-product.dto'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ProductsService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./products.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiTags</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'产品'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'products'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> productsService<span class=\"token operator\">:</span> ProductsService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiOperation</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> summary<span class=\"token operator\">:</span> <span class=\"token string\">'创建产品'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Post</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Body</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> product<span class=\"token operator\">:</span> CreateProductDto<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsService<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>ProductsEntity<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsService<span class=\"token punctuation\">.</span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">':id'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">findById</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Param</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsService<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Put</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">':id'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Param</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span> id<span class=\"token punctuation\">,</span> <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Body</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> product<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsService<span class=\"token punctuation\">.</span><span class=\"token function\">updateById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Delete</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Param</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsService<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"tz2cfHamcN2vQYAJBtQccB\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h4 id=\"5LRjxn2QnDbWnzQ7sRaLSU\" class=\"wolai-block\"><span class=\"inline-wrap\">@Req()、@Res()</span></h4><div id=\"vwVsLsgmaTfu83JogFEjkQ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest 提供了对底层平台（默认为 Express）的</span><span class=\"inline-wrap\"><a href=\"http://expressjs.com/en/api.html#req\"><span>请求对象</span></a></span><span class=\"inline-wrap\">（request）的访问方式。我们可以在待处理函数的签名中增加</span><span class=\"inline-wrap\"><code>@Req()</code></span><span class=\"inline-wrap\">装饰器，Nest 则会自动注入请求对象。</span></div></div><div id=\"4DHNVkC4EESEdN3oipF3j7\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">针对<span class=\"jill\"></span>HTTP<span class=\"jill\"></span>请求，Nest 提供了开箱即用的专有装饰器，如下</span></div></div><div id=\"2hhHqDif8teP5BWxtczMGq\" class=\"wolai-block wolai-simple-table\"><table><thead><tr><th style=\"width: 370px\"><span class=\"inline-wrap\"><b></b></span><span class=\"inline-wrap\"><b>装饰器</b></span></th><th style=\"width: 370px\"><span class=\"inline-wrap\"><b></b></span><span class=\"inline-wrap\"><b>对应参数</b></span></th></tr></thead><tbody><tr><td><span class=\"inline-wrap\">@Request()，@Req()</span></td><td><span class=\"inline-wrap\">req</span></td></tr><tr><td><span class=\"inline-wrap\">@Response()，@Res()*</span></td><td><span class=\"inline-wrap\">res</span></td></tr><tr><td><span class=\"inline-wrap\">@Next()</span></td><td><span class=\"inline-wrap\">next</span></td></tr><tr><td><span class=\"inline-wrap\">@Session()</span></td><td><span class=\"inline-wrap\">req.session</span></td></tr><tr><td><span class=\"inline-wrap\">@Param(key?: string)</span></td><td><span class=\"inline-wrap\">req.params/req.params[key]</span></td></tr><tr><td><span class=\"inline-wrap\">@Body(key?: string)</span></td><td><span class=\"inline-wrap\">req.body/req.body[key]</span></td></tr><tr><td><span class=\"inline-wrap\">@Query(key?: string)</span></td><td><span class=\"inline-wrap\">req.query/req.query[key]</span></td></tr><tr><td><span class=\"inline-wrap\">@Headers(name?: string)</span></td><td><span class=\"inline-wrap\">req.headers/req.headers[name]</span></td></tr><tr><td><span class=\"inline-wrap\">@Ip()</span></td><td><span class=\"inline-wrap\">req.ip</span></td></tr><tr><td><span class=\"inline-wrap\">@HostParam()</span></td><td><span class=\"inline-wrap\">req.hosts</span></td></tr></tbody></table></div><div id=\"4mvAaoD3Zq9aAgUTqVUnoA\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">另外，Nest<span class=\"jill\"></span>还支持较多的装饰器，例如</span></div></div><ul class=\"wolai-block\"><li id=\"dkF9aTHtEcB64epMpxUKBt\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@HttpCode(statusCode)</code></span><span class=\"inline-wrap\"> 修改响应状态码</span></li><li id=\"sVdukeLBifaNor4LoU26SN\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Header(key, value)</code></span><span class=\"inline-wrap\">  自定义响应头</span></li><li id=\"jPXiJYr6Dr2XL4A96p92Pg\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Redirect(url, statusCode|302)</code></span><span class=\"inline-wrap\"> 设置重定向</span></li></ul><div id=\"enpdNw7rvLtCmEQ5MkeAkV\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">详细可参考</span><span class=\"inline-wrap\"><a href=\"https://docs.nestjs.com/controllers\"><span>官方文档</span></a></span><span class=\"inline-wrap\">查阅。</span></div></div><div id=\"iMXKuc8znNMgiqqKi2nAYE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"hQPRDcSjY776EmSXShBfSo\" class=\"wolai-block\"><span class=\"inline-wrap\">Repository</span></h3><div id=\"a8pf73Bu6fToHEL8GeCZAo\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">上面介绍了 </span><span class=\"inline-wrap\"><b>TypeORM</b></span><span class=\"inline-wrap\"> 以及 </span><span class=\"inline-wrap\"><b>Entity</b></span><span class=\"inline-wrap\">，这里具体化一下 service；</span></div></div><code-block id=\"aXoWFKGuL1Yyo1xhkCRv4M\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HttpException<span class=\"token punctuation\">,</span> Injectable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> InjectRepository <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/typeorm'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Repository <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ProductsEntity <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./products.entity'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsService</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>\n    <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">InjectRepository</span></span><span class=\"token punctuation\">(</span>ProductsEntity<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> productsRepository<span class=\"token operator\">:</span> Repository<span class=\"token operator\">&lt;</span>ProductsEntity<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 创建产品</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span>product<span class=\"token operator\">:</span> Partial<span class=\"token operator\">&lt;</span>ProductsEntity<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>ProductsEntity<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> title <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> product<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>title<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpException</span><span class=\"token punctuation\">(</span><span class=\"token string\">'缺少产品标题'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> doc <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> where<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> title <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpException</span><span class=\"token punctuation\">(</span><span class=\"token string\">'产品已存在'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 获取指定产品</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>ProductsEntity<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findOneBy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> id <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 更新产品</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">updateById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> product<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>ProductsEntity<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> existProduct <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>existProduct<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpException</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">id为</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">的产品不存在</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> updateProduct <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">merge</span><span class=\"token punctuation\">(</span>existProduct<span class=\"token punctuation\">,</span> product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>updateProduct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 刪除产品</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> existProduct <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>existProduct<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpException</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">id为</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">的产品不存在</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>existProduct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 获取产品列表</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>ProductsEntity<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block><div id=\"c1RVoMZJqw8oUSYxaTbCDS\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">自此一个完成的请求就已经完成了，但为了接口更加规范，还可以再进一步完善；</span></div></div><div id=\"c4uAETuPtRLn6VVnSYHhot\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"huggnYtU3PxsU1cfcvJ9LQ\" class=\"wolai-block\"><span class=\"inline-wrap\">过滤器</span></h3><div id=\"uQaJXzDCcUSxL4sRwtHZmt\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">过滤器也是 </span><span class=\"inline-wrap\"><b>NestJS</b></span><span class=\"inline-wrap\"> 的众多<span class=\"jill\"></span>provider<span class=\"jill\"></span>之一；这里用过滤器来简单处理错误请求；\n</span><span class=\"inline-wrap\"><code>nest g filter core/filter/http-exception</code></span><span class=\"inline-wrap\">\n代码实现：</span></div></div><code-block id=\"d7uZsfNUCpeoCPWdA9XGyE\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  ArgumentsHost<span class=\"token punctuation\">,</span>\n  Catch<span class=\"token punctuation\">,</span>\n  ExceptionFilter<span class=\"token punctuation\">,</span>\n  HttpException<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Catch</span></span><span class=\"token punctuation\">(</span>HttpException<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HttpExceptionFilter</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ExceptionFilter</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>exception<span class=\"token operator\">:</span> HttpException<span class=\"token punctuation\">,</span> host<span class=\"token operator\">:</span> ArgumentsHost<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> host<span class=\"token punctuation\">.</span><span class=\"token function\">switchToHttp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取请求上下文</span>\n    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getResponse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取请求上下文中的 response对象</span>\n    <span class=\"token keyword\">const</span> status <span class=\"token operator\">=</span> exception<span class=\"token punctuation\">.</span><span class=\"token function\">getStatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取异常状态码</span>\n\n    <span class=\"token comment\">// 设置错误信息</span>\n    <span class=\"token keyword\">const</span> message <span class=\"token operator\">=</span> exception<span class=\"token punctuation\">.</span>message\n      <span class=\"token operator\">?</span> exception<span class=\"token punctuation\">.</span>message\n      <span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>status <span class=\"token operator\">>=</span> <span class=\"token number\">500</span> <span class=\"token operator\">?</span> <span class=\"token string\">'Service Error'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Client Error'</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> errorResponse <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      message<span class=\"token operator\">:</span> message<span class=\"token punctuation\">,</span>\n      code<span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 设置返回的状态码， 请求头，发送错误信息</span>\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'application/json; charset=utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>errorResponse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block><div id=\"ub8QLmR2ujZLLX7xRdsnhJ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在<span class=\"jill\"></span>main.js<span class=\"jill\"></span>中注册：</span></div></div><code-block id=\"nZtAwuswBU97Ac6hwFYiBU\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token operator\">...</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HttpExceptionFilter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./core/filter/http-exception/http-exception.filter'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> NestFactory<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>NestExpressApplication<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>AppModule<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 注册全局错误的过滤器</span>\n  app<span class=\"token punctuation\">.</span><span class=\"token function\">useGlobalFilters</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpExceptionFilter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">...</span>\n  <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block><div id=\"g6dUQq6iEeDA3jH35vtpBL\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">接下来对请求成功返回的格式进行统一的处理，可以用<span class=\"jill\"></span>Nest.js<span class=\"jill\"></span>的</span><span class=\"inline-wrap\"><b>拦截器</b></span><span class=\"inline-wrap\">来实现。</span></div></div><div id=\"oBwWAsRKffKGUqhZR83Zsb\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"jnRnLx5KqV45ZvDZXSGw2t\" class=\"wolai-block\"><span class=\"inline-wrap\">拦截器</span></h3><div id=\"cFsDSr5e6WCKH5hkePP8GJ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">拦截器可以在调用路由处理程序之前和之后访问响应/请求。比如 logger 或者 统一处理</span><span class=\"inline-wrap\"><b>响应结果</b></span><span class=\"inline-wrap\">；</span></div></div><div id=\"k3KC2JCscYEvJr7SzNsTmP\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">老配方，首先使用命令创建一个拦截器：\n</span><span class=\"inline-wrap\"><code>nest g interceptor core/interceptor/transform</code></span></div></div><div id=\"5pCnEmvSvrhWSxmmETdr8H\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">代码实现</span></div></div><code-block id=\"gcgpKkN9e514UbadWHpeVW\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  CallHandler<span class=\"token punctuation\">,</span>\n  ExecutionContext<span class=\"token punctuation\">,</span>\n  Injectable<span class=\"token punctuation\">,</span>\n  NestInterceptor<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> map<span class=\"token punctuation\">,</span> Observable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TransformInterceptor</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">NestInterceptor</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">intercept</span><span class=\"token punctuation\">(</span>context<span class=\"token operator\">:</span> ExecutionContext<span class=\"token punctuation\">,</span> next<span class=\"token operator\">:</span> CallHandler<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Observable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> next<span class=\"token punctuation\">.</span><span class=\"token function\">handle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n          data<span class=\"token punctuation\">,</span>\n          code<span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n          msg<span class=\"token operator\">:</span> <span class=\"token string\">'请求成功'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block><div id=\"tQfDhBFJMdFR47rpqTMuaW\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">注册到<span class=\"jill\"></span>main.js</span></div></div><code-block id=\"7ekbP7oUzKhaJgqKQkPsbC\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token operator\">...</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> TransformInterceptor <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./core/interceptor/transform/transform.interceptor'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> NestFactory<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>NestExpressApplication<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>AppModule<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">...</span>\n  <span class=\"token comment\">// 全局注册拦截器</span>\n  app<span class=\"token punctuation\">.</span><span class=\"token function\">useGlobalInterceptors</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">TransformInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">...</span>\n  <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block><div id=\"bgytXUUpjsA83neoMw1J6R\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"pdusHm5R5ccGjniCeddU11\" class=\"wolai-block\"><span class=\"inline-wrap\">接口文档</span></h3><div id=\"mAVnad8ZBGTCebzFmRdkBN\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">规范化接口当然少不了接口文档，Nest<span class=\"jill\"></span>也是完美支持 swagge，在</span><span class=\"inline-wrap\"><b>product</b></span><span class=\"inline-wrap\">\n目录下创建一个</span><span class=\"inline-wrap\"><code>dto</code></span><span class=\"inline-wrap\">文件夹，再创建一个</span><span class=\"inline-wrap\"><code>create-post.dto.ts</code></span><span class=\"inline-wrap\">文件：</span></div></div><code-block id=\"6xiCYSAk5Dh5fMACiZW3Gs\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ApiProperty<span class=\"token punctuation\">,</span> ApiPropertyOptional <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/swagger'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CreateProductDto</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiProperty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品标题'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> title<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiProperty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品描述'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> desc<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiPropertyOptional</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品缩略图'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> thumb_url<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiProperty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品类型'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> type<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block><div id=\"exF7AUGwXmkomwotyCtf9F\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">完善<span class=\"jill\"></span>controller，进行说明：</span></div></div><code-block id=\"5USAcTJoyP1HrzRJU3U6Ws\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token operator\">...</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiTags</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'产品'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'products'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> productsService<span class=\"token operator\">:</span> ProductsService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiOperation</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> summary<span class=\"token operator\">:</span> <span class=\"token string\">'创建产品'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Post</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Body</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> product<span class=\"token operator\">:</span> CreateProductDto<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsService<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"f12wmMZmvc5WYnbg8DZu5c\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"1b7J6ux8Ntqia2Yi4h39Fo\" class=\"wolai-block\"><span class=\"inline-wrap\">数据验证</span></h3><div id=\"uFJJ5syGhNxxwpu4Yqu1vE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在<span class=\"jill\"></span>Nest.js<span class=\"jill\"></span>中，</span><span class=\"inline-wrap\"><b>管道（Pipes）</b></span><span class=\"inline-wrap\"> 就是专门用来做数据转换的，我们看一下它的定义：</span></div></div><blockquote id=\"fJg8v96ympMYJnSmWHEThc\" class=\"wolai-block\"><span class=\"inline-wrap\">管道是具有 @Injectable() 装饰器的类。管道应实现 PipeTransform 接口。管道有两个类型:</span><ul class=\"wolai-block\"><li id=\"8Fm1QADfsFBb4uPSgUWKe8\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><b>转换</b></span><span class=\"inline-wrap\">：管道将输入数据转换为所需的数据输出</span></li><li id=\"e3P4RnRJB9FabfgkwEQKya\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><b>验证</b></span><span class=\"inline-wrap\">：对输入数据进行验证，如果验证成功继续传递; 验证失败则抛出异常;</span></li></ul><div id=\"ipCSsaxYkcgmt6mdgBsBeY\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">管道在异常区域内运行。这意味着当抛出异常时，它们由核心异常处理程序和应用于当前上下文的 </span><span class=\"inline-wrap\"><a href=\"https://docs.nestjs.cn/8/exceptionfilters\"><span>异常过滤器</span></a></span><span class=\"inline-wrap\"> 处理。当在 Pipe 中发生异常，controller 不会继续执行任何方法。</span></div></div></blockquote><div id=\"rYEbt9Nb24eoY2FYtJRo29\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">通俗来讲就是，对请求接口的入参进行验证和转换的前置操作，验证好了我才会将内容给到路由对应的方法中去，失败了就进入异常过滤器中。</span></div></div><div id=\"k9tyRFTDNwDUBjw16cTTRQ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"1SajZGaSmpxag69e2rtdCB\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">安装依赖：</span></div></div><ul class=\"wolai-block\"><li id=\"7MwwMJ4L6hj6bnCC8NdLJa\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>npm install class-validator class-transformer -S</code></span></li></ul><div id=\"tSsjHuUYjJmsjjm3jdZrs1\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest.js<span class=\"jill\"></span>自带了<span class=\"jill\"></span>9<span class=\"jill\"></span>个开箱即用的管道：</span></div></div><ol class=\"wolai-block\"><li id=\"mtVxEngYpb3QokXS6n6Hed\"><div class=\"marker\"></div><span class=\"inline-wrap\">ValidationPipe</span></li><li id=\"bMbFfUUp9xusaqR2KwwLzt\"><div class=\"marker\"></div><span class=\"inline-wrap\">ParseIntPipe</span></li><li id=\"6r2wBw45fxGTUNLL8E1Zzm\"><div class=\"marker\"></div><span class=\"inline-wrap\">ParseFloatPipe</span></li><li id=\"gs4miRrKYZsW4xXgk617tF\"><div class=\"marker\"></div><span class=\"inline-wrap\">ParseBoolPipe</span></li><li id=\"tvdaxUAePfLEpv5vHWxMNU\"><div class=\"marker\"></div><span class=\"inline-wrap\">ParseArrayPipe</span></li><li id=\"qWMEMjxgiU3vZz9eqHQm6H\"><div class=\"marker\"></div><span class=\"inline-wrap\">ParseUUIDPipe</span></li><li id=\"8yQNoYPGRpy8zjGuM7KVsD\"><div class=\"marker\"></div><span class=\"inline-wrap\">ParseEnumPipe</span></li><li id=\"snjtnm5gYePmUSjBgm9yqa\"><div class=\"marker\"></div><span class=\"inline-wrap\">DefaultValuePipe</span></li><li id=\"s9xuDZxYr3Hd46a4szYeGx\"><div class=\"marker\"></div><span class=\"inline-wrap\">ParseFilePipe</span></li></ol><div id=\"uezZf6DZmM4d8D9YtGk8Dp\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">可以单独使用</span></div></div><code-block id=\"aMWdCf1Z5auUWkXzCjEL7H\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">':id'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">async</span> <span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Param</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> ParseIntPipe<span class=\"token punctuation\">)</span> id<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>catsService<span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"eMhY3vMomyST1XXqhyvmzT\" class=\"wolai-block wolai-text\"><div></div></div><div id=\"uPxoMnSirLthRbGAfkwxGT\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">也可以配合 class-validator<span class=\"jill\"></span>使用实现类校验器，可以完美的实现对参数类型进行验证，验证失败抛出异常。</span></div></div><div id=\"uNvi4okVKhHvhbA2X4ZN3m\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">管道验证操作通常用在<span class=\"jill\"></span>dto<span class=\"jill\"></span>这种传输层的文件中,用作验证操作。安装两个需要的依赖包：</span></div></div><div id=\"ihJin1RjoBoC3C4nLPFT1R\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>class-transformer</code></span><span class=\"inline-wrap\">和</span><span class=\"inline-wrap\"><code>class-validator</code></span></div></div><div id=\"7ahXJ29MK6WBiNAk8SUdjb\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">安装依赖：</span></div></div><div id=\"vcvrAs7Tu2FCVu92iG3oFf\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>npm install class-validator class-transformer -S</code></span></div></div><div id=\"3Zb7PnjVUMynXFwfFVCNrf\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">然后在<span class=\"jill\"></span>create-post.dto.ts<span class=\"jill\"></span>文件中添加验证, 完善错误信息提示：</span></div></div><code-block id=\"qSsXjWXM8YFwvPmzijo9pD\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ApiProperty<span class=\"token punctuation\">,</span> ApiPropertyOptional <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/swagger'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> IsNotEmpty<span class=\"token punctuation\">,</span> IsNumber <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'class-validator'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CreateProductDto</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">IsNotEmpty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> message<span class=\"token operator\">:</span> <span class=\"token string\">'产品标题必填'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiProperty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品标题'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> title<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">IsNotEmpty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> message<span class=\"token operator\">:</span> <span class=\"token string\">'缺少产品描述'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiProperty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品描述'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> desc<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiPropertyOptional</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品缩略图'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> thumb_url<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">IsNumber</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiProperty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品类型'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> type<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block><blockquote id=\"m8tSw6s74CZzP33X3VJktM\" class=\"wolai-block\"><span class=\"inline-wrap\">上面只编写了一些常用的验证，class-validator<span class=\"jill\"></span>还提供了很多的验证方法， 感兴趣可以看</span><span class=\"inline-wrap\"><a href=\"https://github.com/typestack/class-validator#validation-messages\"><span>官方文档</span></a></span><span class=\"inline-wrap\">.</span></blockquote><div id=\"eN1gY9VXkFx6CvU9WR2HRb\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"htvJskYfA5Zu6WL32mULfC\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">最后我们还有一个重要的步骤， 就是在<span class=\"jill\"></span>main.ts<span class=\"jill\"></span>中全局注册一下管道</span><span class=\"inline-wrap\"><b>ValidationPipe</b></span><span class=\"inline-wrap\">：</span></div></div><code-block id=\"q192eF9ij9LDBQqvokWwQV\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token operator\">...</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ValidationPipe <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> NestFactory<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>NestExpressApplication<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>AppModule<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">...</span>\n  <span class=\"token comment\">// 注册校验管道</span>\n  app<span class=\"token punctuation\">.</span><span class=\"token function\">useGlobalPipes</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ValidationPipe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block><div id=\"n8zeC4GEKvfWDc4w2rXkmV\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"budrUjTXfrbRUNNf9jhkrP\" class=\"wolai-block\"><span class=\"inline-wrap\">生命周期</span></h3><div id=\"mACFSmS9Y7mPmKNBiTZmyV\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest<span class=\"jill\"></span>在 </span><span class=\"inline-wrap\"><b>modules</b></span><span class=\"inline-wrap\"> ，</span><span class=\"inline-wrap\"><b>providers</b></span><span class=\"inline-wrap\"> 和 </span><span class=\"inline-wrap\"><b>controllers</b></span><span class=\"inline-wrap\"> 的以下每个生命周期事件中调用注册钩子方法。</span></div></div><div id=\"wxp3KHGNg1uKnNNnsKVgG8\" class=\"wolai-block wolai-simple-table\"><table><thead><tr><th style=\"width: 241px\"><span class=\"inline-wrap\">生命周期钩子方法</span></th><th style=\"width: 484px\"><span class=\"inline-wrap\">生命周期时间触发钩子方法调用</span></th></tr></thead><tbody><tr><td><span class=\"inline-wrap\">OnModuleInit()</span></td><td><span class=\"inline-wrap\">初始化主模块依赖处理后调用一次</span></td></tr><tr><td><span class=\"inline-wrap\">OnApplicationBootstrap()</span></td><td><span class=\"inline-wrap\">在应用程序完全启动并监听连接后调用一次</span></td></tr><tr><td><span class=\"inline-wrap\">OnModuleDestroy()</span></td><td><span class=\"inline-wrap\">收到终止信号(例如<span class=\"jill\"></span>SIGTERM)后调用</span></td></tr><tr><td><span class=\"inline-wrap\">beforeApplicationShutdown()</span></td><td><span class=\"inline-wrap\">在<span class=\"jill\"></span>onModuleDestroy()完成(Promise<span class=\"jill\"></span>被<span class=\"jill\"></span>resolved<span class=\"jill\"></span>或者<span class=\"jill\"></span>rejected)；一旦完成，将关闭所有连接(调用<span class=\"jill\"></span>app.close() 方法).</span></td></tr><tr><td><span class=\"inline-wrap\">OnApplicationShutdown()</span></td><td><span class=\"inline-wrap\">连接关闭处理时调用(app.close())</span></td></tr></tbody></table></div><div id=\"7Cwx3ksi9akqUjUpnhTqz7\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"xt3v1bVA2cKVCbPGafegvw\" class=\"wolai-block\"><span class=\"inline-wrap\">总结</span></h2><div id=\"nghMbVvEyw3HypqwccYkxP\" class=\"wolai-block wolai-text\"><div><span class=\"red inline-wrap\">NodeJS</span><span class=\"inline-wrap\">后端已经有很好生态，各类工程化与微服务需要功能都有了<span class=\"jill\"></span>npm<span class=\"jill\"></span>版本，内部数据通过<span class=\"jill\"></span>TypeScript<span class=\"jill\"></span>验证保证类型无误，只要处理好输入数据的验证和转换问题，是可以在实际项目中发挥力量的，但是，如果需要执行大量的计算（物联网，电子商务平台，大数据），那么使用<span class=\"jill\"></span>Spring Boot<span class=\"jill\"></span>会是更好的选择。</span></div></div><div id=\"kKE2KyGo1wGY3b3NGmMFN7\" class=\"wolai-block wolai-text\"><div></div></div></article><footer></footer></body></html>","date":"2023-12-11T04:23:18.982Z","updated":"2023-12-11T04:23:18.982Z","path":"html/nest/nest快速入门/Nest快速入门.html","title":"","comments":1,"layout":"page","_id":"clq0gtc9u0002zqq97tt2ehzs","content":"<!DOCTYPE html>\n<html lang=\"zh-Hans-CN\"><head><meta charset=\"utf-8\"/><meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/modern-norm.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/prism.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/katex.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/wolai.css\"/><title>Nest快速入门 - wolai 笔记</title><link rel=\"shortcut icon\" href=\"media/icon_1.svg\"></link></head><body class=\"more-lead\"><header><div class=\"image has\" style=\"background-position-y: 50%; background-image: url(&quot;https://cdn.wostatic.cn/cover/watercolor/3VMGfCa8UCpJ4Dy36jMNKa.jpg&quot;)\"></div><div class=\"title\"><div class=\"banner\"><div class=\"icon icon-image\" style=\"background-image: url(&quot;media/icon.svg&quot;)\"></div></div><div data-title=\"Nest快速入门\" class=\"main-title\"></div></div></header><article><h2 id=\"a1uYtFztFiFWjQkag7tYSF\" class=\"wolai-block\"><span class=\"inline-wrap\">背景</span></h2><h3 id=\"2iiyyJ4VXgZxP7VYJ3TJEe\" class=\"wolai-block\"><span class=\"inline-wrap\">全栈</span></h3><div id=\"rNfBe4qzEvxuvxE2XEbazd\" class=\"wolai-block wolai-text\"><div><span class=\"red inline-wrap\">发展全栈</span><span class=\"inline-wrap\">对公司和个人都大有益处，但最重要的还是对个人的发展如何。个人发展全栈主要还是为了应对未来，主要有几方面： 避免被淘汰、 提升个人价值、 走向管理职位、 实现创业梦。\n从个人为出发点，后端语言百花齐放，想要到一个比较深入的程度，那对所使用的开发语言、框架就需要稍微深入了。例如同时要深入<span class=\"jill\"></span>typescript、Java<span class=\"jill\"></span>的领域，那就会谈到精力问题，对个人来说似乎会很累，不太现实。</span></div></div><div id=\"dNVX1Zw72DNunVMHVer1Bv\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"vTj3PN5xW51TBHb1gAfTJE\" class=\"wolai-block\"><span class=\"inline-wrap\">NestJS</span></h3><div id=\"mFMJbA7fiswLxZFxjs6sCR\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">根据官网介绍：</span></div></div><blockquote id=\"csa4o4BUrgL7sYwrwviWQ9\" class=\"wolai-block\"><span class=\"inline-wrap\"><a href=\"https://docs.nestjs.cn/9/introduction\"><span class=\"red\">Nest (NestJS)</span></a></span><span class=\"inline-wrap\"> 是一个用于构建高效、可扩展的</span><span class=\"blue inline-wrap\"> </span><span class=\"inline-wrap\"><a href=\"https://nodejs.org/en/\"><span class=\"blue\">Node.js</span></a></span><span class=\"inline-wrap\"> 服务器端应用程序的开发框架。它利用<span class=\"jill\"></span>JavaScript 的渐进增强的能力，使用并完全支持 </span><span class=\"inline-wrap\"><a href=\"https://www.typescriptlang.org/\"><span class=\"blue\">TypeScript</span></a></span><span class=\"inline-wrap\"> （仍然允许开发者使用纯 JavaScript 进行开发），并结合了 OOP （面向对象编程）、FP （函数式编程）和 FRP （函数响应式编程）。</span></blockquote><div id=\"2t7XfBkTDUDuUnVXQyJEov\" class=\"wolai-block wolai-text\"><div><span class=\"red inline-wrap\">NestJS</span><span class=\"inline-wrap\"> 的一些</span><span class=\"inline-wrap\"><b>优势</b></span><span class=\"inline-wrap\">包括：</span></div></div><ul class=\"wolai-block\"><li id=\"x26B2f6QXtw18djiHcyCUz\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">构建在现代 JavaScript 栈之上，完全支持 TypeScript。</span></li><li id=\"f8gyHZnWYUSR6Gp7bA3r3X\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">基于 TypeScript，提供了</span><span class=\"inline-wrap\"><b>强类型和静态类型检查</b></span><span class=\"inline-wrap\">。</span></li><li id=\"dYvG1ygHryQbL6nZ3ZX7NQ\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">基于 Angular 的架构和语法，提供了强大的</span><span class=\"inline-wrap\"><b>模块化</b></span><span class=\"inline-wrap\">系统和</span><span class=\"inline-wrap\"><b>依赖注入</b></span><span class=\"inline-wrap\">功能。</span></li><li id=\"fqW4pZS4g6LKE8WuhcqZCH\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">提供了丰富的工具和模块，可用于构建各种类型的服务器端应用程序，包括 </span><span class=\"inline-wrap\"><b>RESTful API</b></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><b>GraphQL API</b></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><b>WebSocket 服务器</b></span><span class=\"inline-wrap\">等。</span></li><li id=\"8kbkCtiNrFD1mDah6Na1ZT\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">提供了一组可扩展的构建块，可用于快速构建应用程序。</span></li><li id=\"53cv5CExTcPbShMUZrfcAw\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">提供了与</span><span class=\"inline-wrap\"><b>主流数据库和身份验证系统</b></span><span class=\"inline-wrap\">的集成。</span></li></ul><div id=\"aMYXzPgbgRtY9UwbN7JRKb\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">对于前端人员来说，“一招<span class=\"jill\"></span>Typescript”吃遍前后端，何乐而不为。</span></div></div><div id=\"t1Kny6NdW3D3gAPFy5UZza\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"gfWAckkx1vMWubhqGyKCi8\" class=\"wolai-block\"><span class=\"inline-wrap\">前期准备</span></h2><h3 id=\"fYdFXJXZ5USEMGwLepasPa\" class=\"wolai-block\"><span class=\"inline-wrap\">项目初始化</span></h3><div id=\"f4sTWj3XAtj7MrfMK18oMY\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">确保已经安装了 </span><span class=\"inline-wrap\"><a href=\"https://nodejs.org/\"><span>Node.js</span></a></span><span class=\"inline-wrap\">（版本 &gt;= 12，v13 除外）</span></div></div><code-block id=\"mFKWA1ZpgZ6w69BXSdCdmo\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Bash\" class=\"marker\"></div><pre>$ <span class=\"token function\">npm</span> i <span class=\"token parameter variable\">-g</span> @nestjs/cli \n$ nest new project-name</pre></div></code-block><h3 id=\"27GR4p5NSjNFuhDYmGFh81\" class=\"wolai-block\"><span class=\"inline-wrap\">运行项目</span></h3><div id=\"8e1JnYkDG4KG7Vbd8R1mBo\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">启动 HTTP 服务监听定义在 src/main.ts 文件中定义的端口号。在浏览器访问</span><span class=\"inline-wrap\"><code>[http://localhost:3000](http://localhost:3000/)/</code></span><span class=\"inline-wrap\">，访问成功代表服务已经<span class=\"jill\"></span>OK<span class=\"jill\"></span>了；</span></div></div><code-block id=\"xz5ySJsu6vB8JXeeD69bxj\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Bash\" class=\"marker\"></div><pre><span class=\"token comment\"># dev为热更新模式</span>\n$ <span class=\"token function\">npm</span> run start:dev</pre></div></code-block><div id=\"7VgkYyTik3S3XVZaSH8MJM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"hR2z7zBQpPyDK4NWaTWpip\" class=\"wolai-block\"><span class=\"inline-wrap\">框架约束</span></h3><div id=\"4XZve4qTxCGbkdAEzojv8u\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><b>NestJS<span class=\"jill\"></span>文件约束：</b></span></div></div><ul class=\"wolai-block\"><li id=\"9uMYBrKqn82mq54BYEy5sC\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">每个模块最少有三种文件组合：</span><span class=\"inline-wrap\"><b>module</b></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><b>server</b></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><b>controller</b></span><span class=\"inline-wrap\">。</span></li><li id=\"rTDPDGyPgdZvs9HUviSrvm\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">具有同一</span><span class=\"inline-wrap\"><b>应用程序域</b></span><span class=\"inline-wrap\">的文件应该放到同一个</span><span class=\"inline-wrap\"><b>功能模块</b></span><span class=\"inline-wrap\">下。</span></li><li id=\"gybWw8KrcrL7uhanYCbab2\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">NestJS<span class=\"jill\"></span>允许命令行创建不生成</span><span class=\"inline-wrap\"><code>.spec</code></span><span class=\"inline-wrap\">(</span><span class=\"inline-wrap\"><code>nest g controller product --no-spec</code></span><span class=\"inline-wrap\">)。</span></li></ul><div id=\"vTu8EN1DrNwGGfs9DqDNc3\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">初始化后项目的</span><span class=\"inline-wrap\"><b>主要</b></span><span class=\"inline-wrap\">目录结构：</span></div></div><div id=\"1djLGgWgtPj97LG6GLjLaE\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"https://cdn.nlark.com/yuque/0/2023/png/21771732/1676175485415-b4298c68-ff05-46de-8abc-ee7e74de4962.png#averageHue=%23232425&amp;clientId=u31848435-c35d-4&amp;from=paste&amp;height=231&amp;id=r8Kpi&amp;name=image.png&amp;originHeight=136&amp;originWidth=226&amp;originalType=binary&amp;ratio=2&amp;rotation=0&amp;showTitle=false&amp;size=8527&amp;status=done&amp;style=none&amp;taskId=u260e6f9f-ef8f-4ac3-912f-1f04d640f74&amp;title=&amp;width=384\" style=\"width: 350px\"/></figure></div><div id=\"bggoUcy6VZvLdMzDEf5YgT\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">\n这里涉及到<span class=\"jill\"></span>NestJs<span class=\"jill\"></span>框架的文件约束：</span></div></div><div id=\"jRke5GJNYEuQUZRWiX8bne\" class=\"wolai-block wolai-simple-table\"><table><thead><tr><th style=\"width: 370px\"><span class=\"inline-wrap\">app.controller.ts</span></th><th style=\"width: 370px\"><span class=\"inline-wrap\">单个路由的基本控制器(Controller)</span></th></tr></thead><tbody><tr><td><span class=\"inline-wrap\">app.controller.spec.ts</span></td><td><span class=\"inline-wrap\">针对控制器的单元测试</span></td></tr><tr><td><span class=\"inline-wrap\">app.module.ts</span></td><td><span class=\"inline-wrap\">应用程序的根模块(Module)</span></td></tr><tr><td><span class=\"inline-wrap\">app.service.ts</span></td><td><span class=\"inline-wrap\">具有单一方法的基本服务(Service)</span></td></tr><tr><td><span class=\"inline-wrap\">main.ts</span></td><td><span class=\"inline-wrap\">应用程序的入口文件，它使用核心函数 NestFactory 来创建 Nest 应用程序的实例。</span></td></tr></tbody></table></div><div id=\"rV2f48p1L2kPwgsrb4ibVf\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在</span><span class=\"inline-wrap\"><code>main.ts</code></span><span class=\"inline-wrap\">中使用工厂函数</span><span class=\"inline-wrap\"><code>NestFactory</code></span><span class=\"inline-wrap\">创建一个 </span><span class=\"inline-wrap\"><code>AppModule</code></span><span class=\"inline-wrap\"> 应用实例，启动 HTTP 监听器，等待 HTTP 请求。</span></div></div><code-block id=\"2zVyJ5Zj9Gc1KtqLKmGg5v\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> NestFactory <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> NestExpressApplication <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/platform-express'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppModule <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.module'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// &lt;NestExpressApplication> ｜ &lt;NestFastifyApplication> | &lt;></span>\n  <span class=\"token comment\">// 一般来说我们选择 NestExpress，因为网上资源多，官方文档有很多例子都是基于Express</span>\n  <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> NestFactory<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>NestExpressApplication<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>AppModule<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 设置全局路由前缀</span>\n  <span class=\"token comment\">// app.setGlobalPrefix('api');</span>\n  <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></div></code-block><details id=\"oENuQB9kWyuNtBn3iuWeRq\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">可选平台</span></summary><ul class=\"wolai-block\"><li id=\"jcM4g8n6NCYGMaBAXSJ1V8\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><a href=\"https://expressjs.com/\"><span>Express</span></a></span><span class=\"inline-wrap\"> 是一个众所周知的 node.js 简约 Web 框架。 这是一个经过实战考验，适用于生产的库，拥有大量社区资源。 默认情况下使用 @nestjs/platform-express 包。许多用户都可以使用 Express ，并且无需采取任何操作即可启用它。</span></li><li id=\"xL5xdwkuFqYuvSxN53cDC\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><a href=\"https://www.fastify.io/\"><span>Fastify</span></a></span><span class=\"inline-wrap\"> 是一个高性能，低开销的框架，专注于提供最高的效率和速度。 在</span><span class=\"inline-wrap\"><a href=\"https://docs.nestjs.cn/8/techniques?id=性能（fastify）\"><span>这里</span></a></span><span class=\"inline-wrap\">\n阅读如何使用它。</span></li></ul></details><div id=\"2TfvXszk3zPuSJSuoUvV1a\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"oFsM1zTaWu6mkwgrVcmsT4\" class=\"wolai-block\"><span class=\"inline-wrap\">工作流程</span></h3><div id=\"phcgqypcfvXSQL2PgMGqiM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在开始之前，不妨先看一下 Nest 的工作流程：</span></div></div><div id=\"s8gPx96gyGdKv3uajmm4Z4\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/nest%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B.png\" style=\"width: 623px\"/></figure></div><div id=\"jfvXdPDg8ZhaGcZ265MTXb\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">整个请求的过程如上图所示，正常情况下提供者组件都以</span><span class=\"inline-wrap\"><b>全局第一</b></span><span class=\"inline-wrap\">顺序执行的原则，而过滤器则相反，会从最底层开始处理，即路由→控制器→全局。</span></div></div><div id=\"skRhpCWNtaPD1hWvzRyShU\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"6zBjY2FBSyoNJ3XX3rVxb1\" class=\"wolai-block\"><span class=\"inline-wrap\">基础概念</span></h2><h3 id=\"hmYZ962ZGum1RFZKAtsWCk\" class=\"wolai-block\"><span class=\"inline-wrap\">模块</span></h3><aside id=\"fWXgHuLtRLCW1qqHj3Sxuh\" class=\"bg-cultured wolai-block\"><div data-symbol=\"📌\" class=\"icon\"></div><span class=\"inline-wrap\">模块是用 </span><span class=\"inline-wrap\"><code>@Module()</code></span><span class=\"inline-wrap\"> 装饰的类。 </span><span class=\"inline-wrap\"><code>@Module()</code></span><span class=\"inline-wrap\"> 装饰器提供了元数据，Nest 用它来组织应用程序结构。</span></aside><div id=\"dB289MjQc5vNitMLAUWHgD\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">模块主要分<span class=\"jill\"></span>4<span class=\"jill\"></span>种：</span></div></div><ol class=\"wolai-block\"><li id=\"1DpNdvQWj9EahKJXEEepFS\"><div class=\"marker\"></div><span class=\"inline-wrap\">功能模块</span></li><li id=\"ah6VB7pjpePaGbp4DERt1L\"><div class=\"marker\"></div><span class=\"inline-wrap\">共享模块</span></li><li id=\"m5k5fNL9kiHZFm4iAoEPQB\"><div class=\"marker\"></div><span class=\"inline-wrap\">全局模块</span></li><li id=\"8miLPP9z4vaNjrMURbn6JT\"><div class=\"marker\"></div><span class=\"inline-wrap\">动态模块</span></li></ol><div id=\"swxK5XbJrZqcMaFke43iPk\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>main.ts</code></span><span class=\"inline-wrap\"> 只引入了</span><span class=\"inline-wrap\"><code>app.module.ts</code></span><span class=\"inline-wrap\">文件，此为应用程序的根模块(每个 Nest 应用程序至少有一个模块)：</span></div></div><code-block id=\"cbUuD1wnyPqUNWZovjYCzq\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Module <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppController <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><blockquote id=\"vseGVCvR5BTjHLiAZactLz\" class=\"wolai-block\"><span class=\"inline-wrap\">对装饰器不了解的，可以看</span><span class=\"inline-wrap\"><a href=\"https://juejin.cn/post/6859314697204662279#heading-2\"><span>走近<span class=\"jill\"></span>MidwayJS：初识<span class=\"jill\"></span>TS<span class=\"jill\"></span>装饰器与<span class=\"jill\"></span>IoC<span class=\"jill\"></span>机制</span></a></span></blockquote><div id=\"sG5SX3DZsTx8XT9BgzhwR4\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Module()</code></span><span class=\"inline-wrap\">装饰器接收四个属性：</span><span class=\"inline-wrap\"><code>providers</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>controllers</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>imports</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>exports</code></span><span class=\"inline-wrap\">。</span></div></div><div id=\"2VBB1rY6YW1e9u3U4MZQAi\" class=\"wolai-block wolai-simple-table\"><table><thead><tr><th style=\"width: 173px\"><span class=\"inline-wrap\"><code>providers</code></span></th><th style=\"width: 561px\"><span class=\"inline-wrap\">Nest.js<span class=\"jill\"></span>注入器实例化的提供者（服务提供者），处理具体的业务逻辑，各个模块之间可以共享；</span></th></tr></thead><tbody><tr><td><span class=\"inline-wrap\"><code>controllers</code></span></td><td><span class=\"inline-wrap\">处理<span class=\"jill\"></span>http<span class=\"jill\"></span>请求，包括路由控制，向客户端返回响应，将具体业务逻辑委托给<span class=\"jill\"></span>providers<span class=\"jill\"></span>处理；</span></td></tr><tr><td><span class=\"inline-wrap\"><code>imports</code></span></td><td><span class=\"inline-wrap\">导入模块的列表，如果需要使用其他模块的服务，需要通过这里导入；</span></td></tr><tr><td><span class=\"inline-wrap\"><code>exports</code></span></td><td><span class=\"inline-wrap\">导出服务的列表，供其他模块导入使用。如果希望当前模块下的服务可以被其他模块共享，需要在这里配置导出；</span></td></tr></tbody></table></div><div id=\"omBzRKQVUWmuM3HNYPpxyK\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">下面通过一个产品的<span class=\"jill\"></span>CRUD<span class=\"jill\"></span>例子来进行演示：</span></div></div><div id=\"jD3WK7TEnYZQA2viyPemkE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">NestJs<span class=\"jill\"></span>中，具有同一</span><span class=\"inline-wrap\"><b>应用程序域</b></span><span class=\"inline-wrap\">的文件应该放到同一个</span><span class=\"inline-wrap\"><b>功能模块</b></span><span class=\"inline-wrap\">下：\n首先我们可以通过<span class=\"jill\"></span>nest-cli<span class=\"jill\"></span>提供的命令生成模块:</span></div></div><ul class=\"wolai-block\"><li id=\"3j7Xowd15z596hM6Xvsad1\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>nest g module products</code></span></li></ul><code-block id=\"xnqKdNQD5C2i29oeUV1YT5\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Module <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></div></code-block><div id=\"vHYj4xDXmoeouCbyWTuhUk\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">同时 </span><span class=\"inline-wrap\"><b>ProductsModule</b></span><span class=\"inline-wrap\"> 也会被自动注册到根模块：</span></div></div><code-block id=\"bLLkubnsadm6D3gCYsKXBJ\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Module <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppController <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ProductsModule <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./products/products.module'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>ProductsModule<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></div></code-block><div id=\"kQDnu61E1bMjr2AYjeFQkh\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这样便完成了一个新的功能模块的注册。</span></div></div><details id=\"baDsYanmXFZmawKW3uZY4C\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">共享模块</span></summary><div id=\"euyBAoUFoWW3vte4CsZRau\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在 Nest 中，默认情况下，模块是</span><span class=\"inline-wrap\"><b>单例</b></span><span class=\"inline-wrap\">的，因此我们可以轻松地在多个模块之间共享</span><span class=\"inline-wrap\"><b>同一个提供者实例</b></span><span class=\"inline-wrap\">。模块本身存在</span><span class=\"inline-wrap\"><b>共享性，</b></span><span class=\"inline-wrap\"> 一个模块一旦创建便可以被任意模块重复使用。例如：</span></div></div><code-block id=\"nw7TzB8MSkHSVfsLon9zru\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Module <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> CatsController <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./cats.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> CatsService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./cats.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>CatsController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>CatsService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 导出模块供其他模块倒入，所有模块共享catsService实例</span>\n  exports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>CatsService<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CatsModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></div></code-block></details><details id=\"qYVqSPXtXLbDAn4gJJUnWA\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">全局模块</span></summary><div id=\"v9vw5N3wkGuLHXiYmMZZz4\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">如果想提供一些通用的模块，如：helper，数据库连接等等，可以创建全局模块，也比较简单，增加</span><span class=\"inline-wrap\"><code>@Global</code></span><span class=\"inline-wrap\">即可，全局模块应该只注册一次，最好由根或核心模块注册。</span></div></div><code-block id=\"k5ofsFrfpW73wfZJwUevGz\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Module<span class=\"token punctuation\">,</span> Global <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> CatsController <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./cats.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> CatsService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./cats.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Global</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>CatsController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>CatsService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  exports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>CatsService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CatsModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></div></code-block></details><details id=\"v8PRgFFSfSFVUKiyDENMYE\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">动态模块</span></summary><div id=\"gxavGczvAKZm9TgRei3QV6\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">动态模块在 Nest 中也是非常重要的。此功能使您可以轻松创建可自定义的模块，这些模块可以动态注册和配置提供程序。例如：注册动态模块：</span><span class=\"inline-wrap\"><code>DatabaseModule</code></span></div></div><code-block id=\"tzLFeHfN5pwoSAZ7texrid\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Module<span class=\"token punctuation\">,</span> DynamicModule <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> createDatabaseProviders <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./database.providers'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Connection <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./connection.provider'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>Connection<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DatabaseModule</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">static</span> <span class=\"token function\">forRoot</span><span class=\"token punctuation\">(</span>entities <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> options<span class=\"token operator\">?</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> DynamicModule <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> providers <span class=\"token operator\">=</span> <span class=\"token function\">createDatabaseProviders</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">,</span> entities<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n      module<span class=\"token operator\">:</span> DatabaseModule<span class=\"token punctuation\">,</span>\n      providers<span class=\"token operator\">:</span> providers<span class=\"token punctuation\">,</span>\n      exports<span class=\"token operator\">:</span> providers<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></pre></div></code-block><div id=\"wsiaZW9ERDPEpyNWJ9o1ct\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">使用该模块</span></div></div><code-block id=\"jfFEsHvBAZRKPePid8MMbe\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Module <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> DatabaseModule <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./database/database.module'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> User <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./users/entities/user.entity'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>DatabaseModule<span class=\"token punctuation\">.</span><span class=\"token function\">forRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>User<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></div></code-block></details><div id=\"3zLBwbLKVc2kyFZGPWR2H6\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"fkBxHS4Cwjg7YytF3h2JmB\" class=\"wolai-block\"><span class=\"inline-wrap\">控制器</span></h3><div id=\"aVofQxHeGr29Wn7DDnaFoR\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">同样的，通过<span class=\"jill\"></span>nest-cli<span class=\"jill\"></span>提供的命令生成控制器:</span></div></div><ul class=\"wolai-block\"><li id=\"99RTU8gciASTX9pz1riv7C\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>nest g controller products</code></span></li></ul><blockquote id=\"5HXKVBNFHsMKGjsBu7K8mQ\" class=\"wolai-block\"><span class=\"inline-wrap\">在<span class=\"jill\"></span>Nest<span class=\"jill\"></span>中，使用装饰器</span><span class=\"inline-wrap\"><code>@Controller()</code></span><span class=\"inline-wrap\">定义一个基本的控制器，该装饰器可以传入一个路径参数</span></blockquote><code-block id=\"ndFQZZyoCX6i9eBidw3rDB\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'products'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 下一步生成服务提供者后需要注入控制器</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> productsService<span class=\"token operator\">:</span> ProductsService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></pre></div></code-block><div id=\"ufkgyV3TVBCiLB9uTYhCXL\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">同时在 </span><span class=\"inline-wrap\"><code>products.module.ts</code></span><span class=\"inline-wrap\">文件中会自动注册 ProductsController。</span></div></div><div id=\"uXWJqcFCLGGKCUzzpxm2d7\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"1MT8Pn8Q1pu1TnUw3UrsgN\" class=\"wolai-block\"><span class=\"inline-wrap\">服务</span></h3><div id=\"m7eTjTbuKUCEMePeo2op5T\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">一样的操作，使用命令生成</span></div></div><ul class=\"wolai-block\"><li id=\"qT8A69NxdVE4LitWSq18gt\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>nest g service products</code></span></li></ul><blockquote id=\"5yXzeJjh3sQQvRkdB8d174\" class=\"wolai-block\"><span class=\"inline-wrap\">其实可以通过 </span><span class=\"inline-wrap\"><code>nest g resource products</code></span><span class=\"inline-wrap\">一次性生成。\n更多创建命令可以通过 </span><span class=\"inline-wrap\"><code>nest generate --help</code></span><span class=\"inline-wrap\">查看。</span></blockquote><code-block id=\"7hNmcZjBRM6Lf3DwwCJLKg\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Injectable <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsService</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></div></code-block><div id=\"1H8c2jJLye8wyxhLrFTSJG\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">此时的 products.module.ts 文件</span></div></div><code-block id=\"xbLr6rWMcMVjx45eAT1iJX\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Module <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ProductsController <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./products.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ProductsService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./products.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>ProductsController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>ProductsService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></div></code-block><div id=\"hjvefEsX7pXJs2BGuRbFYX\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">到目前为止，已经完成了 </span><span class=\"inline-wrap\"><code>Products</code></span><span class=\"inline-wrap\"> 功能模块的搭建。接下来了解一下上面的操作，Nest<span class=\"jill\"></span>帮我们做了什么？</span></div></div><div id=\"wJsRr2QHLxqdw4EWAm5qs4\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"4JTe9tdnKAuXwmL7N2ZKeF\" class=\"wolai-block\"><span class=\"inline-wrap\">依赖注入</span></h3><aside id=\"t8R5k2spMpnHQn2JpTmLKK\" class=\"bg-cultured wolai-block\"><div data-symbol=\"🚗\" class=\"icon\"></div><span class=\"inline-wrap\">上面我们大概认识了</span><span class=\"red inline-wrap\">Nest</span><span class=\"inline-wrap\">的</span><span class=\"inline-wrap\"><b>模块化</b></span><span class=\"inline-wrap\">，那</span><span class=\"red inline-wrap\"> Nest </span><span class=\"inline-wrap\">的</span><span class=\"inline-wrap\"><b>依赖注入</b></span><span class=\"inline-wrap\">又是怎样的呢？</span></aside><div id=\"rK5FcPgrKFNnuCNrgzTc7D\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"> 先回顾一下之前的大致操作：</span></div></div><ol class=\"wolai-block\"><li id=\"3mETwFcPD5AELb2yrSFew5\"><div class=\"marker\"></div><span class=\"inline-wrap\">在</span><span class=\"inline-wrap\"><code>products.service.ts</code></span><span class=\"inline-wrap\">中，装饰器</span><span class=\"inline-wrap\"><code>@Injectable()</code></span><span class=\"inline-wrap\">将类</span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\">标记为可以被<span class=\"jill\"></span>Nest IoC<span class=\"jill\"></span>容器管理的类。</span></li><li id=\"wPC3nNME6Jxeg8zzmcRjQh\"><div class=\"marker\"></div><span class=\"inline-wrap\">在</span><span class=\"inline-wrap\"><code>products.controller.ts</code></span><span class=\"inline-wrap\"> 中，</span><span class=\"inline-wrap\"><code>ProductsController</code></span><span class=\"inline-wrap\"> 通过构造函数注入声明对</span><span class=\"inline-wrap\"><code>CatsService</code></span><span class=\"inline-wrap\">的依赖：</span><code-block id=\"5eUm8RXgNVLUbLfngbEGW2\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> productsService<span class=\"token operator\">:</span> ProductsService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></pre></div></code-block></li><li id=\"caiFZSs1bYpHRSe1ZAcTgW\"><div class=\"marker\"></div><span class=\"inline-wrap\">在</span><span class=\"inline-wrap\"><code>products.module.ts</code></span><span class=\"inline-wrap\">模块（ IoC 容器）中注册提供者。</span><code-block id=\"9Qf1rA2r4PnJ9hMwifZaoz\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>ProductsController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>ProductsService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></div></code-block></li></ol><div id=\"jVZ14ge29sf1b7EAomH4gG\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这个过程是<span class=\"jill\"></span>Nest 是如何处理的：</span></div></div><div id=\"qEUB79D8hwZNYwzow2wcFK\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"rPFYyg9a6aQK71pDpgxvcy\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">当 Nest IoC 容器实例化 </span><span class=\"red inline-wrap\">ProductsController </span><span class=\"inline-wrap\">时，它首先查找任何依赖项。当它找到 </span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\"> 依赖项时，它会对 </span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\"> 令牌执行查找，根据注册步骤（第<span class=\"jill\"></span>3）返回 </span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\"> 类。</span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\">假设 </span><span class=\"inline-wrap\"><code>SINGLETON</code></span><span class=\"inline-wrap\"> 作用域（默认行为），Nest 将创建一个 </span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\"> 实例，缓存它并返回它，或者如果已经缓存了一个实例，则返回现有实例。</span></div></div><blockquote id=\"bFtMPbZfGY21bLYDS521Tm\" class=\"wolai-block\"><span class=\"inline-wrap\">事实上，语法</span><span class=\"inline-wrap\"><code>providers: [ProductsService]</code></span><span class=\"inline-wrap\"> 是更完整语法的简写：</span><code-block id=\"db4Kb3GTLNoTXkxCjSgGUk\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre>providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>\n  provide<span class=\"token operator\">:</span> ProductsService<span class=\"token punctuation\">,</span>\n  useClass<span class=\"token operator\">:</span> ProductsService<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></div></code-block><div id=\"nY8xtmJrzQJRc47FdJ9jZ9\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">现在我们看到了这个显式构造，我们可以了解注册过程。在这里，我们清楚地将令牌<span class=\"jill\"></span>ProductsService<span class=\"jill\"></span>与</span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\">相关联。</span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\">速记符号只是为了简化最常见的用例，其中令牌用于请求具有</span><span class=\"inline-wrap\"><b>相同名称的类</b></span><span class=\"inline-wrap\">的实例。</span></div></div></blockquote><div id=\"2wLN9fQd4RzadisGGt4cyQ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"88o2MQFdRi242G6No8QFYy\" class=\"wolai-block\"><span class=\"inline-wrap\">核心概念</span></h2><div id=\"rSup3o9c1JPyMgLvUmcAhs\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">接下来围绕业务来介绍其他几个核心概念，在这之前，先来了解一下 </span><span class=\"inline-wrap\"><b>NestJS</b></span><span class=\"inline-wrap\"> 如何接入数据库。</span></div></div><h3 id=\"8PacdTkzmhJrmTHQEQJ3BE\" class=\"wolai-block\"><span class=\"inline-wrap\">数据库</span></h3><div id=\"wqA7Z9BrQVSQsoAxmjXwJx\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这里以</span><span class=\"inline-wrap\"><b>TypeORM<span class=\"jill\"></span>框架</b></span><span class=\"inline-wrap\">为例与<span class=\"jill\"></span>MySQL<span class=\"jill\"></span>数据库进行交互。</span></div></div><blockquote id=\"6T2QEySC3NLyekC89RZek4\" class=\"wolai-block\"><span class=\"inline-wrap\">ORM<span class=\"jill\"></span>技术（Object-Relational Mapping）,把关系数据库的变结构映射到对象上。</span></blockquote><div id=\"pVHfUECp1UVhRrhuZSdBtB\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">安装依赖：</span></div></div><code-block id=\"x9shieZiit8X7JJZGk2Yze\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Bash\" class=\"marker\"></div><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> @nestjs/typeorm typeorm mysql2 <span class=\"token parameter variable\">-S</span></pre></div></code-block><div id=\"t9NqEiVt4KKHETEAjSbAzA\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在 app.module.ts 中注册：</span></div></div><code-block id=\"oo1brk5EE7KP61RueGPvMt\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Module <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> TypeOrmModule <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/typeorm'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppController <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ProductsModule <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./products/products.module'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    ProductsModule<span class=\"token punctuation\">,</span>\n    TypeOrmModule<span class=\"token punctuation\">.</span><span class=\"token function\">forRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">'mysql'</span><span class=\"token punctuation\">,</span>\n      host<span class=\"token operator\">:</span> <span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span>\n      port<span class=\"token operator\">:</span> <span class=\"token number\">3306</span><span class=\"token punctuation\">,</span>\n      username<span class=\"token operator\">:</span> <span class=\"token string\">'root'</span><span class=\"token punctuation\">,</span>\n      password<span class=\"token operator\">:</span> <span class=\"token string\">'123456'</span><span class=\"token punctuation\">,</span>\n      database<span class=\"token operator\">:</span> <span class=\"token string\">'store'</span><span class=\"token punctuation\">,</span>\n      autoLoadEntities<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 自动加载实体</span>\n      synchronize<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><div id=\"xqeMoecUQKU2gcr9Vet5MC\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这是最简单的配置方式，当然 **TypeORM **也非常方便地支持：</span></div></div><ul class=\"wolai-block\"><li id=\"imBZdVmoVYP63draomysvG\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">存储库模式</span><ul class=\"wolai-block\"><li id=\"xpsF59KPPiuLyVFRZisFsY\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">每个实体都有自己的存储库<span class=\"jill\"></span>Entity。</span></li></ul></li><li id=\"bPLHW6RB66AKSvK9SHJ5jE\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">实体关系</span><ul class=\"wolai-block\"><li id=\"7pgTFQK7DVUyyFZn1F8SXE\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">一对一</span><span class=\"inline-wrap\"><code>@OneToOne()</code></span><span class=\"inline-wrap\">，一对多</span><span class=\"inline-wrap\"><code>@OneToMany()</code></span><span class=\"inline-wrap\">和</span><span class=\"inline-wrap\"><code>@ManyToOne()</code></span><span class=\"inline-wrap\">，多对多</span><span class=\"inline-wrap\"><code>@ManyToMany()</code></span></li></ul></li><li id=\"bTwdqug4H6vUdzcrkZFgij\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">自动载入实体</span></li><li id=\"owh5nhB7i5m1oNyeT6ajhN\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">事务</span></li><li id=\"bB3jo9MYEJC3YSG36jfyiB\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">多数据库</span></li><li id=\"19WF656LVus4GGmAWRgTHg\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">异步配置</span></li><li id=\"gMTJHqE4p2ZhBVeq51DaEf\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">等等</span></li></ul><div id=\"wVAjtxjG6J1fwegi6eAw4L\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">详细可参考</span><span class=\"inline-wrap\"><a href=\"https://docs.nestjs.cn/8/techniques?id=数据库\"><span>官方文档</span></a></span><span class=\"inline-wrap\">。</span></div></div><div id=\"pYSxj9qczvtvKR1x2J6eyi\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">对了，不忘创建一下 </span><span class=\"inline-wrap\"><code>Products</code></span><span class=\"inline-wrap\"> 的实体类；</span></div></div><code-block id=\"1DiNRwS15WPcvirUZHxVM9\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Column<span class=\"token punctuation\">,</span> Entity<span class=\"token punctuation\">,</span> PrimaryGeneratedColumn <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Entity</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'products'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsEntity</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">PrimaryGeneratedColumn</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  id<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 标记为主列，值自动生成</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Column</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> length<span class=\"token operator\">:</span> <span class=\"token number\">50</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  title<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Column</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'text'</span><span class=\"token punctuation\">)</span>\n  desc<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Column</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  thumb_url<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Column</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'tinyint'</span><span class=\"token punctuation\">)</span>\n  type<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Column</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'timestamp'</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">default</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">'CURRENT_TIMESTAMP'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  create_time<span class=\"token operator\">:</span> Date<span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Column</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'timestamp'</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">default</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">'CURRENT_TIMESTAMP'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  update_time<span class=\"token operator\">:</span> Date<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><div id=\"1KFQPpLd5fLHjhjS9cr6XW\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">完成数据库的打通后，开始增加业务逻辑代码。</span></div></div><div id=\"3aZNCYoqj5aaUQY7YSB1k1\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"6aaF3c5Xz3vUDp3g8YJUJn\" class=\"wolai-block\"><span class=\"inline-wrap\">HTTP<span class=\"jill\"></span>装饰器</span></h3><div id=\"k4bcPecj5zszYX3nRRcaXk\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">HTTP 装饰器使用起来同样非常简单；\nNest 为所有标准的 HTTP 方法提供了相应的装饰器：</span></div></div><ul class=\"wolai-block\"><li id=\"mEWkPd3qW4X39HTPu3oirU\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Get()</code></span></li><li id=\"3B23A4ZKtezmVtGwW5rF7A\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Post()</code></span></li><li id=\"h2TaCX4oUHLFrJw5haNqzE\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Put()</code></span></li><li id=\"kX1vjzkk1xt2uEUcSyWzS4\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Delete()</code></span></li><li id=\"bvB3u8smKMKzb6e4qUnpui\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Patch()</code></span></li><li id=\"59uJoGZn4ioDkzpqN9TJz4\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Options()</code></span></li><li id=\"txTiANQNf2A4KG77GG6CUj\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Head()</code></span></li><li id=\"pRbQyTwx54JKMbhRn5yUWK\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@All() </code></span><span class=\"inline-wrap\">用于定义一个用于处理所有 HTTP 请求方法的处理程序。</span></li></ul><div id=\"dVR7z84Qcbecjo31SqHKmt\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">经过它们装饰的方法，可以对相应的<span class=\"jill\"></span>HTTP<span class=\"jill\"></span>请求进行响应。\n同时它们可以接受一个字符串或一个字符串数组作为参数，这里的</span><span class=\"inline-wrap\"><b>字符串</b></span><span class=\"inline-wrap\">可以是固定的路径，也可以是</span><span class=\"inline-wrap\"><b>通配符</b></span><span class=\"inline-wrap\">。</span></div></div><code-block id=\"p3p1JCt33h5EDhPpGdGN9t\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Body<span class=\"token punctuation\">,</span> Controller<span class=\"token punctuation\">,</span> Delete<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Param<span class=\"token punctuation\">,</span> Post<span class=\"token punctuation\">,</span> Put<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ApiOperation<span class=\"token punctuation\">,</span> ApiTags <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/swagger'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> CreateProductDto <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./dto/create-product.dto'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ProductsService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./products.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiTags</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'产品'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'products'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> productsService<span class=\"token operator\">:</span> ProductsService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiOperation</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> summary<span class=\"token operator\">:</span> <span class=\"token string\">'创建产品'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Post</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Body</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> product<span class=\"token operator\">:</span> CreateProductDto<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsService<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>ProductsEntity<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsService<span class=\"token punctuation\">.</span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">':id'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">findById</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Param</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsService<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Put</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">':id'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Param</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span> id<span class=\"token punctuation\">,</span> <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Body</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> product<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsService<span class=\"token punctuation\">.</span><span class=\"token function\">updateById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Delete</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Param</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsService<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></pre></div></code-block><div id=\"tz2cfHamcN2vQYAJBtQccB\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h4 id=\"5LRjxn2QnDbWnzQ7sRaLSU\" class=\"wolai-block\"><span class=\"inline-wrap\">@Req()、@Res()</span></h4><div id=\"vwVsLsgmaTfu83JogFEjkQ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest 提供了对底层平台（默认为 Express）的</span><span class=\"inline-wrap\"><a href=\"http://expressjs.com/en/api.html#req\"><span>请求对象</span></a></span><span class=\"inline-wrap\">（request）的访问方式。我们可以在待处理函数的签名中增加</span><span class=\"inline-wrap\"><code>@Req()</code></span><span class=\"inline-wrap\">装饰器，Nest 则会自动注入请求对象。</span></div></div><div id=\"4DHNVkC4EESEdN3oipF3j7\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">针对<span class=\"jill\"></span>HTTP<span class=\"jill\"></span>请求，Nest 提供了开箱即用的专有装饰器，如下</span></div></div><div id=\"2hhHqDif8teP5BWxtczMGq\" class=\"wolai-block wolai-simple-table\"><table><thead><tr><th style=\"width: 370px\"><span class=\"inline-wrap\"><b></b></span><span class=\"inline-wrap\"><b>装饰器</b></span></th><th style=\"width: 370px\"><span class=\"inline-wrap\"><b></b></span><span class=\"inline-wrap\"><b>对应参数</b></span></th></tr></thead><tbody><tr><td><span class=\"inline-wrap\">@Request()，@Req()</span></td><td><span class=\"inline-wrap\">req</span></td></tr><tr><td><span class=\"inline-wrap\">@Response()，@Res()*</span></td><td><span class=\"inline-wrap\">res</span></td></tr><tr><td><span class=\"inline-wrap\">@Next()</span></td><td><span class=\"inline-wrap\">next</span></td></tr><tr><td><span class=\"inline-wrap\">@Session()</span></td><td><span class=\"inline-wrap\">req.session</span></td></tr><tr><td><span class=\"inline-wrap\">@Param(key?: string)</span></td><td><span class=\"inline-wrap\">req.params/req.params[key]</span></td></tr><tr><td><span class=\"inline-wrap\">@Body(key?: string)</span></td><td><span class=\"inline-wrap\">req.body/req.body[key]</span></td></tr><tr><td><span class=\"inline-wrap\">@Query(key?: string)</span></td><td><span class=\"inline-wrap\">req.query/req.query[key]</span></td></tr><tr><td><span class=\"inline-wrap\">@Headers(name?: string)</span></td><td><span class=\"inline-wrap\">req.headers/req.headers[name]</span></td></tr><tr><td><span class=\"inline-wrap\">@Ip()</span></td><td><span class=\"inline-wrap\">req.ip</span></td></tr><tr><td><span class=\"inline-wrap\">@HostParam()</span></td><td><span class=\"inline-wrap\">req.hosts</span></td></tr></tbody></table></div><div id=\"4mvAaoD3Zq9aAgUTqVUnoA\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">另外，Nest<span class=\"jill\"></span>还支持较多的装饰器，例如</span></div></div><ul class=\"wolai-block\"><li id=\"dkF9aTHtEcB64epMpxUKBt\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@HttpCode(statusCode)</code></span><span class=\"inline-wrap\"> 修改响应状态码</span></li><li id=\"sVdukeLBifaNor4LoU26SN\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Header(key, value)</code></span><span class=\"inline-wrap\">  自定义响应头</span></li><li id=\"jPXiJYr6Dr2XL4A96p92Pg\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Redirect(url, statusCode|302)</code></span><span class=\"inline-wrap\"> 设置重定向</span></li></ul><div id=\"enpdNw7rvLtCmEQ5MkeAkV\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">详细可参考</span><span class=\"inline-wrap\"><a href=\"https://docs.nestjs.com/controllers\"><span>官方文档</span></a></span><span class=\"inline-wrap\">查阅。</span></div></div><div id=\"iMXKuc8znNMgiqqKi2nAYE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"hQPRDcSjY776EmSXShBfSo\" class=\"wolai-block\"><span class=\"inline-wrap\">Repository</span></h3><div id=\"a8pf73Bu6fToHEL8GeCZAo\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">上面介绍了 </span><span class=\"inline-wrap\"><b>TypeORM</b></span><span class=\"inline-wrap\"> 以及 </span><span class=\"inline-wrap\"><b>Entity</b></span><span class=\"inline-wrap\">，这里具体化一下 service；</span></div></div><code-block id=\"aXoWFKGuL1Yyo1xhkCRv4M\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> HttpException<span class=\"token punctuation\">,</span> Injectable <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> InjectRepository <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/typeorm'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Repository <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ProductsEntity <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./products.entity'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsService</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>\n    <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">InjectRepository</span></span><span class=\"token punctuation\">(</span>ProductsEntity<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> productsRepository<span class=\"token operator\">:</span> Repository<span class=\"token operator\">&lt;</span>ProductsEntity<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// 创建产品</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span>product<span class=\"token operator\">:</span> Partial<span class=\"token operator\">&lt;</span>ProductsEntity<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>ProductsEntity<span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> title <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> product<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>title<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpException</span><span class=\"token punctuation\">(</span><span class=\"token string\">'缺少产品标题'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">const</span> doc <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> where<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> title <span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpException</span><span class=\"token punctuation\">(</span><span class=\"token string\">'产品已存在'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// 获取指定产品</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>ProductsEntity<span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findOneBy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> id<span class=\"token operator\">:</span> id <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// 更新产品</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">updateById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> product<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>ProductsEntity<span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> existProduct <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>existProduct<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpException</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">id为</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>id<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">的产品不存在</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">const</span> updateProduct <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">merge</span><span class=\"token punctuation\">(</span>existProduct<span class=\"token punctuation\">,</span> product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>updateProduct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// 刪除产品</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> existProduct <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>existProduct<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpException</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">id为</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>id<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">的产品不存在</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>existProduct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// 获取产品列表</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>ProductsEntity<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><div id=\"c1RVoMZJqw8oUSYxaTbCDS\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">自此一个完成的请求就已经完成了，但为了接口更加规范，还可以再进一步完善；</span></div></div><div id=\"c4uAETuPtRLn6VVnSYHhot\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"huggnYtU3PxsU1cfcvJ9LQ\" class=\"wolai-block\"><span class=\"inline-wrap\">过滤器</span></h3><div id=\"uQaJXzDCcUSxL4sRwtHZmt\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">过滤器也是 </span><span class=\"inline-wrap\"><b>NestJS</b></span><span class=\"inline-wrap\"> 的众多<span class=\"jill\"></span>provider<span class=\"jill\"></span>之一；这里用过滤器来简单处理错误请求；\n</span><span class=\"inline-wrap\"><code>nest g filter core/filter/http-exception</code></span><span class=\"inline-wrap\">\n代码实现：</span></div></div><code-block id=\"d7uZsfNUCpeoCPWdA9XGyE\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>\n  ArgumentsHost<span class=\"token punctuation\">,</span>\n  Catch<span class=\"token punctuation\">,</span>\n  ExceptionFilter<span class=\"token punctuation\">,</span>\n  HttpException<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Catch</span></span><span class=\"token punctuation\">(</span>HttpException<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HttpExceptionFilter</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ExceptionFilter</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>exception<span class=\"token operator\">:</span> HttpException<span class=\"token punctuation\">,</span> host<span class=\"token operator\">:</span> ArgumentsHost<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> host<span class=\"token punctuation\">.</span><span class=\"token function\">switchToHttp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取请求上下文</span>\n    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getResponse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取请求上下文中的 response对象</span>\n    <span class=\"token keyword\">const</span> status <span class=\"token operator\">=</span> exception<span class=\"token punctuation\">.</span><span class=\"token function\">getStatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取异常状态码</span>\n\n    <span class=\"token comment\">// 设置错误信息</span>\n    <span class=\"token keyword\">const</span> message <span class=\"token operator\">=</span> exception<span class=\"token punctuation\">.</span>message\n      <span class=\"token operator\">?</span> exception<span class=\"token punctuation\">.</span>message\n      <span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>status <span class=\"token operator\">>=</span> <span class=\"token number\">500</span> <span class=\"token operator\">?</span> <span class=\"token string\">'Service Error'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Client Error'</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> errorResponse <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n      data<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      message<span class=\"token operator\">:</span> message<span class=\"token punctuation\">,</span>\n      code<span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 设置返回的状态码， 请求头，发送错误信息</span>\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'application/json; charset=utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>errorResponse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><div id=\"ub8QLmR2ujZLLX7xRdsnhJ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在<span class=\"jill\"></span>main.js<span class=\"jill\"></span>中注册：</span></div></div><code-block id=\"nZtAwuswBU97Ac6hwFYiBU\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token operator\">...</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> HttpExceptionFilter <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./core/filter/http-exception/http-exception.filter'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> NestFactory<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>NestExpressApplication<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>AppModule<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 注册全局错误的过滤器</span>\n  app<span class=\"token punctuation\">.</span><span class=\"token function\">useGlobalFilters</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpExceptionFilter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">...</span>\n  <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block><div id=\"g6dUQq6iEeDA3jH35vtpBL\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">接下来对请求成功返回的格式进行统一的处理，可以用<span class=\"jill\"></span>Nest.js<span class=\"jill\"></span>的</span><span class=\"inline-wrap\"><b>拦截器</b></span><span class=\"inline-wrap\">来实现。</span></div></div><div id=\"oBwWAsRKffKGUqhZR83Zsb\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"jnRnLx5KqV45ZvDZXSGw2t\" class=\"wolai-block\"><span class=\"inline-wrap\">拦截器</span></h3><div id=\"cFsDSr5e6WCKH5hkePP8GJ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">拦截器可以在调用路由处理程序之前和之后访问响应/请求。比如 logger 或者 统一处理</span><span class=\"inline-wrap\"><b>响应结果</b></span><span class=\"inline-wrap\">；</span></div></div><div id=\"k3KC2JCscYEvJr7SzNsTmP\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">老配方，首先使用命令创建一个拦截器：\n</span><span class=\"inline-wrap\"><code>nest g interceptor core/interceptor/transform</code></span></div></div><div id=\"5pCnEmvSvrhWSxmmETdr8H\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">代码实现</span></div></div><code-block id=\"gcgpKkN9e514UbadWHpeVW\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>\n  CallHandler<span class=\"token punctuation\">,</span>\n  ExecutionContext<span class=\"token punctuation\">,</span>\n  Injectable<span class=\"token punctuation\">,</span>\n  NestInterceptor<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> map<span class=\"token punctuation\">,</span> Observable <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TransformInterceptor</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">NestInterceptor</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">intercept</span><span class=\"token punctuation\">(</span>context<span class=\"token operator\">:</span> ExecutionContext<span class=\"token punctuation\">,</span> next<span class=\"token operator\">:</span> CallHandler<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Observable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> next<span class=\"token punctuation\">.</span><span class=\"token function\">handle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n          data<span class=\"token punctuation\">,</span>\n          code<span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n          msg<span class=\"token operator\">:</span> <span class=\"token string\">'请求成功'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><div id=\"tQfDhBFJMdFR47rpqTMuaW\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">注册到<span class=\"jill\"></span>main.js</span></div></div><code-block id=\"7ekbP7oUzKhaJgqKQkPsbC\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token operator\">...</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> TransformInterceptor <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./core/interceptor/transform/transform.interceptor'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> NestFactory<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>NestExpressApplication<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>AppModule<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">...</span>\n  <span class=\"token comment\">// 全局注册拦截器</span>\n  app<span class=\"token punctuation\">.</span><span class=\"token function\">useGlobalInterceptors</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">TransformInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">...</span>\n  <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block><div id=\"bgytXUUpjsA83neoMw1J6R\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"pdusHm5R5ccGjniCeddU11\" class=\"wolai-block\"><span class=\"inline-wrap\">接口文档</span></h3><div id=\"mAVnad8ZBGTCebzFmRdkBN\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">规范化接口当然少不了接口文档，Nest<span class=\"jill\"></span>也是完美支持 swagge，在</span><span class=\"inline-wrap\"><b>product</b></span><span class=\"inline-wrap\">\n目录下创建一个</span><span class=\"inline-wrap\"><code>dto</code></span><span class=\"inline-wrap\">文件夹，再创建一个</span><span class=\"inline-wrap\"><code>create-post.dto.ts</code></span><span class=\"inline-wrap\">文件：</span></div></div><code-block id=\"6xiCYSAk5Dh5fMACiZW3Gs\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ApiProperty<span class=\"token punctuation\">,</span> ApiPropertyOptional <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/swagger'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CreateProductDto</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiProperty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品标题'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> title<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiProperty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品描述'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> desc<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiPropertyOptional</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品缩略图'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> thumb_url<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiProperty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品类型'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> type<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><div id=\"exF7AUGwXmkomwotyCtf9F\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">完善<span class=\"jill\"></span>controller，进行说明：</span></div></div><code-block id=\"5USAcTJoyP1HrzRJU3U6Ws\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token operator\">...</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiTags</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'产品'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'products'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> productsService<span class=\"token operator\">:</span> ProductsService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiOperation</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> summary<span class=\"token operator\">:</span> <span class=\"token string\">'创建产品'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Post</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Body</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> product<span class=\"token operator\">:</span> CreateProductDto<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsService<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">...</span>\n<span class=\"token punctuation\">&#125;</span></pre></div></code-block><div id=\"f12wmMZmvc5WYnbg8DZu5c\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"1b7J6ux8Ntqia2Yi4h39Fo\" class=\"wolai-block\"><span class=\"inline-wrap\">数据验证</span></h3><div id=\"uFJJ5syGhNxxwpu4Yqu1vE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在<span class=\"jill\"></span>Nest.js<span class=\"jill\"></span>中，</span><span class=\"inline-wrap\"><b>管道（Pipes）</b></span><span class=\"inline-wrap\"> 就是专门用来做数据转换的，我们看一下它的定义：</span></div></div><blockquote id=\"fJg8v96ympMYJnSmWHEThc\" class=\"wolai-block\"><span class=\"inline-wrap\">管道是具有 @Injectable() 装饰器的类。管道应实现 PipeTransform 接口。管道有两个类型:</span><ul class=\"wolai-block\"><li id=\"8Fm1QADfsFBb4uPSgUWKe8\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><b>转换</b></span><span class=\"inline-wrap\">：管道将输入数据转换为所需的数据输出</span></li><li id=\"e3P4RnRJB9FabfgkwEQKya\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><b>验证</b></span><span class=\"inline-wrap\">：对输入数据进行验证，如果验证成功继续传递; 验证失败则抛出异常;</span></li></ul><div id=\"ipCSsaxYkcgmt6mdgBsBeY\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">管道在异常区域内运行。这意味着当抛出异常时，它们由核心异常处理程序和应用于当前上下文的 </span><span class=\"inline-wrap\"><a href=\"https://docs.nestjs.cn/8/exceptionfilters\"><span>异常过滤器</span></a></span><span class=\"inline-wrap\"> 处理。当在 Pipe 中发生异常，controller 不会继续执行任何方法。</span></div></div></blockquote><div id=\"rYEbt9Nb24eoY2FYtJRo29\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">通俗来讲就是，对请求接口的入参进行验证和转换的前置操作，验证好了我才会将内容给到路由对应的方法中去，失败了就进入异常过滤器中。</span></div></div><div id=\"k9tyRFTDNwDUBjw16cTTRQ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"1SajZGaSmpxag69e2rtdCB\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">安装依赖：</span></div></div><ul class=\"wolai-block\"><li id=\"7MwwMJ4L6hj6bnCC8NdLJa\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>npm install class-validator class-transformer -S</code></span></li></ul><div id=\"tSsjHuUYjJmsjjm3jdZrs1\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest.js<span class=\"jill\"></span>自带了<span class=\"jill\"></span>9<span class=\"jill\"></span>个开箱即用的管道：</span></div></div><ol class=\"wolai-block\"><li id=\"mtVxEngYpb3QokXS6n6Hed\"><div class=\"marker\"></div><span class=\"inline-wrap\">ValidationPipe</span></li><li id=\"bMbFfUUp9xusaqR2KwwLzt\"><div class=\"marker\"></div><span class=\"inline-wrap\">ParseIntPipe</span></li><li id=\"6r2wBw45fxGTUNLL8E1Zzm\"><div class=\"marker\"></div><span class=\"inline-wrap\">ParseFloatPipe</span></li><li id=\"gs4miRrKYZsW4xXgk617tF\"><div class=\"marker\"></div><span class=\"inline-wrap\">ParseBoolPipe</span></li><li id=\"tvdaxUAePfLEpv5vHWxMNU\"><div class=\"marker\"></div><span class=\"inline-wrap\">ParseArrayPipe</span></li><li id=\"qWMEMjxgiU3vZz9eqHQm6H\"><div class=\"marker\"></div><span class=\"inline-wrap\">ParseUUIDPipe</span></li><li id=\"8yQNoYPGRpy8zjGuM7KVsD\"><div class=\"marker\"></div><span class=\"inline-wrap\">ParseEnumPipe</span></li><li id=\"snjtnm5gYePmUSjBgm9yqa\"><div class=\"marker\"></div><span class=\"inline-wrap\">DefaultValuePipe</span></li><li id=\"s9xuDZxYr3Hd46a4szYeGx\"><div class=\"marker\"></div><span class=\"inline-wrap\">ParseFilePipe</span></li></ol><div id=\"uezZf6DZmM4d8D9YtGk8Dp\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">可以单独使用</span></div></div><code-block id=\"aMWdCf1Z5auUWkXzCjEL7H\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">':id'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">async</span> <span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Param</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> ParseIntPipe<span class=\"token punctuation\">)</span> id<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>catsService<span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></pre></div></code-block><div id=\"eMhY3vMomyST1XXqhyvmzT\" class=\"wolai-block wolai-text\"><div></div></div><div id=\"uPxoMnSirLthRbGAfkwxGT\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">也可以配合 class-validator<span class=\"jill\"></span>使用实现类校验器，可以完美的实现对参数类型进行验证，验证失败抛出异常。</span></div></div><div id=\"uNvi4okVKhHvhbA2X4ZN3m\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">管道验证操作通常用在<span class=\"jill\"></span>dto<span class=\"jill\"></span>这种传输层的文件中,用作验证操作。安装两个需要的依赖包：</span></div></div><div id=\"ihJin1RjoBoC3C4nLPFT1R\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>class-transformer</code></span><span class=\"inline-wrap\">和</span><span class=\"inline-wrap\"><code>class-validator</code></span></div></div><div id=\"7ahXJ29MK6WBiNAk8SUdjb\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">安装依赖：</span></div></div><div id=\"vcvrAs7Tu2FCVu92iG3oFf\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>npm install class-validator class-transformer -S</code></span></div></div><div id=\"3Zb7PnjVUMynXFwfFVCNrf\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">然后在<span class=\"jill\"></span>create-post.dto.ts<span class=\"jill\"></span>文件中添加验证, 完善错误信息提示：</span></div></div><code-block id=\"qSsXjWXM8YFwvPmzijo9pD\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ApiProperty<span class=\"token punctuation\">,</span> ApiPropertyOptional <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/swagger'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> IsNotEmpty<span class=\"token punctuation\">,</span> IsNumber <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'class-validator'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CreateProductDto</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">IsNotEmpty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> message<span class=\"token operator\">:</span> <span class=\"token string\">'产品标题必填'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiProperty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品标题'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> title<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">IsNotEmpty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> message<span class=\"token operator\">:</span> <span class=\"token string\">'缺少产品描述'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiProperty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品描述'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> desc<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiPropertyOptional</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品缩略图'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> thumb_url<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">IsNumber</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiProperty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品类型'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> type<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block><blockquote id=\"m8tSw6s74CZzP33X3VJktM\" class=\"wolai-block\"><span class=\"inline-wrap\">上面只编写了一些常用的验证，class-validator<span class=\"jill\"></span>还提供了很多的验证方法， 感兴趣可以看</span><span class=\"inline-wrap\"><a href=\"https://github.com/typestack/class-validator#validation-messages\"><span>官方文档</span></a></span><span class=\"inline-wrap\">.</span></blockquote><div id=\"eN1gY9VXkFx6CvU9WR2HRb\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"htvJskYfA5Zu6WL32mULfC\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">最后我们还有一个重要的步骤， 就是在<span class=\"jill\"></span>main.ts<span class=\"jill\"></span>中全局注册一下管道</span><span class=\"inline-wrap\"><b>ValidationPipe</b></span><span class=\"inline-wrap\">：</span></div></div><code-block id=\"q192eF9ij9LDBQqvokWwQV\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token operator\">...</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ValidationPipe <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> NestFactory<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>NestExpressApplication<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>AppModule<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">...</span>\n  <span class=\"token comment\">// 注册校验管道</span>\n  app<span class=\"token punctuation\">.</span><span class=\"token function\">useGlobalPipes</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ValidationPipe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block><div id=\"n8zeC4GEKvfWDc4w2rXkmV\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"budrUjTXfrbRUNNf9jhkrP\" class=\"wolai-block\"><span class=\"inline-wrap\">生命周期</span></h3><div id=\"mACFSmS9Y7mPmKNBiTZmyV\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest<span class=\"jill\"></span>在 </span><span class=\"inline-wrap\"><b>modules</b></span><span class=\"inline-wrap\"> ，</span><span class=\"inline-wrap\"><b>providers</b></span><span class=\"inline-wrap\"> 和 </span><span class=\"inline-wrap\"><b>controllers</b></span><span class=\"inline-wrap\"> 的以下每个生命周期事件中调用注册钩子方法。</span></div></div><div id=\"wxp3KHGNg1uKnNNnsKVgG8\" class=\"wolai-block wolai-simple-table\"><table><thead><tr><th style=\"width: 241px\"><span class=\"inline-wrap\">生命周期钩子方法</span></th><th style=\"width: 484px\"><span class=\"inline-wrap\">生命周期时间触发钩子方法调用</span></th></tr></thead><tbody><tr><td><span class=\"inline-wrap\">OnModuleInit()</span></td><td><span class=\"inline-wrap\">初始化主模块依赖处理后调用一次</span></td></tr><tr><td><span class=\"inline-wrap\">OnApplicationBootstrap()</span></td><td><span class=\"inline-wrap\">在应用程序完全启动并监听连接后调用一次</span></td></tr><tr><td><span class=\"inline-wrap\">OnModuleDestroy()</span></td><td><span class=\"inline-wrap\">收到终止信号(例如<span class=\"jill\"></span>SIGTERM)后调用</span></td></tr><tr><td><span class=\"inline-wrap\">beforeApplicationShutdown()</span></td><td><span class=\"inline-wrap\">在<span class=\"jill\"></span>onModuleDestroy()完成(Promise<span class=\"jill\"></span>被<span class=\"jill\"></span>resolved<span class=\"jill\"></span>或者<span class=\"jill\"></span>rejected)；一旦完成，将关闭所有连接(调用<span class=\"jill\"></span>app.close() 方法).</span></td></tr><tr><td><span class=\"inline-wrap\">OnApplicationShutdown()</span></td><td><span class=\"inline-wrap\">连接关闭处理时调用(app.close())</span></td></tr></tbody></table></div><div id=\"7Cwx3ksi9akqUjUpnhTqz7\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"xt3v1bVA2cKVCbPGafegvw\" class=\"wolai-block\"><span class=\"inline-wrap\">总结</span></h2><div id=\"nghMbVvEyw3HypqwccYkxP\" class=\"wolai-block wolai-text\"><div><span class=\"red inline-wrap\">NodeJS</span><span class=\"inline-wrap\">后端已经有很好生态，各类工程化与微服务需要功能都有了<span class=\"jill\"></span>npm<span class=\"jill\"></span>版本，内部数据通过<span class=\"jill\"></span>TypeScript<span class=\"jill\"></span>验证保证类型无误，只要处理好输入数据的验证和转换问题，是可以在实际项目中发挥力量的，但是，如果需要执行大量的计算（物联网，电子商务平台，大数据），那么使用<span class=\"jill\"></span>Spring Boot<span class=\"jill\"></span>会是更好的选择。</span></div></div><div id=\"kKE2KyGo1wGY3b3NGmMFN7\" class=\"wolai-block wolai-text\"><div></div></div></article><footer></footer></body></html>","site":{"data":{}},"length":20648,"excerpt":"","more":"<!DOCTYPE html>\n<html lang=\"zh-Hans-CN\"><head><meta charset=\"utf-8\"/><meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/modern-norm.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/prism.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/katex.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/wolai.css\"/><title>Nest快速入门 - wolai 笔记</title><link rel=\"shortcut icon\" href=\"media/icon_1.svg\"></link></head><body class=\"more-lead\"><header><div class=\"image has\" style=\"background-position-y: 50%; background-image: url(&quot;https://cdn.wostatic.cn/cover/watercolor/3VMGfCa8UCpJ4Dy36jMNKa.jpg&quot;)\"></div><div class=\"title\"><div class=\"banner\"><div class=\"icon icon-image\" style=\"background-image: url(&quot;media/icon.svg&quot;)\"></div></div><div data-title=\"Nest快速入门\" class=\"main-title\"></div></div></header><article><h2 id=\"a1uYtFztFiFWjQkag7tYSF\" class=\"wolai-block\"><span class=\"inline-wrap\">背景</span></h2><h3 id=\"2iiyyJ4VXgZxP7VYJ3TJEe\" class=\"wolai-block\"><span class=\"inline-wrap\">全栈</span></h3><div id=\"rNfBe4qzEvxuvxE2XEbazd\" class=\"wolai-block wolai-text\"><div><span class=\"red inline-wrap\">发展全栈</span><span class=\"inline-wrap\">对公司和个人都大有益处，但最重要的还是对个人的发展如何。个人发展全栈主要还是为了应对未来，主要有几方面： 避免被淘汰、 提升个人价值、 走向管理职位、 实现创业梦。\n从个人为出发点，后端语言百花齐放，想要到一个比较深入的程度，那对所使用的开发语言、框架就需要稍微深入了。例如同时要深入<span class=\"jill\"></span>typescript、Java<span class=\"jill\"></span>的领域，那就会谈到精力问题，对个人来说似乎会很累，不太现实。</span></div></div><div id=\"dNVX1Zw72DNunVMHVer1Bv\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"vTj3PN5xW51TBHb1gAfTJE\" class=\"wolai-block\"><span class=\"inline-wrap\">NestJS</span></h3><div id=\"mFMJbA7fiswLxZFxjs6sCR\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">根据官网介绍：</span></div></div><blockquote id=\"csa4o4BUrgL7sYwrwviWQ9\" class=\"wolai-block\"><span class=\"inline-wrap\"><a href=\"https://docs.nestjs.cn/9/introduction\"><span class=\"red\">Nest (NestJS)</span></a></span><span class=\"inline-wrap\"> 是一个用于构建高效、可扩展的</span><span class=\"blue inline-wrap\"> </span><span class=\"inline-wrap\"><a href=\"https://nodejs.org/en/\"><span class=\"blue\">Node.js</span></a></span><span class=\"inline-wrap\"> 服务器端应用程序的开发框架。它利用<span class=\"jill\"></span>JavaScript 的渐进增强的能力，使用并完全支持 </span><span class=\"inline-wrap\"><a href=\"https://www.typescriptlang.org/\"><span class=\"blue\">TypeScript</span></a></span><span class=\"inline-wrap\"> （仍然允许开发者使用纯 JavaScript 进行开发），并结合了 OOP （面向对象编程）、FP （函数式编程）和 FRP （函数响应式编程）。</span></blockquote><div id=\"2t7XfBkTDUDuUnVXQyJEov\" class=\"wolai-block wolai-text\"><div><span class=\"red inline-wrap\">NestJS</span><span class=\"inline-wrap\"> 的一些</span><span class=\"inline-wrap\"><b>优势</b></span><span class=\"inline-wrap\">包括：</span></div></div><ul class=\"wolai-block\"><li id=\"x26B2f6QXtw18djiHcyCUz\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">构建在现代 JavaScript 栈之上，完全支持 TypeScript。</span></li><li id=\"f8gyHZnWYUSR6Gp7bA3r3X\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">基于 TypeScript，提供了</span><span class=\"inline-wrap\"><b>强类型和静态类型检查</b></span><span class=\"inline-wrap\">。</span></li><li id=\"dYvG1ygHryQbL6nZ3ZX7NQ\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">基于 Angular 的架构和语法，提供了强大的</span><span class=\"inline-wrap\"><b>模块化</b></span><span class=\"inline-wrap\">系统和</span><span class=\"inline-wrap\"><b>依赖注入</b></span><span class=\"inline-wrap\">功能。</span></li><li id=\"fqW4pZS4g6LKE8WuhcqZCH\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">提供了丰富的工具和模块，可用于构建各种类型的服务器端应用程序，包括 </span><span class=\"inline-wrap\"><b>RESTful API</b></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><b>GraphQL API</b></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><b>WebSocket 服务器</b></span><span class=\"inline-wrap\">等。</span></li><li id=\"8kbkCtiNrFD1mDah6Na1ZT\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">提供了一组可扩展的构建块，可用于快速构建应用程序。</span></li><li id=\"53cv5CExTcPbShMUZrfcAw\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">提供了与</span><span class=\"inline-wrap\"><b>主流数据库和身份验证系统</b></span><span class=\"inline-wrap\">的集成。</span></li></ul><div id=\"aMYXzPgbgRtY9UwbN7JRKb\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">对于前端人员来说，“一招<span class=\"jill\"></span>Typescript”吃遍前后端，何乐而不为。</span></div></div><div id=\"t1Kny6NdW3D3gAPFy5UZza\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"gfWAckkx1vMWubhqGyKCi8\" class=\"wolai-block\"><span class=\"inline-wrap\">前期准备</span></h2><h3 id=\"fYdFXJXZ5USEMGwLepasPa\" class=\"wolai-block\"><span class=\"inline-wrap\">项目初始化</span></h3><div id=\"f4sTWj3XAtj7MrfMK18oMY\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">确保已经安装了 </span><span class=\"inline-wrap\"><a href=\"https://nodejs.org/\"><span>Node.js</span></a></span><span class=\"inline-wrap\">（版本 &gt;= 12，v13 除外）</span></div></div><code-block id=\"mFKWA1ZpgZ6w69BXSdCdmo\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Bash\" class=\"marker\"></div><pre>$ <span class=\"token function\">npm</span> i <span class=\"token parameter variable\">-g</span> @nestjs/cli \n$ nest new project-name</pre></div></code-block><h3 id=\"27GR4p5NSjNFuhDYmGFh81\" class=\"wolai-block\"><span class=\"inline-wrap\">运行项目</span></h3><div id=\"8e1JnYkDG4KG7Vbd8R1mBo\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">启动 HTTP 服务监听定义在 src/main.ts 文件中定义的端口号。在浏览器访问</span><span class=\"inline-wrap\"><code>[http://localhost:3000](http://localhost:3000/)/</code></span><span class=\"inline-wrap\">，访问成功代表服务已经<span class=\"jill\"></span>OK<span class=\"jill\"></span>了；</span></div></div><code-block id=\"xz5ySJsu6vB8JXeeD69bxj\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Bash\" class=\"marker\"></div><pre><span class=\"token comment\"># dev为热更新模式</span>\n$ <span class=\"token function\">npm</span> run start:dev</pre></div></code-block><div id=\"7VgkYyTik3S3XVZaSH8MJM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"hR2z7zBQpPyDK4NWaTWpip\" class=\"wolai-block\"><span class=\"inline-wrap\">框架约束</span></h3><div id=\"4XZve4qTxCGbkdAEzojv8u\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><b>NestJS<span class=\"jill\"></span>文件约束：</b></span></div></div><ul class=\"wolai-block\"><li id=\"9uMYBrKqn82mq54BYEy5sC\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">每个模块最少有三种文件组合：</span><span class=\"inline-wrap\"><b>module</b></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><b>server</b></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><b>controller</b></span><span class=\"inline-wrap\">。</span></li><li id=\"rTDPDGyPgdZvs9HUviSrvm\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">具有同一</span><span class=\"inline-wrap\"><b>应用程序域</b></span><span class=\"inline-wrap\">的文件应该放到同一个</span><span class=\"inline-wrap\"><b>功能模块</b></span><span class=\"inline-wrap\">下。</span></li><li id=\"gybWw8KrcrL7uhanYCbab2\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">NestJS<span class=\"jill\"></span>允许命令行创建不生成</span><span class=\"inline-wrap\"><code>.spec</code></span><span class=\"inline-wrap\">(</span><span class=\"inline-wrap\"><code>nest g controller product --no-spec</code></span><span class=\"inline-wrap\">)。</span></li></ul><div id=\"vTu8EN1DrNwGGfs9DqDNc3\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">初始化后项目的</span><span class=\"inline-wrap\"><b>主要</b></span><span class=\"inline-wrap\">目录结构：</span></div></div><div id=\"1djLGgWgtPj97LG6GLjLaE\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"https://cdn.nlark.com/yuque/0/2023/png/21771732/1676175485415-b4298c68-ff05-46de-8abc-ee7e74de4962.png#averageHue=%23232425&amp;clientId=u31848435-c35d-4&amp;from=paste&amp;height=231&amp;id=r8Kpi&amp;name=image.png&amp;originHeight=136&amp;originWidth=226&amp;originalType=binary&amp;ratio=2&amp;rotation=0&amp;showTitle=false&amp;size=8527&amp;status=done&amp;style=none&amp;taskId=u260e6f9f-ef8f-4ac3-912f-1f04d640f74&amp;title=&amp;width=384\" style=\"width: 350px\"/></figure></div><div id=\"bggoUcy6VZvLdMzDEf5YgT\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">\n这里涉及到<span class=\"jill\"></span>NestJs<span class=\"jill\"></span>框架的文件约束：</span></div></div><div id=\"jRke5GJNYEuQUZRWiX8bne\" class=\"wolai-block wolai-simple-table\"><table><thead><tr><th style=\"width: 370px\"><span class=\"inline-wrap\">app.controller.ts</span></th><th style=\"width: 370px\"><span class=\"inline-wrap\">单个路由的基本控制器(Controller)</span></th></tr></thead><tbody><tr><td><span class=\"inline-wrap\">app.controller.spec.ts</span></td><td><span class=\"inline-wrap\">针对控制器的单元测试</span></td></tr><tr><td><span class=\"inline-wrap\">app.module.ts</span></td><td><span class=\"inline-wrap\">应用程序的根模块(Module)</span></td></tr><tr><td><span class=\"inline-wrap\">app.service.ts</span></td><td><span class=\"inline-wrap\">具有单一方法的基本服务(Service)</span></td></tr><tr><td><span class=\"inline-wrap\">main.ts</span></td><td><span class=\"inline-wrap\">应用程序的入口文件，它使用核心函数 NestFactory 来创建 Nest 应用程序的实例。</span></td></tr></tbody></table></div><div id=\"rV2f48p1L2kPwgsrb4ibVf\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在</span><span class=\"inline-wrap\"><code>main.ts</code></span><span class=\"inline-wrap\">中使用工厂函数</span><span class=\"inline-wrap\"><code>NestFactory</code></span><span class=\"inline-wrap\">创建一个 </span><span class=\"inline-wrap\"><code>AppModule</code></span><span class=\"inline-wrap\"> 应用实例，启动 HTTP 监听器，等待 HTTP 请求。</span></div></div><code-block id=\"2zVyJ5Zj9Gc1KtqLKmGg5v\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> NestFactory <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> NestExpressApplication <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/platform-express'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppModule <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.module'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// &lt;NestExpressApplication> ｜ &lt;NestFastifyApplication> | &lt;></span>\n  <span class=\"token comment\">// 一般来说我们选择 NestExpress，因为网上资源多，官方文档有很多例子都是基于Express</span>\n  <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> NestFactory<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>NestExpressApplication<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>AppModule<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 设置全局路由前缀</span>\n  <span class=\"token comment\">// app.setGlobalPrefix('api');</span>\n  <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></div></code-block><details id=\"oENuQB9kWyuNtBn3iuWeRq\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">可选平台</span></summary><ul class=\"wolai-block\"><li id=\"jcM4g8n6NCYGMaBAXSJ1V8\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><a href=\"https://expressjs.com/\"><span>Express</span></a></span><span class=\"inline-wrap\"> 是一个众所周知的 node.js 简约 Web 框架。 这是一个经过实战考验，适用于生产的库，拥有大量社区资源。 默认情况下使用 @nestjs/platform-express 包。许多用户都可以使用 Express ，并且无需采取任何操作即可启用它。</span></li><li id=\"xL5xdwkuFqYuvSxN53cDC\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><a href=\"https://www.fastify.io/\"><span>Fastify</span></a></span><span class=\"inline-wrap\"> 是一个高性能，低开销的框架，专注于提供最高的效率和速度。 在</span><span class=\"inline-wrap\"><a href=\"https://docs.nestjs.cn/8/techniques?id=性能（fastify）\"><span>这里</span></a></span><span class=\"inline-wrap\">\n阅读如何使用它。</span></li></ul></details><div id=\"2TfvXszk3zPuSJSuoUvV1a\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"oFsM1zTaWu6mkwgrVcmsT4\" class=\"wolai-block\"><span class=\"inline-wrap\">工作流程</span></h3><div id=\"phcgqypcfvXSQL2PgMGqiM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在开始之前，不妨先看一下 Nest 的工作流程：</span></div></div><div id=\"s8gPx96gyGdKv3uajmm4Z4\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/nest%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B.png\" style=\"width: 623px\"/></figure></div><div id=\"jfvXdPDg8ZhaGcZ265MTXb\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">整个请求的过程如上图所示，正常情况下提供者组件都以</span><span class=\"inline-wrap\"><b>全局第一</b></span><span class=\"inline-wrap\">顺序执行的原则，而过滤器则相反，会从最底层开始处理，即路由→控制器→全局。</span></div></div><div id=\"skRhpCWNtaPD1hWvzRyShU\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"6zBjY2FBSyoNJ3XX3rVxb1\" class=\"wolai-block\"><span class=\"inline-wrap\">基础概念</span></h2><h3 id=\"hmYZ962ZGum1RFZKAtsWCk\" class=\"wolai-block\"><span class=\"inline-wrap\">模块</span></h3><aside id=\"fWXgHuLtRLCW1qqHj3Sxuh\" class=\"bg-cultured wolai-block\"><div data-symbol=\"📌\" class=\"icon\"></div><span class=\"inline-wrap\">模块是用 </span><span class=\"inline-wrap\"><code>@Module()</code></span><span class=\"inline-wrap\"> 装饰的类。 </span><span class=\"inline-wrap\"><code>@Module()</code></span><span class=\"inline-wrap\"> 装饰器提供了元数据，Nest 用它来组织应用程序结构。</span></aside><div id=\"dB289MjQc5vNitMLAUWHgD\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">模块主要分<span class=\"jill\"></span>4<span class=\"jill\"></span>种：</span></div></div><ol class=\"wolai-block\"><li id=\"1DpNdvQWj9EahKJXEEepFS\"><div class=\"marker\"></div><span class=\"inline-wrap\">功能模块</span></li><li id=\"ah6VB7pjpePaGbp4DERt1L\"><div class=\"marker\"></div><span class=\"inline-wrap\">共享模块</span></li><li id=\"m5k5fNL9kiHZFm4iAoEPQB\"><div class=\"marker\"></div><span class=\"inline-wrap\">全局模块</span></li><li id=\"8miLPP9z4vaNjrMURbn6JT\"><div class=\"marker\"></div><span class=\"inline-wrap\">动态模块</span></li></ol><div id=\"swxK5XbJrZqcMaFke43iPk\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>main.ts</code></span><span class=\"inline-wrap\"> 只引入了</span><span class=\"inline-wrap\"><code>app.module.ts</code></span><span class=\"inline-wrap\">文件，此为应用程序的根模块(每个 Nest 应用程序至少有一个模块)：</span></div></div><code-block id=\"cbUuD1wnyPqUNWZovjYCzq\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Module <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppController <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><blockquote id=\"vseGVCvR5BTjHLiAZactLz\" class=\"wolai-block\"><span class=\"inline-wrap\">对装饰器不了解的，可以看</span><span class=\"inline-wrap\"><a href=\"https://juejin.cn/post/6859314697204662279#heading-2\"><span>走近<span class=\"jill\"></span>MidwayJS：初识<span class=\"jill\"></span>TS<span class=\"jill\"></span>装饰器与<span class=\"jill\"></span>IoC<span class=\"jill\"></span>机制</span></a></span></blockquote><div id=\"sG5SX3DZsTx8XT9BgzhwR4\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Module()</code></span><span class=\"inline-wrap\">装饰器接收四个属性：</span><span class=\"inline-wrap\"><code>providers</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>controllers</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>imports</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>exports</code></span><span class=\"inline-wrap\">。</span></div></div><div id=\"2VBB1rY6YW1e9u3U4MZQAi\" class=\"wolai-block wolai-simple-table\"><table><thead><tr><th style=\"width: 173px\"><span class=\"inline-wrap\"><code>providers</code></span></th><th style=\"width: 561px\"><span class=\"inline-wrap\">Nest.js<span class=\"jill\"></span>注入器实例化的提供者（服务提供者），处理具体的业务逻辑，各个模块之间可以共享；</span></th></tr></thead><tbody><tr><td><span class=\"inline-wrap\"><code>controllers</code></span></td><td><span class=\"inline-wrap\">处理<span class=\"jill\"></span>http<span class=\"jill\"></span>请求，包括路由控制，向客户端返回响应，将具体业务逻辑委托给<span class=\"jill\"></span>providers<span class=\"jill\"></span>处理；</span></td></tr><tr><td><span class=\"inline-wrap\"><code>imports</code></span></td><td><span class=\"inline-wrap\">导入模块的列表，如果需要使用其他模块的服务，需要通过这里导入；</span></td></tr><tr><td><span class=\"inline-wrap\"><code>exports</code></span></td><td><span class=\"inline-wrap\">导出服务的列表，供其他模块导入使用。如果希望当前模块下的服务可以被其他模块共享，需要在这里配置导出；</span></td></tr></tbody></table></div><div id=\"omBzRKQVUWmuM3HNYPpxyK\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">下面通过一个产品的<span class=\"jill\"></span>CRUD<span class=\"jill\"></span>例子来进行演示：</span></div></div><div id=\"jD3WK7TEnYZQA2viyPemkE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">NestJs<span class=\"jill\"></span>中，具有同一</span><span class=\"inline-wrap\"><b>应用程序域</b></span><span class=\"inline-wrap\">的文件应该放到同一个</span><span class=\"inline-wrap\"><b>功能模块</b></span><span class=\"inline-wrap\">下：\n首先我们可以通过<span class=\"jill\"></span>nest-cli<span class=\"jill\"></span>提供的命令生成模块:</span></div></div><ul class=\"wolai-block\"><li id=\"3j7Xowd15z596hM6Xvsad1\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>nest g module products</code></span></li></ul><code-block id=\"xnqKdNQD5C2i29oeUV1YT5\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Module <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></div></code-block><div id=\"vHYj4xDXmoeouCbyWTuhUk\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">同时 </span><span class=\"inline-wrap\"><b>ProductsModule</b></span><span class=\"inline-wrap\"> 也会被自动注册到根模块：</span></div></div><code-block id=\"bLLkubnsadm6D3gCYsKXBJ\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Module <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppController <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ProductsModule <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./products/products.module'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>ProductsModule<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></div></code-block><div id=\"kQDnu61E1bMjr2AYjeFQkh\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这样便完成了一个新的功能模块的注册。</span></div></div><details id=\"baDsYanmXFZmawKW3uZY4C\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">共享模块</span></summary><div id=\"euyBAoUFoWW3vte4CsZRau\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在 Nest 中，默认情况下，模块是</span><span class=\"inline-wrap\"><b>单例</b></span><span class=\"inline-wrap\">的，因此我们可以轻松地在多个模块之间共享</span><span class=\"inline-wrap\"><b>同一个提供者实例</b></span><span class=\"inline-wrap\">。模块本身存在</span><span class=\"inline-wrap\"><b>共享性，</b></span><span class=\"inline-wrap\"> 一个模块一旦创建便可以被任意模块重复使用。例如：</span></div></div><code-block id=\"nw7TzB8MSkHSVfsLon9zru\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Module <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> CatsController <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./cats.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> CatsService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./cats.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>CatsController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>CatsService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 导出模块供其他模块倒入，所有模块共享catsService实例</span>\n  exports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>CatsService<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CatsModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></div></code-block></details><details id=\"qYVqSPXtXLbDAn4gJJUnWA\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">全局模块</span></summary><div id=\"v9vw5N3wkGuLHXiYmMZZz4\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">如果想提供一些通用的模块，如：helper，数据库连接等等，可以创建全局模块，也比较简单，增加</span><span class=\"inline-wrap\"><code>@Global</code></span><span class=\"inline-wrap\">即可，全局模块应该只注册一次，最好由根或核心模块注册。</span></div></div><code-block id=\"k5ofsFrfpW73wfZJwUevGz\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Module<span class=\"token punctuation\">,</span> Global <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> CatsController <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./cats.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> CatsService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./cats.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Global</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>CatsController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>CatsService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  exports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>CatsService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CatsModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></div></code-block></details><details id=\"v8PRgFFSfSFVUKiyDENMYE\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">动态模块</span></summary><div id=\"gxavGczvAKZm9TgRei3QV6\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">动态模块在 Nest 中也是非常重要的。此功能使您可以轻松创建可自定义的模块，这些模块可以动态注册和配置提供程序。例如：注册动态模块：</span><span class=\"inline-wrap\"><code>DatabaseModule</code></span></div></div><code-block id=\"tzLFeHfN5pwoSAZ7texrid\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Module<span class=\"token punctuation\">,</span> DynamicModule <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> createDatabaseProviders <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./database.providers'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Connection <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./connection.provider'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>Connection<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DatabaseModule</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">static</span> <span class=\"token function\">forRoot</span><span class=\"token punctuation\">(</span>entities <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> options<span class=\"token operator\">?</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> DynamicModule <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> providers <span class=\"token operator\">=</span> <span class=\"token function\">createDatabaseProviders</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">,</span> entities<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n      module<span class=\"token operator\">:</span> DatabaseModule<span class=\"token punctuation\">,</span>\n      providers<span class=\"token operator\">:</span> providers<span class=\"token punctuation\">,</span>\n      exports<span class=\"token operator\">:</span> providers<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></pre></div></code-block><div id=\"wsiaZW9ERDPEpyNWJ9o1ct\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">使用该模块</span></div></div><code-block id=\"jfFEsHvBAZRKPePid8MMbe\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Module <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> DatabaseModule <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./database/database.module'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> User <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./users/entities/user.entity'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>DatabaseModule<span class=\"token punctuation\">.</span><span class=\"token function\">forRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>User<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></div></code-block></details><div id=\"3zLBwbLKVc2kyFZGPWR2H6\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"fkBxHS4Cwjg7YytF3h2JmB\" class=\"wolai-block\"><span class=\"inline-wrap\">控制器</span></h3><div id=\"aVofQxHeGr29Wn7DDnaFoR\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">同样的，通过<span class=\"jill\"></span>nest-cli<span class=\"jill\"></span>提供的命令生成控制器:</span></div></div><ul class=\"wolai-block\"><li id=\"99RTU8gciASTX9pz1riv7C\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>nest g controller products</code></span></li></ul><blockquote id=\"5HXKVBNFHsMKGjsBu7K8mQ\" class=\"wolai-block\"><span class=\"inline-wrap\">在<span class=\"jill\"></span>Nest<span class=\"jill\"></span>中，使用装饰器</span><span class=\"inline-wrap\"><code>@Controller()</code></span><span class=\"inline-wrap\">定义一个基本的控制器，该装饰器可以传入一个路径参数</span></blockquote><code-block id=\"ndFQZZyoCX6i9eBidw3rDB\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'products'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 下一步生成服务提供者后需要注入控制器</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> productsService<span class=\"token operator\">:</span> ProductsService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></pre></div></code-block><div id=\"ufkgyV3TVBCiLB9uTYhCXL\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">同时在 </span><span class=\"inline-wrap\"><code>products.module.ts</code></span><span class=\"inline-wrap\">文件中会自动注册 ProductsController。</span></div></div><div id=\"uXWJqcFCLGGKCUzzpxm2d7\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"1MT8Pn8Q1pu1TnUw3UrsgN\" class=\"wolai-block\"><span class=\"inline-wrap\">服务</span></h3><div id=\"m7eTjTbuKUCEMePeo2op5T\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">一样的操作，使用命令生成</span></div></div><ul class=\"wolai-block\"><li id=\"qT8A69NxdVE4LitWSq18gt\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>nest g service products</code></span></li></ul><blockquote id=\"5yXzeJjh3sQQvRkdB8d174\" class=\"wolai-block\"><span class=\"inline-wrap\">其实可以通过 </span><span class=\"inline-wrap\"><code>nest g resource products</code></span><span class=\"inline-wrap\">一次性生成。\n更多创建命令可以通过 </span><span class=\"inline-wrap\"><code>nest generate --help</code></span><span class=\"inline-wrap\">查看。</span></blockquote><code-block id=\"7hNmcZjBRM6Lf3DwwCJLKg\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Injectable <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsService</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></div></code-block><div id=\"1H8c2jJLye8wyxhLrFTSJG\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">此时的 products.module.ts 文件</span></div></div><code-block id=\"xbLr6rWMcMVjx45eAT1iJX\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Module <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ProductsController <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./products.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ProductsService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./products.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>ProductsController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>ProductsService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></div></code-block><div id=\"hjvefEsX7pXJs2BGuRbFYX\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">到目前为止，已经完成了 </span><span class=\"inline-wrap\"><code>Products</code></span><span class=\"inline-wrap\"> 功能模块的搭建。接下来了解一下上面的操作，Nest<span class=\"jill\"></span>帮我们做了什么？</span></div></div><div id=\"wJsRr2QHLxqdw4EWAm5qs4\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"4JTe9tdnKAuXwmL7N2ZKeF\" class=\"wolai-block\"><span class=\"inline-wrap\">依赖注入</span></h3><aside id=\"t8R5k2spMpnHQn2JpTmLKK\" class=\"bg-cultured wolai-block\"><div data-symbol=\"🚗\" class=\"icon\"></div><span class=\"inline-wrap\">上面我们大概认识了</span><span class=\"red inline-wrap\">Nest</span><span class=\"inline-wrap\">的</span><span class=\"inline-wrap\"><b>模块化</b></span><span class=\"inline-wrap\">，那</span><span class=\"red inline-wrap\"> Nest </span><span class=\"inline-wrap\">的</span><span class=\"inline-wrap\"><b>依赖注入</b></span><span class=\"inline-wrap\">又是怎样的呢？</span></aside><div id=\"rK5FcPgrKFNnuCNrgzTc7D\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"> 先回顾一下之前的大致操作：</span></div></div><ol class=\"wolai-block\"><li id=\"3mETwFcPD5AELb2yrSFew5\"><div class=\"marker\"></div><span class=\"inline-wrap\">在</span><span class=\"inline-wrap\"><code>products.service.ts</code></span><span class=\"inline-wrap\">中，装饰器</span><span class=\"inline-wrap\"><code>@Injectable()</code></span><span class=\"inline-wrap\">将类</span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\">标记为可以被<span class=\"jill\"></span>Nest IoC<span class=\"jill\"></span>容器管理的类。</span></li><li id=\"wPC3nNME6Jxeg8zzmcRjQh\"><div class=\"marker\"></div><span class=\"inline-wrap\">在</span><span class=\"inline-wrap\"><code>products.controller.ts</code></span><span class=\"inline-wrap\"> 中，</span><span class=\"inline-wrap\"><code>ProductsController</code></span><span class=\"inline-wrap\"> 通过构造函数注入声明对</span><span class=\"inline-wrap\"><code>CatsService</code></span><span class=\"inline-wrap\">的依赖：</span><code-block id=\"5eUm8RXgNVLUbLfngbEGW2\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> productsService<span class=\"token operator\">:</span> ProductsService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></pre></div></code-block></li><li id=\"caiFZSs1bYpHRSe1ZAcTgW\"><div class=\"marker\"></div><span class=\"inline-wrap\">在</span><span class=\"inline-wrap\"><code>products.module.ts</code></span><span class=\"inline-wrap\">模块（ IoC 容器）中注册提供者。</span><code-block id=\"9Qf1rA2r4PnJ9hMwifZaoz\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>ProductsController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>ProductsService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></div></code-block></li></ol><div id=\"jVZ14ge29sf1b7EAomH4gG\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这个过程是<span class=\"jill\"></span>Nest 是如何处理的：</span></div></div><div id=\"qEUB79D8hwZNYwzow2wcFK\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"rPFYyg9a6aQK71pDpgxvcy\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">当 Nest IoC 容器实例化 </span><span class=\"red inline-wrap\">ProductsController </span><span class=\"inline-wrap\">时，它首先查找任何依赖项。当它找到 </span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\"> 依赖项时，它会对 </span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\"> 令牌执行查找，根据注册步骤（第<span class=\"jill\"></span>3）返回 </span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\"> 类。</span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\">假设 </span><span class=\"inline-wrap\"><code>SINGLETON</code></span><span class=\"inline-wrap\"> 作用域（默认行为），Nest 将创建一个 </span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\"> 实例，缓存它并返回它，或者如果已经缓存了一个实例，则返回现有实例。</span></div></div><blockquote id=\"bFtMPbZfGY21bLYDS521Tm\" class=\"wolai-block\"><span class=\"inline-wrap\">事实上，语法</span><span class=\"inline-wrap\"><code>providers: [ProductsService]</code></span><span class=\"inline-wrap\"> 是更完整语法的简写：</span><code-block id=\"db4Kb3GTLNoTXkxCjSgGUk\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre>providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>\n  provide<span class=\"token operator\">:</span> ProductsService<span class=\"token punctuation\">,</span>\n  useClass<span class=\"token operator\">:</span> ProductsService<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></div></code-block><div id=\"nY8xtmJrzQJRc47FdJ9jZ9\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">现在我们看到了这个显式构造，我们可以了解注册过程。在这里，我们清楚地将令牌<span class=\"jill\"></span>ProductsService<span class=\"jill\"></span>与</span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\">相关联。</span><span class=\"inline-wrap\"><code>ProductsService</code></span><span class=\"inline-wrap\">速记符号只是为了简化最常见的用例，其中令牌用于请求具有</span><span class=\"inline-wrap\"><b>相同名称的类</b></span><span class=\"inline-wrap\">的实例。</span></div></div></blockquote><div id=\"2wLN9fQd4RzadisGGt4cyQ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"88o2MQFdRi242G6No8QFYy\" class=\"wolai-block\"><span class=\"inline-wrap\">核心概念</span></h2><div id=\"rSup3o9c1JPyMgLvUmcAhs\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">接下来围绕业务来介绍其他几个核心概念，在这之前，先来了解一下 </span><span class=\"inline-wrap\"><b>NestJS</b></span><span class=\"inline-wrap\"> 如何接入数据库。</span></div></div><h3 id=\"8PacdTkzmhJrmTHQEQJ3BE\" class=\"wolai-block\"><span class=\"inline-wrap\">数据库</span></h3><div id=\"wqA7Z9BrQVSQsoAxmjXwJx\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这里以</span><span class=\"inline-wrap\"><b>TypeORM<span class=\"jill\"></span>框架</b></span><span class=\"inline-wrap\">为例与<span class=\"jill\"></span>MySQL<span class=\"jill\"></span>数据库进行交互。</span></div></div><blockquote id=\"6T2QEySC3NLyekC89RZek4\" class=\"wolai-block\"><span class=\"inline-wrap\">ORM<span class=\"jill\"></span>技术（Object-Relational Mapping）,把关系数据库的变结构映射到对象上。</span></blockquote><div id=\"pVHfUECp1UVhRrhuZSdBtB\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">安装依赖：</span></div></div><code-block id=\"x9shieZiit8X7JJZGk2Yze\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Bash\" class=\"marker\"></div><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> @nestjs/typeorm typeorm mysql2 <span class=\"token parameter variable\">-S</span></pre></div></code-block><div id=\"t9NqEiVt4KKHETEAjSbAzA\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在 app.module.ts 中注册：</span></div></div><code-block id=\"oo1brk5EE7KP61RueGPvMt\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Module <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> TypeOrmModule <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/typeorm'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppController <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ProductsModule <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./products/products.module'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    ProductsModule<span class=\"token punctuation\">,</span>\n    TypeOrmModule<span class=\"token punctuation\">.</span><span class=\"token function\">forRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">'mysql'</span><span class=\"token punctuation\">,</span>\n      host<span class=\"token operator\">:</span> <span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span>\n      port<span class=\"token operator\">:</span> <span class=\"token number\">3306</span><span class=\"token punctuation\">,</span>\n      username<span class=\"token operator\">:</span> <span class=\"token string\">'root'</span><span class=\"token punctuation\">,</span>\n      password<span class=\"token operator\">:</span> <span class=\"token string\">'123456'</span><span class=\"token punctuation\">,</span>\n      database<span class=\"token operator\">:</span> <span class=\"token string\">'store'</span><span class=\"token punctuation\">,</span>\n      autoLoadEntities<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 自动加载实体</span>\n      synchronize<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><div id=\"xqeMoecUQKU2gcr9Vet5MC\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这是最简单的配置方式，当然 **TypeORM **也非常方便地支持：</span></div></div><ul class=\"wolai-block\"><li id=\"imBZdVmoVYP63draomysvG\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">存储库模式</span><ul class=\"wolai-block\"><li id=\"xpsF59KPPiuLyVFRZisFsY\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">每个实体都有自己的存储库<span class=\"jill\"></span>Entity。</span></li></ul></li><li id=\"bPLHW6RB66AKSvK9SHJ5jE\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">实体关系</span><ul class=\"wolai-block\"><li id=\"7pgTFQK7DVUyyFZn1F8SXE\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">一对一</span><span class=\"inline-wrap\"><code>@OneToOne()</code></span><span class=\"inline-wrap\">，一对多</span><span class=\"inline-wrap\"><code>@OneToMany()</code></span><span class=\"inline-wrap\">和</span><span class=\"inline-wrap\"><code>@ManyToOne()</code></span><span class=\"inline-wrap\">，多对多</span><span class=\"inline-wrap\"><code>@ManyToMany()</code></span></li></ul></li><li id=\"bTwdqug4H6vUdzcrkZFgij\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">自动载入实体</span></li><li id=\"owh5nhB7i5m1oNyeT6ajhN\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">事务</span></li><li id=\"bB3jo9MYEJC3YSG36jfyiB\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">多数据库</span></li><li id=\"19WF656LVus4GGmAWRgTHg\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">异步配置</span></li><li id=\"gMTJHqE4p2ZhBVeq51DaEf\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">等等</span></li></ul><div id=\"wVAjtxjG6J1fwegi6eAw4L\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">详细可参考</span><span class=\"inline-wrap\"><a href=\"https://docs.nestjs.cn/8/techniques?id=数据库\"><span>官方文档</span></a></span><span class=\"inline-wrap\">。</span></div></div><div id=\"pYSxj9qczvtvKR1x2J6eyi\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">对了，不忘创建一下 </span><span class=\"inline-wrap\"><code>Products</code></span><span class=\"inline-wrap\"> 的实体类；</span></div></div><code-block id=\"1DiNRwS15WPcvirUZHxVM9\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Column<span class=\"token punctuation\">,</span> Entity<span class=\"token punctuation\">,</span> PrimaryGeneratedColumn <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Entity</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'products'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsEntity</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">PrimaryGeneratedColumn</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  id<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 标记为主列，值自动生成</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Column</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> length<span class=\"token operator\">:</span> <span class=\"token number\">50</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  title<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Column</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'text'</span><span class=\"token punctuation\">)</span>\n  desc<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Column</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  thumb_url<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Column</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'tinyint'</span><span class=\"token punctuation\">)</span>\n  type<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Column</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'timestamp'</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">default</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">'CURRENT_TIMESTAMP'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  create_time<span class=\"token operator\">:</span> Date<span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Column</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'timestamp'</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">default</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">'CURRENT_TIMESTAMP'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  update_time<span class=\"token operator\">:</span> Date<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><div id=\"1KFQPpLd5fLHjhjS9cr6XW\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">完成数据库的打通后，开始增加业务逻辑代码。</span></div></div><div id=\"3aZNCYoqj5aaUQY7YSB1k1\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"6aaF3c5Xz3vUDp3g8YJUJn\" class=\"wolai-block\"><span class=\"inline-wrap\">HTTP<span class=\"jill\"></span>装饰器</span></h3><div id=\"k4bcPecj5zszYX3nRRcaXk\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">HTTP 装饰器使用起来同样非常简单；\nNest 为所有标准的 HTTP 方法提供了相应的装饰器：</span></div></div><ul class=\"wolai-block\"><li id=\"mEWkPd3qW4X39HTPu3oirU\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Get()</code></span></li><li id=\"3B23A4ZKtezmVtGwW5rF7A\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Post()</code></span></li><li id=\"h2TaCX4oUHLFrJw5haNqzE\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Put()</code></span></li><li id=\"kX1vjzkk1xt2uEUcSyWzS4\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Delete()</code></span></li><li id=\"bvB3u8smKMKzb6e4qUnpui\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Patch()</code></span></li><li id=\"59uJoGZn4ioDkzpqN9TJz4\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Options()</code></span></li><li id=\"txTiANQNf2A4KG77GG6CUj\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Head()</code></span></li><li id=\"pRbQyTwx54JKMbhRn5yUWK\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@All() </code></span><span class=\"inline-wrap\">用于定义一个用于处理所有 HTTP 请求方法的处理程序。</span></li></ul><div id=\"dVR7z84Qcbecjo31SqHKmt\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">经过它们装饰的方法，可以对相应的<span class=\"jill\"></span>HTTP<span class=\"jill\"></span>请求进行响应。\n同时它们可以接受一个字符串或一个字符串数组作为参数，这里的</span><span class=\"inline-wrap\"><b>字符串</b></span><span class=\"inline-wrap\">可以是固定的路径，也可以是</span><span class=\"inline-wrap\"><b>通配符</b></span><span class=\"inline-wrap\">。</span></div></div><code-block id=\"p3p1JCt33h5EDhPpGdGN9t\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Body<span class=\"token punctuation\">,</span> Controller<span class=\"token punctuation\">,</span> Delete<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Param<span class=\"token punctuation\">,</span> Post<span class=\"token punctuation\">,</span> Put<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ApiOperation<span class=\"token punctuation\">,</span> ApiTags <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/swagger'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> CreateProductDto <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./dto/create-product.dto'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ProductsService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./products.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiTags</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'产品'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'products'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> productsService<span class=\"token operator\">:</span> ProductsService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiOperation</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> summary<span class=\"token operator\">:</span> <span class=\"token string\">'创建产品'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Post</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Body</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> product<span class=\"token operator\">:</span> CreateProductDto<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsService<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>ProductsEntity<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsService<span class=\"token punctuation\">.</span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">':id'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">findById</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Param</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsService<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Put</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">':id'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Param</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span> id<span class=\"token punctuation\">,</span> <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Body</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> product<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsService<span class=\"token punctuation\">.</span><span class=\"token function\">updateById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Delete</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Param</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsService<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></pre></div></code-block><div id=\"tz2cfHamcN2vQYAJBtQccB\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h4 id=\"5LRjxn2QnDbWnzQ7sRaLSU\" class=\"wolai-block\"><span class=\"inline-wrap\">@Req()、@Res()</span></h4><div id=\"vwVsLsgmaTfu83JogFEjkQ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest 提供了对底层平台（默认为 Express）的</span><span class=\"inline-wrap\"><a href=\"http://expressjs.com/en/api.html#req\"><span>请求对象</span></a></span><span class=\"inline-wrap\">（request）的访问方式。我们可以在待处理函数的签名中增加</span><span class=\"inline-wrap\"><code>@Req()</code></span><span class=\"inline-wrap\">装饰器，Nest 则会自动注入请求对象。</span></div></div><div id=\"4DHNVkC4EESEdN3oipF3j7\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">针对<span class=\"jill\"></span>HTTP<span class=\"jill\"></span>请求，Nest 提供了开箱即用的专有装饰器，如下</span></div></div><div id=\"2hhHqDif8teP5BWxtczMGq\" class=\"wolai-block wolai-simple-table\"><table><thead><tr><th style=\"width: 370px\"><span class=\"inline-wrap\"><b></b></span><span class=\"inline-wrap\"><b>装饰器</b></span></th><th style=\"width: 370px\"><span class=\"inline-wrap\"><b></b></span><span class=\"inline-wrap\"><b>对应参数</b></span></th></tr></thead><tbody><tr><td><span class=\"inline-wrap\">@Request()，@Req()</span></td><td><span class=\"inline-wrap\">req</span></td></tr><tr><td><span class=\"inline-wrap\">@Response()，@Res()*</span></td><td><span class=\"inline-wrap\">res</span></td></tr><tr><td><span class=\"inline-wrap\">@Next()</span></td><td><span class=\"inline-wrap\">next</span></td></tr><tr><td><span class=\"inline-wrap\">@Session()</span></td><td><span class=\"inline-wrap\">req.session</span></td></tr><tr><td><span class=\"inline-wrap\">@Param(key?: string)</span></td><td><span class=\"inline-wrap\">req.params/req.params[key]</span></td></tr><tr><td><span class=\"inline-wrap\">@Body(key?: string)</span></td><td><span class=\"inline-wrap\">req.body/req.body[key]</span></td></tr><tr><td><span class=\"inline-wrap\">@Query(key?: string)</span></td><td><span class=\"inline-wrap\">req.query/req.query[key]</span></td></tr><tr><td><span class=\"inline-wrap\">@Headers(name?: string)</span></td><td><span class=\"inline-wrap\">req.headers/req.headers[name]</span></td></tr><tr><td><span class=\"inline-wrap\">@Ip()</span></td><td><span class=\"inline-wrap\">req.ip</span></td></tr><tr><td><span class=\"inline-wrap\">@HostParam()</span></td><td><span class=\"inline-wrap\">req.hosts</span></td></tr></tbody></table></div><div id=\"4mvAaoD3Zq9aAgUTqVUnoA\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">另外，Nest<span class=\"jill\"></span>还支持较多的装饰器，例如</span></div></div><ul class=\"wolai-block\"><li id=\"dkF9aTHtEcB64epMpxUKBt\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@HttpCode(statusCode)</code></span><span class=\"inline-wrap\"> 修改响应状态码</span></li><li id=\"sVdukeLBifaNor4LoU26SN\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Header(key, value)</code></span><span class=\"inline-wrap\">  自定义响应头</span></li><li id=\"jPXiJYr6Dr2XL4A96p92Pg\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>@Redirect(url, statusCode|302)</code></span><span class=\"inline-wrap\"> 设置重定向</span></li></ul><div id=\"enpdNw7rvLtCmEQ5MkeAkV\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">详细可参考</span><span class=\"inline-wrap\"><a href=\"https://docs.nestjs.com/controllers\"><span>官方文档</span></a></span><span class=\"inline-wrap\">查阅。</span></div></div><div id=\"iMXKuc8znNMgiqqKi2nAYE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"hQPRDcSjY776EmSXShBfSo\" class=\"wolai-block\"><span class=\"inline-wrap\">Repository</span></h3><div id=\"a8pf73Bu6fToHEL8GeCZAo\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">上面介绍了 </span><span class=\"inline-wrap\"><b>TypeORM</b></span><span class=\"inline-wrap\"> 以及 </span><span class=\"inline-wrap\"><b>Entity</b></span><span class=\"inline-wrap\">，这里具体化一下 service；</span></div></div><code-block id=\"aXoWFKGuL1Yyo1xhkCRv4M\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> HttpException<span class=\"token punctuation\">,</span> Injectable <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> InjectRepository <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/typeorm'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Repository <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ProductsEntity <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./products.entity'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsService</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>\n    <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">InjectRepository</span></span><span class=\"token punctuation\">(</span>ProductsEntity<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> productsRepository<span class=\"token operator\">:</span> Repository<span class=\"token operator\">&lt;</span>ProductsEntity<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// 创建产品</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span>product<span class=\"token operator\">:</span> Partial<span class=\"token operator\">&lt;</span>ProductsEntity<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>ProductsEntity<span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> title <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> product<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>title<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpException</span><span class=\"token punctuation\">(</span><span class=\"token string\">'缺少产品标题'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">const</span> doc <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> where<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> title <span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpException</span><span class=\"token punctuation\">(</span><span class=\"token string\">'产品已存在'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// 获取指定产品</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>ProductsEntity<span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findOneBy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> id<span class=\"token operator\">:</span> id <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// 更新产品</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">updateById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> product<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>ProductsEntity<span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> existProduct <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>existProduct<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpException</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">id为</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>id<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">的产品不存在</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">const</span> updateProduct <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">merge</span><span class=\"token punctuation\">(</span>existProduct<span class=\"token punctuation\">,</span> product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>updateProduct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// 刪除产品</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> existProduct <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>existProduct<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpException</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">id为</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>id<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">的产品不存在</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>existProduct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// 获取产品列表</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>ProductsEntity<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsRepository<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><div id=\"c1RVoMZJqw8oUSYxaTbCDS\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">自此一个完成的请求就已经完成了，但为了接口更加规范，还可以再进一步完善；</span></div></div><div id=\"c4uAETuPtRLn6VVnSYHhot\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"huggnYtU3PxsU1cfcvJ9LQ\" class=\"wolai-block\"><span class=\"inline-wrap\">过滤器</span></h3><div id=\"uQaJXzDCcUSxL4sRwtHZmt\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">过滤器也是 </span><span class=\"inline-wrap\"><b>NestJS</b></span><span class=\"inline-wrap\"> 的众多<span class=\"jill\"></span>provider<span class=\"jill\"></span>之一；这里用过滤器来简单处理错误请求；\n</span><span class=\"inline-wrap\"><code>nest g filter core/filter/http-exception</code></span><span class=\"inline-wrap\">\n代码实现：</span></div></div><code-block id=\"d7uZsfNUCpeoCPWdA9XGyE\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>\n  ArgumentsHost<span class=\"token punctuation\">,</span>\n  Catch<span class=\"token punctuation\">,</span>\n  ExceptionFilter<span class=\"token punctuation\">,</span>\n  HttpException<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Catch</span></span><span class=\"token punctuation\">(</span>HttpException<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HttpExceptionFilter</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ExceptionFilter</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>exception<span class=\"token operator\">:</span> HttpException<span class=\"token punctuation\">,</span> host<span class=\"token operator\">:</span> ArgumentsHost<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> host<span class=\"token punctuation\">.</span><span class=\"token function\">switchToHttp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取请求上下文</span>\n    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getResponse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取请求上下文中的 response对象</span>\n    <span class=\"token keyword\">const</span> status <span class=\"token operator\">=</span> exception<span class=\"token punctuation\">.</span><span class=\"token function\">getStatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取异常状态码</span>\n\n    <span class=\"token comment\">// 设置错误信息</span>\n    <span class=\"token keyword\">const</span> message <span class=\"token operator\">=</span> exception<span class=\"token punctuation\">.</span>message\n      <span class=\"token operator\">?</span> exception<span class=\"token punctuation\">.</span>message\n      <span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>status <span class=\"token operator\">>=</span> <span class=\"token number\">500</span> <span class=\"token operator\">?</span> <span class=\"token string\">'Service Error'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Client Error'</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> errorResponse <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n      data<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      message<span class=\"token operator\">:</span> message<span class=\"token punctuation\">,</span>\n      code<span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 设置返回的状态码， 请求头，发送错误信息</span>\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'application/json; charset=utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>errorResponse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><div id=\"ub8QLmR2ujZLLX7xRdsnhJ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在<span class=\"jill\"></span>main.js<span class=\"jill\"></span>中注册：</span></div></div><code-block id=\"nZtAwuswBU97Ac6hwFYiBU\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token operator\">...</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> HttpExceptionFilter <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./core/filter/http-exception/http-exception.filter'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> NestFactory<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>NestExpressApplication<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>AppModule<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 注册全局错误的过滤器</span>\n  app<span class=\"token punctuation\">.</span><span class=\"token function\">useGlobalFilters</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpExceptionFilter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">...</span>\n  <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block><div id=\"g6dUQq6iEeDA3jH35vtpBL\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">接下来对请求成功返回的格式进行统一的处理，可以用<span class=\"jill\"></span>Nest.js<span class=\"jill\"></span>的</span><span class=\"inline-wrap\"><b>拦截器</b></span><span class=\"inline-wrap\">来实现。</span></div></div><div id=\"oBwWAsRKffKGUqhZR83Zsb\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"jnRnLx5KqV45ZvDZXSGw2t\" class=\"wolai-block\"><span class=\"inline-wrap\">拦截器</span></h3><div id=\"cFsDSr5e6WCKH5hkePP8GJ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">拦截器可以在调用路由处理程序之前和之后访问响应/请求。比如 logger 或者 统一处理</span><span class=\"inline-wrap\"><b>响应结果</b></span><span class=\"inline-wrap\">；</span></div></div><div id=\"k3KC2JCscYEvJr7SzNsTmP\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">老配方，首先使用命令创建一个拦截器：\n</span><span class=\"inline-wrap\"><code>nest g interceptor core/interceptor/transform</code></span></div></div><div id=\"5pCnEmvSvrhWSxmmETdr8H\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">代码实现</span></div></div><code-block id=\"gcgpKkN9e514UbadWHpeVW\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>\n  CallHandler<span class=\"token punctuation\">,</span>\n  ExecutionContext<span class=\"token punctuation\">,</span>\n  Injectable<span class=\"token punctuation\">,</span>\n  NestInterceptor<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> map<span class=\"token punctuation\">,</span> Observable <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TransformInterceptor</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">NestInterceptor</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">intercept</span><span class=\"token punctuation\">(</span>context<span class=\"token operator\">:</span> ExecutionContext<span class=\"token punctuation\">,</span> next<span class=\"token operator\">:</span> CallHandler<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Observable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> next<span class=\"token punctuation\">.</span><span class=\"token function\">handle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n          data<span class=\"token punctuation\">,</span>\n          code<span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n          msg<span class=\"token operator\">:</span> <span class=\"token string\">'请求成功'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><div id=\"tQfDhBFJMdFR47rpqTMuaW\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">注册到<span class=\"jill\"></span>main.js</span></div></div><code-block id=\"7ekbP7oUzKhaJgqKQkPsbC\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token operator\">...</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> TransformInterceptor <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./core/interceptor/transform/transform.interceptor'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> NestFactory<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>NestExpressApplication<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>AppModule<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">...</span>\n  <span class=\"token comment\">// 全局注册拦截器</span>\n  app<span class=\"token punctuation\">.</span><span class=\"token function\">useGlobalInterceptors</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">TransformInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">...</span>\n  <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block><div id=\"bgytXUUpjsA83neoMw1J6R\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"pdusHm5R5ccGjniCeddU11\" class=\"wolai-block\"><span class=\"inline-wrap\">接口文档</span></h3><div id=\"mAVnad8ZBGTCebzFmRdkBN\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">规范化接口当然少不了接口文档，Nest<span class=\"jill\"></span>也是完美支持 swagge，在</span><span class=\"inline-wrap\"><b>product</b></span><span class=\"inline-wrap\">\n目录下创建一个</span><span class=\"inline-wrap\"><code>dto</code></span><span class=\"inline-wrap\">文件夹，再创建一个</span><span class=\"inline-wrap\"><code>create-post.dto.ts</code></span><span class=\"inline-wrap\">文件：</span></div></div><code-block id=\"6xiCYSAk5Dh5fMACiZW3Gs\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ApiProperty<span class=\"token punctuation\">,</span> ApiPropertyOptional <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/swagger'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CreateProductDto</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiProperty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品标题'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> title<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiProperty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品描述'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> desc<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiPropertyOptional</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品缩略图'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> thumb_url<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiProperty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品类型'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> type<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><div id=\"exF7AUGwXmkomwotyCtf9F\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">完善<span class=\"jill\"></span>controller，进行说明：</span></div></div><code-block id=\"5USAcTJoyP1HrzRJU3U6Ws\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token operator\">...</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiTags</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'产品'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'products'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductsController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> productsService<span class=\"token operator\">:</span> ProductsService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiOperation</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> summary<span class=\"token operator\">:</span> <span class=\"token string\">'创建产品'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Post</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Body</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> product<span class=\"token operator\">:</span> CreateProductDto<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>productsService<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">...</span>\n<span class=\"token punctuation\">&#125;</span></pre></div></code-block><div id=\"f12wmMZmvc5WYnbg8DZu5c\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"1b7J6ux8Ntqia2Yi4h39Fo\" class=\"wolai-block\"><span class=\"inline-wrap\">数据验证</span></h3><div id=\"uFJJ5syGhNxxwpu4Yqu1vE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在<span class=\"jill\"></span>Nest.js<span class=\"jill\"></span>中，</span><span class=\"inline-wrap\"><b>管道（Pipes）</b></span><span class=\"inline-wrap\"> 就是专门用来做数据转换的，我们看一下它的定义：</span></div></div><blockquote id=\"fJg8v96ympMYJnSmWHEThc\" class=\"wolai-block\"><span class=\"inline-wrap\">管道是具有 @Injectable() 装饰器的类。管道应实现 PipeTransform 接口。管道有两个类型:</span><ul class=\"wolai-block\"><li id=\"8Fm1QADfsFBb4uPSgUWKe8\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><b>转换</b></span><span class=\"inline-wrap\">：管道将输入数据转换为所需的数据输出</span></li><li id=\"e3P4RnRJB9FabfgkwEQKya\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><b>验证</b></span><span class=\"inline-wrap\">：对输入数据进行验证，如果验证成功继续传递; 验证失败则抛出异常;</span></li></ul><div id=\"ipCSsaxYkcgmt6mdgBsBeY\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">管道在异常区域内运行。这意味着当抛出异常时，它们由核心异常处理程序和应用于当前上下文的 </span><span class=\"inline-wrap\"><a href=\"https://docs.nestjs.cn/8/exceptionfilters\"><span>异常过滤器</span></a></span><span class=\"inline-wrap\"> 处理。当在 Pipe 中发生异常，controller 不会继续执行任何方法。</span></div></div></blockquote><div id=\"rYEbt9Nb24eoY2FYtJRo29\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">通俗来讲就是，对请求接口的入参进行验证和转换的前置操作，验证好了我才会将内容给到路由对应的方法中去，失败了就进入异常过滤器中。</span></div></div><div id=\"k9tyRFTDNwDUBjw16cTTRQ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"1SajZGaSmpxag69e2rtdCB\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">安装依赖：</span></div></div><ul class=\"wolai-block\"><li id=\"7MwwMJ4L6hj6bnCC8NdLJa\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>npm install class-validator class-transformer -S</code></span></li></ul><div id=\"tSsjHuUYjJmsjjm3jdZrs1\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest.js<span class=\"jill\"></span>自带了<span class=\"jill\"></span>9<span class=\"jill\"></span>个开箱即用的管道：</span></div></div><ol class=\"wolai-block\"><li id=\"mtVxEngYpb3QokXS6n6Hed\"><div class=\"marker\"></div><span class=\"inline-wrap\">ValidationPipe</span></li><li id=\"bMbFfUUp9xusaqR2KwwLzt\"><div class=\"marker\"></div><span class=\"inline-wrap\">ParseIntPipe</span></li><li id=\"6r2wBw45fxGTUNLL8E1Zzm\"><div class=\"marker\"></div><span class=\"inline-wrap\">ParseFloatPipe</span></li><li id=\"gs4miRrKYZsW4xXgk617tF\"><div class=\"marker\"></div><span class=\"inline-wrap\">ParseBoolPipe</span></li><li id=\"tvdaxUAePfLEpv5vHWxMNU\"><div class=\"marker\"></div><span class=\"inline-wrap\">ParseArrayPipe</span></li><li id=\"qWMEMjxgiU3vZz9eqHQm6H\"><div class=\"marker\"></div><span class=\"inline-wrap\">ParseUUIDPipe</span></li><li id=\"8yQNoYPGRpy8zjGuM7KVsD\"><div class=\"marker\"></div><span class=\"inline-wrap\">ParseEnumPipe</span></li><li id=\"snjtnm5gYePmUSjBgm9yqa\"><div class=\"marker\"></div><span class=\"inline-wrap\">DefaultValuePipe</span></li><li id=\"s9xuDZxYr3Hd46a4szYeGx\"><div class=\"marker\"></div><span class=\"inline-wrap\">ParseFilePipe</span></li></ol><div id=\"uezZf6DZmM4d8D9YtGk8Dp\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">可以单独使用</span></div></div><code-block id=\"aMWdCf1Z5auUWkXzCjEL7H\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">':id'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">async</span> <span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Param</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> ParseIntPipe<span class=\"token punctuation\">)</span> id<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>catsService<span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></pre></div></code-block><div id=\"eMhY3vMomyST1XXqhyvmzT\" class=\"wolai-block wolai-text\"><div></div></div><div id=\"uPxoMnSirLthRbGAfkwxGT\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">也可以配合 class-validator<span class=\"jill\"></span>使用实现类校验器，可以完美的实现对参数类型进行验证，验证失败抛出异常。</span></div></div><div id=\"uNvi4okVKhHvhbA2X4ZN3m\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">管道验证操作通常用在<span class=\"jill\"></span>dto<span class=\"jill\"></span>这种传输层的文件中,用作验证操作。安装两个需要的依赖包：</span></div></div><div id=\"ihJin1RjoBoC3C4nLPFT1R\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>class-transformer</code></span><span class=\"inline-wrap\">和</span><span class=\"inline-wrap\"><code>class-validator</code></span></div></div><div id=\"7ahXJ29MK6WBiNAk8SUdjb\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">安装依赖：</span></div></div><div id=\"vcvrAs7Tu2FCVu92iG3oFf\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>npm install class-validator class-transformer -S</code></span></div></div><div id=\"3Zb7PnjVUMynXFwfFVCNrf\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">然后在<span class=\"jill\"></span>create-post.dto.ts<span class=\"jill\"></span>文件中添加验证, 完善错误信息提示：</span></div></div><code-block id=\"qSsXjWXM8YFwvPmzijo9pD\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ApiProperty<span class=\"token punctuation\">,</span> ApiPropertyOptional <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/swagger'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> IsNotEmpty<span class=\"token punctuation\">,</span> IsNumber <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'class-validator'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CreateProductDto</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">IsNotEmpty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> message<span class=\"token operator\">:</span> <span class=\"token string\">'产品标题必填'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiProperty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品标题'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> title<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">IsNotEmpty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> message<span class=\"token operator\">:</span> <span class=\"token string\">'缺少产品描述'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiProperty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品描述'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> desc<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiPropertyOptional</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品缩略图'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> thumb_url<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">IsNumber</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ApiProperty</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> description<span class=\"token operator\">:</span> <span class=\"token string\">'产品类型'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">readonly</span> type<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block><blockquote id=\"m8tSw6s74CZzP33X3VJktM\" class=\"wolai-block\"><span class=\"inline-wrap\">上面只编写了一些常用的验证，class-validator<span class=\"jill\"></span>还提供了很多的验证方法， 感兴趣可以看</span><span class=\"inline-wrap\"><a href=\"https://github.com/typestack/class-validator#validation-messages\"><span>官方文档</span></a></span><span class=\"inline-wrap\">.</span></blockquote><div id=\"eN1gY9VXkFx6CvU9WR2HRb\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"htvJskYfA5Zu6WL32mULfC\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">最后我们还有一个重要的步骤， 就是在<span class=\"jill\"></span>main.ts<span class=\"jill\"></span>中全局注册一下管道</span><span class=\"inline-wrap\"><b>ValidationPipe</b></span><span class=\"inline-wrap\">：</span></div></div><code-block id=\"q192eF9ij9LDBQqvokWwQV\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"Typescript\" class=\"marker\"></div><pre><span class=\"token operator\">...</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ValidationPipe <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> NestFactory<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>NestExpressApplication<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>AppModule<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">...</span>\n  <span class=\"token comment\">// 注册校验管道</span>\n  app<span class=\"token punctuation\">.</span><span class=\"token function\">useGlobalPipes</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ValidationPipe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block><div id=\"n8zeC4GEKvfWDc4w2rXkmV\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"budrUjTXfrbRUNNf9jhkrP\" class=\"wolai-block\"><span class=\"inline-wrap\">生命周期</span></h3><div id=\"mACFSmS9Y7mPmKNBiTZmyV\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest<span class=\"jill\"></span>在 </span><span class=\"inline-wrap\"><b>modules</b></span><span class=\"inline-wrap\"> ，</span><span class=\"inline-wrap\"><b>providers</b></span><span class=\"inline-wrap\"> 和 </span><span class=\"inline-wrap\"><b>controllers</b></span><span class=\"inline-wrap\"> 的以下每个生命周期事件中调用注册钩子方法。</span></div></div><div id=\"wxp3KHGNg1uKnNNnsKVgG8\" class=\"wolai-block wolai-simple-table\"><table><thead><tr><th style=\"width: 241px\"><span class=\"inline-wrap\">生命周期钩子方法</span></th><th style=\"width: 484px\"><span class=\"inline-wrap\">生命周期时间触发钩子方法调用</span></th></tr></thead><tbody><tr><td><span class=\"inline-wrap\">OnModuleInit()</span></td><td><span class=\"inline-wrap\">初始化主模块依赖处理后调用一次</span></td></tr><tr><td><span class=\"inline-wrap\">OnApplicationBootstrap()</span></td><td><span class=\"inline-wrap\">在应用程序完全启动并监听连接后调用一次</span></td></tr><tr><td><span class=\"inline-wrap\">OnModuleDestroy()</span></td><td><span class=\"inline-wrap\">收到终止信号(例如<span class=\"jill\"></span>SIGTERM)后调用</span></td></tr><tr><td><span class=\"inline-wrap\">beforeApplicationShutdown()</span></td><td><span class=\"inline-wrap\">在<span class=\"jill\"></span>onModuleDestroy()完成(Promise<span class=\"jill\"></span>被<span class=\"jill\"></span>resolved<span class=\"jill\"></span>或者<span class=\"jill\"></span>rejected)；一旦完成，将关闭所有连接(调用<span class=\"jill\"></span>app.close() 方法).</span></td></tr><tr><td><span class=\"inline-wrap\">OnApplicationShutdown()</span></td><td><span class=\"inline-wrap\">连接关闭处理时调用(app.close())</span></td></tr></tbody></table></div><div id=\"7Cwx3ksi9akqUjUpnhTqz7\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"xt3v1bVA2cKVCbPGafegvw\" class=\"wolai-block\"><span class=\"inline-wrap\">总结</span></h2><div id=\"nghMbVvEyw3HypqwccYkxP\" class=\"wolai-block wolai-text\"><div><span class=\"red inline-wrap\">NodeJS</span><span class=\"inline-wrap\">后端已经有很好生态，各类工程化与微服务需要功能都有了<span class=\"jill\"></span>npm<span class=\"jill\"></span>版本，内部数据通过<span class=\"jill\"></span>TypeScript<span class=\"jill\"></span>验证保证类型无误，只要处理好输入数据的验证和转换问题，是可以在实际项目中发挥力量的，但是，如果需要执行大量的计算（物联网，电子商务平台，大数据），那么使用<span class=\"jill\"></span>Spring Boot<span class=\"jill\"></span>会是更好的选择。</span></div></div><div id=\"kKE2KyGo1wGY3b3NGmMFN7\" class=\"wolai-block wolai-text\"><div></div></div></article><footer></footer></body></html>"},{"_content":"@font-face{font-family:KaTeX_AMS;font-style:normal;font-weight:400;src:url(fonts/KaTeX_AMS-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_AMS-Regular.woff) format(\"woff\"),url(fonts/KaTeX_AMS-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Caligraphic;font-style:normal;font-weight:700;src:url(fonts/KaTeX_Caligraphic-Bold.woff2) format(\"woff2\"),url(fonts/KaTeX_Caligraphic-Bold.woff) format(\"woff\"),url(fonts/KaTeX_Caligraphic-Bold.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Caligraphic;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Caligraphic-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Caligraphic-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Caligraphic-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Fraktur;font-style:normal;font-weight:700;src:url(fonts/KaTeX_Fraktur-Bold.woff2) format(\"woff2\"),url(fonts/KaTeX_Fraktur-Bold.woff) format(\"woff\"),url(fonts/KaTeX_Fraktur-Bold.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Fraktur;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Fraktur-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Fraktur-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Fraktur-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Main;font-style:normal;font-weight:700;src:url(fonts/KaTeX_Main-Bold.woff2) format(\"woff2\"),url(fonts/KaTeX_Main-Bold.woff) format(\"woff\"),url(fonts/KaTeX_Main-Bold.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Main;font-style:italic;font-weight:700;src:url(fonts/KaTeX_Main-BoldItalic.woff2) format(\"woff2\"),url(fonts/KaTeX_Main-BoldItalic.woff) format(\"woff\"),url(fonts/KaTeX_Main-BoldItalic.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Main;font-style:italic;font-weight:400;src:url(fonts/KaTeX_Main-Italic.woff2) format(\"woff2\"),url(fonts/KaTeX_Main-Italic.woff) format(\"woff\"),url(fonts/KaTeX_Main-Italic.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Main;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Main-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Main-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Main-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Math;font-style:italic;font-weight:700;src:url(fonts/KaTeX_Math-BoldItalic.woff2) format(\"woff2\"),url(fonts/KaTeX_Math-BoldItalic.woff) format(\"woff\"),url(fonts/KaTeX_Math-BoldItalic.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Math;font-style:italic;font-weight:400;src:url(fonts/KaTeX_Math-Italic.woff2) format(\"woff2\"),url(fonts/KaTeX_Math-Italic.woff) format(\"woff\"),url(fonts/KaTeX_Math-Italic.ttf) format(\"truetype\")}@font-face{font-family:\"KaTeX_SansSerif\";font-style:normal;font-weight:700;src:url(fonts/KaTeX_SansSerif-Bold.woff2) format(\"woff2\"),url(fonts/KaTeX_SansSerif-Bold.woff) format(\"woff\"),url(fonts/KaTeX_SansSerif-Bold.ttf) format(\"truetype\")}@font-face{font-family:\"KaTeX_SansSerif\";font-style:italic;font-weight:400;src:url(fonts/KaTeX_SansSerif-Italic.woff2) format(\"woff2\"),url(fonts/KaTeX_SansSerif-Italic.woff) format(\"woff\"),url(fonts/KaTeX_SansSerif-Italic.ttf) format(\"truetype\")}@font-face{font-family:\"KaTeX_SansSerif\";font-style:normal;font-weight:400;src:url(fonts/KaTeX_SansSerif-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_SansSerif-Regular.woff) format(\"woff\"),url(fonts/KaTeX_SansSerif-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Script;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Script-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Script-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Script-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Size1;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Size1-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Size1-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Size1-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Size2;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Size2-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Size2-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Size2-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Size3;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Size3-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Size3-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Size3-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Size4;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Size4-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Size4-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Size4-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Typewriter;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Typewriter-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Typewriter-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Typewriter-Regular.ttf) format(\"truetype\")}.katex{font:normal 1.21em KaTeX_Main,Times New Roman,serif;line-height:1.2;text-indent:0;text-rendering:auto}.katex *{-ms-high-contrast-adjust:none!important;border-color:currentColor}.katex .katex-version:after{content:\"0.13.11\"}.katex .katex-mathml{clip:rect(1px,1px,1px,1px);border:0;height:1px;overflow:hidden;padding:0;position:absolute;width:1px}.katex .katex-html>.newline{display:block}.katex .base{position:relative;white-space:nowrap;width:-webkit-min-content;width:-moz-min-content;width:min-content}.katex .base,.katex .strut{display:inline-block}.katex .textbf{font-weight:700}.katex .textit{font-style:italic}.katex .textrm{font-family:KaTeX_Main}.katex .textsf{font-family:KaTeX_SansSerif}.katex .texttt{font-family:KaTeX_Typewriter}.katex .mathnormal{font-family:KaTeX_Math;font-style:italic}.katex .mathit{font-family:KaTeX_Main;font-style:italic}.katex .mathrm{font-style:normal}.katex .mathbf{font-family:KaTeX_Main;font-weight:700}.katex .boldsymbol{font-family:KaTeX_Math;font-style:italic;font-weight:700}.katex .amsrm,.katex .mathbb,.katex .textbb{font-family:KaTeX_AMS}.katex .mathcal{font-family:KaTeX_Caligraphic}.katex .mathfrak,.katex .textfrak{font-family:KaTeX_Fraktur}.katex .mathtt{font-family:KaTeX_Typewriter}.katex .mathscr,.katex .textscr{font-family:KaTeX_Script}.katex .mathsf,.katex .textsf{font-family:KaTeX_SansSerif}.katex .mathboldsf,.katex .textboldsf{font-family:KaTeX_SansSerif;font-weight:700}.katex .mathitsf,.katex .textitsf{font-family:KaTeX_SansSerif;font-style:italic}.katex .mainrm{font-family:KaTeX_Main;font-style:normal}.katex .vlist-t{border-collapse:collapse;display:inline-table;table-layout:fixed}.katex .vlist-r{display:table-row}.katex .vlist{display:table-cell;position:relative;vertical-align:bottom}.katex .vlist>span{display:block;height:0;position:relative}.katex .vlist>span>span{display:inline-block}.katex .vlist>span>.pstrut{overflow:hidden;width:0}.katex .vlist-t2{margin-right:-2px}.katex .vlist-s{display:table-cell;font-size:1px;min-width:2px;vertical-align:bottom;width:2px}.katex .vbox{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-box-align:baseline;align-items:baseline;display:-webkit-inline-box;display:inline-flex;flex-direction:column}.katex .hbox{width:100%}.katex .hbox,.katex .thinbox{-webkit-box-orient:horizontal;-webkit-box-direction:normal;display:-webkit-inline-box;display:inline-flex;flex-direction:row}.katex .thinbox{max-width:0;width:0}.katex .msupsub{text-align:left}.katex .mfrac>span>span{text-align:center}.katex .mfrac .frac-line{border-bottom-style:solid;display:inline-block;width:100%}.katex .hdashline,.katex .hline,.katex .mfrac .frac-line,.katex .overline .overline-line,.katex .rule,.katex .underline .underline-line{min-height:1px}.katex .mspace{display:inline-block}.katex .clap,.katex .llap,.katex .rlap{position:relative;width:0}.katex .clap>.inner,.katex .llap>.inner,.katex .rlap>.inner{position:absolute}.katex .clap>.fix,.katex .llap>.fix,.katex .rlap>.fix{display:inline-block}.katex .llap>.inner{right:0}.katex .clap>.inner,.katex .rlap>.inner{left:0}.katex .clap>.inner>span{margin-left:-50%;margin-right:50%}.katex .rule{border:0 solid;display:inline-block;position:relative}.katex .hline,.katex .overline .overline-line,.katex .underline .underline-line{border-bottom-style:solid;display:inline-block;width:100%}.katex .hdashline{border-bottom-style:dashed;display:inline-block;width:100%}.katex .sqrt>.root{margin-left:.27777778em;margin-right:-.55555556em}.katex .fontsize-ensurer.reset-size1.size1,.katex .sizing.reset-size1.size1{font-size:1em}.katex .fontsize-ensurer.reset-size1.size2,.katex .sizing.reset-size1.size2{font-size:1.2em}.katex .fontsize-ensurer.reset-size1.size3,.katex .sizing.reset-size1.size3{font-size:1.4em}.katex .fontsize-ensurer.reset-size1.size4,.katex .sizing.reset-size1.size4{font-size:1.6em}.katex .fontsize-ensurer.reset-size1.size5,.katex .sizing.reset-size1.size5{font-size:1.8em}.katex .fontsize-ensurer.reset-size1.size6,.katex .sizing.reset-size1.size6{font-size:2em}.katex .fontsize-ensurer.reset-size1.size7,.katex .sizing.reset-size1.size7{font-size:2.4em}.katex .fontsize-ensurer.reset-size1.size8,.katex .sizing.reset-size1.size8{font-size:2.88em}.katex .fontsize-ensurer.reset-size1.size9,.katex .sizing.reset-size1.size9{font-size:3.456em}.katex .fontsize-ensurer.reset-size1.size10,.katex .sizing.reset-size1.size10{font-size:4.148em}.katex .fontsize-ensurer.reset-size1.size11,.katex .sizing.reset-size1.size11{font-size:4.976em}.katex .fontsize-ensurer.reset-size2.size1,.katex .sizing.reset-size2.size1{font-size:.83333333em}.katex .fontsize-ensurer.reset-size2.size2,.katex .sizing.reset-size2.size2{font-size:1em}.katex .fontsize-ensurer.reset-size2.size3,.katex .sizing.reset-size2.size3{font-size:1.16666667em}.katex .fontsize-ensurer.reset-size2.size4,.katex .sizing.reset-size2.size4{font-size:1.33333333em}.katex .fontsize-ensurer.reset-size2.size5,.katex .sizing.reset-size2.size5{font-size:1.5em}.katex .fontsize-ensurer.reset-size2.size6,.katex .sizing.reset-size2.size6{font-size:1.66666667em}.katex .fontsize-ensurer.reset-size2.size7,.katex .sizing.reset-size2.size7{font-size:2em}.katex .fontsize-ensurer.reset-size2.size8,.katex .sizing.reset-size2.size8{font-size:2.4em}.katex .fontsize-ensurer.reset-size2.size9,.katex .sizing.reset-size2.size9{font-size:2.88em}.katex .fontsize-ensurer.reset-size2.size10,.katex .sizing.reset-size2.size10{font-size:3.45666667em}.katex .fontsize-ensurer.reset-size2.size11,.katex .sizing.reset-size2.size11{font-size:4.14666667em}.katex .fontsize-ensurer.reset-size3.size1,.katex .sizing.reset-size3.size1{font-size:.71428571em}.katex .fontsize-ensurer.reset-size3.size2,.katex .sizing.reset-size3.size2{font-size:.85714286em}.katex .fontsize-ensurer.reset-size3.size3,.katex .sizing.reset-size3.size3{font-size:1em}.katex .fontsize-ensurer.reset-size3.size4,.katex .sizing.reset-size3.size4{font-size:1.14285714em}.katex .fontsize-ensurer.reset-size3.size5,.katex .sizing.reset-size3.size5{font-size:1.28571429em}.katex .fontsize-ensurer.reset-size3.size6,.katex .sizing.reset-size3.size6{font-size:1.42857143em}.katex .fontsize-ensurer.reset-size3.size7,.katex .sizing.reset-size3.size7{font-size:1.71428571em}.katex .fontsize-ensurer.reset-size3.size8,.katex .sizing.reset-size3.size8{font-size:2.05714286em}.katex .fontsize-ensurer.reset-size3.size9,.katex .sizing.reset-size3.size9{font-size:2.46857143em}.katex .fontsize-ensurer.reset-size3.size10,.katex .sizing.reset-size3.size10{font-size:2.96285714em}.katex .fontsize-ensurer.reset-size3.size11,.katex .sizing.reset-size3.size11{font-size:3.55428571em}.katex .fontsize-ensurer.reset-size4.size1,.katex .sizing.reset-size4.size1{font-size:.625em}.katex .fontsize-ensurer.reset-size4.size2,.katex .sizing.reset-size4.size2{font-size:.75em}.katex .fontsize-ensurer.reset-size4.size3,.katex .sizing.reset-size4.size3{font-size:.875em}.katex .fontsize-ensurer.reset-size4.size4,.katex .sizing.reset-size4.size4{font-size:1em}.katex .fontsize-ensurer.reset-size4.size5,.katex .sizing.reset-size4.size5{font-size:1.125em}.katex .fontsize-ensurer.reset-size4.size6,.katex .sizing.reset-size4.size6{font-size:1.25em}.katex .fontsize-ensurer.reset-size4.size7,.katex .sizing.reset-size4.size7{font-size:1.5em}.katex .fontsize-ensurer.reset-size4.size8,.katex .sizing.reset-size4.size8{font-size:1.8em}.katex .fontsize-ensurer.reset-size4.size9,.katex .sizing.reset-size4.size9{font-size:2.16em}.katex .fontsize-ensurer.reset-size4.size10,.katex .sizing.reset-size4.size10{font-size:2.5925em}.katex .fontsize-ensurer.reset-size4.size11,.katex .sizing.reset-size4.size11{font-size:3.11em}.katex .fontsize-ensurer.reset-size5.size1,.katex .sizing.reset-size5.size1{font-size:.55555556em}.katex .fontsize-ensurer.reset-size5.size2,.katex .sizing.reset-size5.size2{font-size:.66666667em}.katex .fontsize-ensurer.reset-size5.size3,.katex .sizing.reset-size5.size3{font-size:.77777778em}.katex .fontsize-ensurer.reset-size5.size4,.katex .sizing.reset-size5.size4{font-size:.88888889em}.katex .fontsize-ensurer.reset-size5.size5,.katex .sizing.reset-size5.size5{font-size:1em}.katex .fontsize-ensurer.reset-size5.size6,.katex .sizing.reset-size5.size6{font-size:1.11111111em}.katex .fontsize-ensurer.reset-size5.size7,.katex .sizing.reset-size5.size7{font-size:1.33333333em}.katex .fontsize-ensurer.reset-size5.size8,.katex .sizing.reset-size5.size8{font-size:1.6em}.katex .fontsize-ensurer.reset-size5.size9,.katex .sizing.reset-size5.size9{font-size:1.92em}.katex .fontsize-ensurer.reset-size5.size10,.katex .sizing.reset-size5.size10{font-size:2.30444444em}.katex .fontsize-ensurer.reset-size5.size11,.katex .sizing.reset-size5.size11{font-size:2.76444444em}.katex .fontsize-ensurer.reset-size6.size1,.katex .sizing.reset-size6.size1{font-size:.5em}.katex .fontsize-ensurer.reset-size6.size2,.katex .sizing.reset-size6.size2{font-size:.6em}.katex .fontsize-ensurer.reset-size6.size3,.katex .sizing.reset-size6.size3{font-size:.7em}.katex .fontsize-ensurer.reset-size6.size4,.katex .sizing.reset-size6.size4{font-size:.8em}.katex .fontsize-ensurer.reset-size6.size5,.katex .sizing.reset-size6.size5{font-size:.9em}.katex .fontsize-ensurer.reset-size6.size6,.katex .sizing.reset-size6.size6{font-size:1em}.katex .fontsize-ensurer.reset-size6.size7,.katex .sizing.reset-size6.size7{font-size:1.2em}.katex .fontsize-ensurer.reset-size6.size8,.katex .sizing.reset-size6.size8{font-size:1.44em}.katex .fontsize-ensurer.reset-size6.size9,.katex .sizing.reset-size6.size9{font-size:1.728em}.katex .fontsize-ensurer.reset-size6.size10,.katex .sizing.reset-size6.size10{font-size:2.074em}.katex .fontsize-ensurer.reset-size6.size11,.katex .sizing.reset-size6.size11{font-size:2.488em}.katex .fontsize-ensurer.reset-size7.size1,.katex .sizing.reset-size7.size1{font-size:.41666667em}.katex .fontsize-ensurer.reset-size7.size2,.katex .sizing.reset-size7.size2{font-size:.5em}.katex .fontsize-ensurer.reset-size7.size3,.katex .sizing.reset-size7.size3{font-size:.58333333em}.katex .fontsize-ensurer.reset-size7.size4,.katex .sizing.reset-size7.size4{font-size:.66666667em}.katex .fontsize-ensurer.reset-size7.size5,.katex .sizing.reset-size7.size5{font-size:.75em}.katex .fontsize-ensurer.reset-size7.size6,.katex .sizing.reset-size7.size6{font-size:.83333333em}.katex .fontsize-ensurer.reset-size7.size7,.katex .sizing.reset-size7.size7{font-size:1em}.katex .fontsize-ensurer.reset-size7.size8,.katex .sizing.reset-size7.size8{font-size:1.2em}.katex .fontsize-ensurer.reset-size7.size9,.katex .sizing.reset-size7.size9{font-size:1.44em}.katex .fontsize-ensurer.reset-size7.size10,.katex .sizing.reset-size7.size10{font-size:1.72833333em}.katex .fontsize-ensurer.reset-size7.size11,.katex .sizing.reset-size7.size11{font-size:2.07333333em}.katex .fontsize-ensurer.reset-size8.size1,.katex .sizing.reset-size8.size1{font-size:.34722222em}.katex .fontsize-ensurer.reset-size8.size2,.katex .sizing.reset-size8.size2{font-size:.41666667em}.katex .fontsize-ensurer.reset-size8.size3,.katex .sizing.reset-size8.size3{font-size:.48611111em}.katex .fontsize-ensurer.reset-size8.size4,.katex .sizing.reset-size8.size4{font-size:.55555556em}.katex .fontsize-ensurer.reset-size8.size5,.katex .sizing.reset-size8.size5{font-size:.625em}.katex .fontsize-ensurer.reset-size8.size6,.katex .sizing.reset-size8.size6{font-size:.69444444em}.katex .fontsize-ensurer.reset-size8.size7,.katex .sizing.reset-size8.size7{font-size:.83333333em}.katex .fontsize-ensurer.reset-size8.size8,.katex .sizing.reset-size8.size8{font-size:1em}.katex .fontsize-ensurer.reset-size8.size9,.katex .sizing.reset-size8.size9{font-size:1.2em}.katex .fontsize-ensurer.reset-size8.size10,.katex .sizing.reset-size8.size10{font-size:1.44027778em}.katex .fontsize-ensurer.reset-size8.size11,.katex .sizing.reset-size8.size11{font-size:1.72777778em}.katex .fontsize-ensurer.reset-size9.size1,.katex .sizing.reset-size9.size1{font-size:.28935185em}.katex .fontsize-ensurer.reset-size9.size2,.katex .sizing.reset-size9.size2{font-size:.34722222em}.katex .fontsize-ensurer.reset-size9.size3,.katex .sizing.reset-size9.size3{font-size:.40509259em}.katex .fontsize-ensurer.reset-size9.size4,.katex .sizing.reset-size9.size4{font-size:.46296296em}.katex .fontsize-ensurer.reset-size9.size5,.katex .sizing.reset-size9.size5{font-size:.52083333em}.katex .fontsize-ensurer.reset-size9.size6,.katex .sizing.reset-size9.size6{font-size:.5787037em}.katex .fontsize-ensurer.reset-size9.size7,.katex .sizing.reset-size9.size7{font-size:.69444444em}.katex .fontsize-ensurer.reset-size9.size8,.katex .sizing.reset-size9.size8{font-size:.83333333em}.katex .fontsize-ensurer.reset-size9.size9,.katex .sizing.reset-size9.size9{font-size:1em}.katex .fontsize-ensurer.reset-size9.size10,.katex .sizing.reset-size9.size10{font-size:1.20023148em}.katex .fontsize-ensurer.reset-size9.size11,.katex .sizing.reset-size9.size11{font-size:1.43981481em}.katex .fontsize-ensurer.reset-size10.size1,.katex .sizing.reset-size10.size1{font-size:.24108004em}.katex .fontsize-ensurer.reset-size10.size2,.katex .sizing.reset-size10.size2{font-size:.28929605em}.katex .fontsize-ensurer.reset-size10.size3,.katex .sizing.reset-size10.size3{font-size:.33751205em}.katex .fontsize-ensurer.reset-size10.size4,.katex .sizing.reset-size10.size4{font-size:.38572806em}.katex .fontsize-ensurer.reset-size10.size5,.katex .sizing.reset-size10.size5{font-size:.43394407em}.katex .fontsize-ensurer.reset-size10.size6,.katex .sizing.reset-size10.size6{font-size:.48216008em}.katex .fontsize-ensurer.reset-size10.size7,.katex .sizing.reset-size10.size7{font-size:.57859209em}.katex .fontsize-ensurer.reset-size10.size8,.katex .sizing.reset-size10.size8{font-size:.69431051em}.katex .fontsize-ensurer.reset-size10.size9,.katex .sizing.reset-size10.size9{font-size:.83317261em}.katex .fontsize-ensurer.reset-size10.size10,.katex .sizing.reset-size10.size10{font-size:1em}.katex .fontsize-ensurer.reset-size10.size11,.katex .sizing.reset-size10.size11{font-size:1.19961427em}.katex .fontsize-ensurer.reset-size11.size1,.katex .sizing.reset-size11.size1{font-size:.20096463em}.katex .fontsize-ensurer.reset-size11.size2,.katex .sizing.reset-size11.size2{font-size:.24115756em}.katex .fontsize-ensurer.reset-size11.size3,.katex .sizing.reset-size11.size3{font-size:.28135048em}.katex .fontsize-ensurer.reset-size11.size4,.katex .sizing.reset-size11.size4{font-size:.32154341em}.katex .fontsize-ensurer.reset-size11.size5,.katex .sizing.reset-size11.size5{font-size:.36173633em}.katex .fontsize-ensurer.reset-size11.size6,.katex .sizing.reset-size11.size6{font-size:.40192926em}.katex .fontsize-ensurer.reset-size11.size7,.katex .sizing.reset-size11.size7{font-size:.48231511em}.katex .fontsize-ensurer.reset-size11.size8,.katex .sizing.reset-size11.size8{font-size:.57877814em}.katex .fontsize-ensurer.reset-size11.size9,.katex .sizing.reset-size11.size9{font-size:.69453376em}.katex .fontsize-ensurer.reset-size11.size10,.katex .sizing.reset-size11.size10{font-size:.83360129em}.katex .fontsize-ensurer.reset-size11.size11,.katex .sizing.reset-size11.size11{font-size:1em}.katex .delimsizing.size1{font-family:KaTeX_Size1}.katex .delimsizing.size2{font-family:KaTeX_Size2}.katex .delimsizing.size3{font-family:KaTeX_Size3}.katex .delimsizing.size4{font-family:KaTeX_Size4}.katex .delimsizing.mult .delim-size1>span{font-family:KaTeX_Size1}.katex .delimsizing.mult .delim-size4>span{font-family:KaTeX_Size4}.katex .nulldelimiter{display:inline-block;width:.12em}.katex .delimcenter,.katex .op-symbol{position:relative}.katex .op-symbol.small-op{font-family:KaTeX_Size1}.katex .op-symbol.large-op{font-family:KaTeX_Size2}.katex .accent>.vlist-t,.katex .op-limits>.vlist-t{text-align:center}.katex .accent .accent-body{position:relative}.katex .accent .accent-body:not(.accent-full){width:0}.katex .overlay{display:block}.katex .mtable .vertical-separator{display:inline-block;min-width:1px}.katex .mtable .arraycolsep{display:inline-block}.katex .mtable .col-align-c>.vlist-t{text-align:center}.katex .mtable .col-align-l>.vlist-t{text-align:left}.katex .mtable .col-align-r>.vlist-t{text-align:right}.katex .svg-align{text-align:left}.katex svg{fill:currentColor;stroke:currentColor;fill-rule:nonzero;fill-opacity:1;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;display:block;height:inherit;position:absolute;width:100%}.katex svg path{stroke:none}.katex img{border-style:none;max-height:none;max-width:none;min-height:0;min-width:0}.katex .stretchy{display:block;overflow:hidden;position:relative;width:100%}.katex .stretchy:after,.katex .stretchy:before{content:\"\"}.katex .hide-tail{overflow:hidden;position:relative;width:100%}.katex .halfarrow-left{left:0;overflow:hidden;position:absolute;width:50.2%}.katex .halfarrow-right{overflow:hidden;position:absolute;right:0;width:50.2%}.katex .brace-left{left:0;overflow:hidden;position:absolute;width:25.1%}.katex .brace-center{left:25%;overflow:hidden;position:absolute;width:50%}.katex .brace-right{overflow:hidden;position:absolute;right:0;width:25.1%}.katex .x-arrow-pad{padding:0 .5em}.katex .cd-arrow-pad{padding:0 .55556em 0 .27778em}.katex .mover,.katex .munder,.katex .x-arrow{text-align:center}.katex .boxpad{padding:0 .3em}.katex .fbox,.katex .fcolorbox{border:.04em solid;box-sizing:border-box}.katex .cancel-pad{padding:0 .2em}.katex .cancel-lap{margin-left:-.2em;margin-right:-.2em}.katex .sout{border-bottom-style:solid;border-bottom-width:.08em}.katex .angl{border-right:.049em solid;border-top:.049em solid;box-sizing:border-content;margin-right:.03889em}.katex .anglpad{padding:0 .03889em}.katex .eqn-num:before{content:\"(\" counter(katexEqnNo) \")\";counter-increment:katexEqnNo}.katex .mml-eqn-num:before{content:\"(\" counter(mmlEqnNo) \")\";counter-increment:mmlEqnNo}.katex .mtr-glue{width:50%}.katex .cd-vert-arrow{display:inline-block;position:relative}.katex .cd-label-left{display:inline-block;position:absolute;right:-webkit-calc(50% + .3em);right:calc(50% + .3em);text-align:left}.katex .cd-label-right{display:inline-block;left:-webkit-calc(50% + .3em);left:calc(50% + .3em);position:absolute;text-align:right}.katex-display{display:block;margin:1em 0;text-align:center}.katex-display>.katex{display:block;text-align:center;white-space:nowrap}.katex-display>.katex>.katex-html{display:block;position:relative}.katex-display>.katex>.katex-html>.tag{position:absolute;right:0}.katex-display.leqno>.katex>.katex-html>.tag{left:0;right:auto}.katex-display.fleqn>.katex{padding-left:2em;text-align:left}body{counter-reset:katexEqnNo mmlEqnNo}\n","source":"html/nest/css/katex.min.css","raw":"@font-face{font-family:KaTeX_AMS;font-style:normal;font-weight:400;src:url(fonts/KaTeX_AMS-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_AMS-Regular.woff) format(\"woff\"),url(fonts/KaTeX_AMS-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Caligraphic;font-style:normal;font-weight:700;src:url(fonts/KaTeX_Caligraphic-Bold.woff2) format(\"woff2\"),url(fonts/KaTeX_Caligraphic-Bold.woff) format(\"woff\"),url(fonts/KaTeX_Caligraphic-Bold.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Caligraphic;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Caligraphic-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Caligraphic-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Caligraphic-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Fraktur;font-style:normal;font-weight:700;src:url(fonts/KaTeX_Fraktur-Bold.woff2) format(\"woff2\"),url(fonts/KaTeX_Fraktur-Bold.woff) format(\"woff\"),url(fonts/KaTeX_Fraktur-Bold.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Fraktur;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Fraktur-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Fraktur-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Fraktur-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Main;font-style:normal;font-weight:700;src:url(fonts/KaTeX_Main-Bold.woff2) format(\"woff2\"),url(fonts/KaTeX_Main-Bold.woff) format(\"woff\"),url(fonts/KaTeX_Main-Bold.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Main;font-style:italic;font-weight:700;src:url(fonts/KaTeX_Main-BoldItalic.woff2) format(\"woff2\"),url(fonts/KaTeX_Main-BoldItalic.woff) format(\"woff\"),url(fonts/KaTeX_Main-BoldItalic.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Main;font-style:italic;font-weight:400;src:url(fonts/KaTeX_Main-Italic.woff2) format(\"woff2\"),url(fonts/KaTeX_Main-Italic.woff) format(\"woff\"),url(fonts/KaTeX_Main-Italic.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Main;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Main-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Main-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Main-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Math;font-style:italic;font-weight:700;src:url(fonts/KaTeX_Math-BoldItalic.woff2) format(\"woff2\"),url(fonts/KaTeX_Math-BoldItalic.woff) format(\"woff\"),url(fonts/KaTeX_Math-BoldItalic.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Math;font-style:italic;font-weight:400;src:url(fonts/KaTeX_Math-Italic.woff2) format(\"woff2\"),url(fonts/KaTeX_Math-Italic.woff) format(\"woff\"),url(fonts/KaTeX_Math-Italic.ttf) format(\"truetype\")}@font-face{font-family:\"KaTeX_SansSerif\";font-style:normal;font-weight:700;src:url(fonts/KaTeX_SansSerif-Bold.woff2) format(\"woff2\"),url(fonts/KaTeX_SansSerif-Bold.woff) format(\"woff\"),url(fonts/KaTeX_SansSerif-Bold.ttf) format(\"truetype\")}@font-face{font-family:\"KaTeX_SansSerif\";font-style:italic;font-weight:400;src:url(fonts/KaTeX_SansSerif-Italic.woff2) format(\"woff2\"),url(fonts/KaTeX_SansSerif-Italic.woff) format(\"woff\"),url(fonts/KaTeX_SansSerif-Italic.ttf) format(\"truetype\")}@font-face{font-family:\"KaTeX_SansSerif\";font-style:normal;font-weight:400;src:url(fonts/KaTeX_SansSerif-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_SansSerif-Regular.woff) format(\"woff\"),url(fonts/KaTeX_SansSerif-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Script;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Script-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Script-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Script-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Size1;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Size1-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Size1-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Size1-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Size2;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Size2-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Size2-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Size2-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Size3;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Size3-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Size3-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Size3-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Size4;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Size4-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Size4-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Size4-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Typewriter;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Typewriter-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Typewriter-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Typewriter-Regular.ttf) format(\"truetype\")}.katex{font:normal 1.21em KaTeX_Main,Times New Roman,serif;line-height:1.2;text-indent:0;text-rendering:auto}.katex *{-ms-high-contrast-adjust:none!important;border-color:currentColor}.katex .katex-version:after{content:\"0.13.11\"}.katex .katex-mathml{clip:rect(1px,1px,1px,1px);border:0;height:1px;overflow:hidden;padding:0;position:absolute;width:1px}.katex .katex-html>.newline{display:block}.katex .base{position:relative;white-space:nowrap;width:-webkit-min-content;width:-moz-min-content;width:min-content}.katex .base,.katex .strut{display:inline-block}.katex .textbf{font-weight:700}.katex .textit{font-style:italic}.katex .textrm{font-family:KaTeX_Main}.katex .textsf{font-family:KaTeX_SansSerif}.katex .texttt{font-family:KaTeX_Typewriter}.katex .mathnormal{font-family:KaTeX_Math;font-style:italic}.katex .mathit{font-family:KaTeX_Main;font-style:italic}.katex .mathrm{font-style:normal}.katex .mathbf{font-family:KaTeX_Main;font-weight:700}.katex .boldsymbol{font-family:KaTeX_Math;font-style:italic;font-weight:700}.katex .amsrm,.katex .mathbb,.katex .textbb{font-family:KaTeX_AMS}.katex .mathcal{font-family:KaTeX_Caligraphic}.katex .mathfrak,.katex .textfrak{font-family:KaTeX_Fraktur}.katex .mathtt{font-family:KaTeX_Typewriter}.katex .mathscr,.katex .textscr{font-family:KaTeX_Script}.katex .mathsf,.katex .textsf{font-family:KaTeX_SansSerif}.katex .mathboldsf,.katex .textboldsf{font-family:KaTeX_SansSerif;font-weight:700}.katex .mathitsf,.katex .textitsf{font-family:KaTeX_SansSerif;font-style:italic}.katex .mainrm{font-family:KaTeX_Main;font-style:normal}.katex .vlist-t{border-collapse:collapse;display:inline-table;table-layout:fixed}.katex .vlist-r{display:table-row}.katex .vlist{display:table-cell;position:relative;vertical-align:bottom}.katex .vlist>span{display:block;height:0;position:relative}.katex .vlist>span>span{display:inline-block}.katex .vlist>span>.pstrut{overflow:hidden;width:0}.katex .vlist-t2{margin-right:-2px}.katex .vlist-s{display:table-cell;font-size:1px;min-width:2px;vertical-align:bottom;width:2px}.katex .vbox{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-box-align:baseline;align-items:baseline;display:-webkit-inline-box;display:inline-flex;flex-direction:column}.katex .hbox{width:100%}.katex .hbox,.katex .thinbox{-webkit-box-orient:horizontal;-webkit-box-direction:normal;display:-webkit-inline-box;display:inline-flex;flex-direction:row}.katex .thinbox{max-width:0;width:0}.katex .msupsub{text-align:left}.katex .mfrac>span>span{text-align:center}.katex .mfrac .frac-line{border-bottom-style:solid;display:inline-block;width:100%}.katex .hdashline,.katex .hline,.katex .mfrac .frac-line,.katex .overline .overline-line,.katex .rule,.katex .underline .underline-line{min-height:1px}.katex .mspace{display:inline-block}.katex .clap,.katex .llap,.katex .rlap{position:relative;width:0}.katex .clap>.inner,.katex .llap>.inner,.katex .rlap>.inner{position:absolute}.katex .clap>.fix,.katex .llap>.fix,.katex .rlap>.fix{display:inline-block}.katex .llap>.inner{right:0}.katex .clap>.inner,.katex .rlap>.inner{left:0}.katex .clap>.inner>span{margin-left:-50%;margin-right:50%}.katex .rule{border:0 solid;display:inline-block;position:relative}.katex .hline,.katex .overline .overline-line,.katex .underline .underline-line{border-bottom-style:solid;display:inline-block;width:100%}.katex .hdashline{border-bottom-style:dashed;display:inline-block;width:100%}.katex .sqrt>.root{margin-left:.27777778em;margin-right:-.55555556em}.katex .fontsize-ensurer.reset-size1.size1,.katex .sizing.reset-size1.size1{font-size:1em}.katex .fontsize-ensurer.reset-size1.size2,.katex .sizing.reset-size1.size2{font-size:1.2em}.katex .fontsize-ensurer.reset-size1.size3,.katex .sizing.reset-size1.size3{font-size:1.4em}.katex .fontsize-ensurer.reset-size1.size4,.katex .sizing.reset-size1.size4{font-size:1.6em}.katex .fontsize-ensurer.reset-size1.size5,.katex .sizing.reset-size1.size5{font-size:1.8em}.katex .fontsize-ensurer.reset-size1.size6,.katex .sizing.reset-size1.size6{font-size:2em}.katex .fontsize-ensurer.reset-size1.size7,.katex .sizing.reset-size1.size7{font-size:2.4em}.katex .fontsize-ensurer.reset-size1.size8,.katex .sizing.reset-size1.size8{font-size:2.88em}.katex .fontsize-ensurer.reset-size1.size9,.katex .sizing.reset-size1.size9{font-size:3.456em}.katex .fontsize-ensurer.reset-size1.size10,.katex .sizing.reset-size1.size10{font-size:4.148em}.katex .fontsize-ensurer.reset-size1.size11,.katex .sizing.reset-size1.size11{font-size:4.976em}.katex .fontsize-ensurer.reset-size2.size1,.katex .sizing.reset-size2.size1{font-size:.83333333em}.katex .fontsize-ensurer.reset-size2.size2,.katex .sizing.reset-size2.size2{font-size:1em}.katex .fontsize-ensurer.reset-size2.size3,.katex .sizing.reset-size2.size3{font-size:1.16666667em}.katex .fontsize-ensurer.reset-size2.size4,.katex .sizing.reset-size2.size4{font-size:1.33333333em}.katex .fontsize-ensurer.reset-size2.size5,.katex .sizing.reset-size2.size5{font-size:1.5em}.katex .fontsize-ensurer.reset-size2.size6,.katex .sizing.reset-size2.size6{font-size:1.66666667em}.katex .fontsize-ensurer.reset-size2.size7,.katex .sizing.reset-size2.size7{font-size:2em}.katex .fontsize-ensurer.reset-size2.size8,.katex .sizing.reset-size2.size8{font-size:2.4em}.katex .fontsize-ensurer.reset-size2.size9,.katex .sizing.reset-size2.size9{font-size:2.88em}.katex .fontsize-ensurer.reset-size2.size10,.katex .sizing.reset-size2.size10{font-size:3.45666667em}.katex .fontsize-ensurer.reset-size2.size11,.katex .sizing.reset-size2.size11{font-size:4.14666667em}.katex .fontsize-ensurer.reset-size3.size1,.katex .sizing.reset-size3.size1{font-size:.71428571em}.katex .fontsize-ensurer.reset-size3.size2,.katex .sizing.reset-size3.size2{font-size:.85714286em}.katex .fontsize-ensurer.reset-size3.size3,.katex .sizing.reset-size3.size3{font-size:1em}.katex .fontsize-ensurer.reset-size3.size4,.katex .sizing.reset-size3.size4{font-size:1.14285714em}.katex .fontsize-ensurer.reset-size3.size5,.katex .sizing.reset-size3.size5{font-size:1.28571429em}.katex .fontsize-ensurer.reset-size3.size6,.katex .sizing.reset-size3.size6{font-size:1.42857143em}.katex .fontsize-ensurer.reset-size3.size7,.katex .sizing.reset-size3.size7{font-size:1.71428571em}.katex .fontsize-ensurer.reset-size3.size8,.katex .sizing.reset-size3.size8{font-size:2.05714286em}.katex .fontsize-ensurer.reset-size3.size9,.katex .sizing.reset-size3.size9{font-size:2.46857143em}.katex .fontsize-ensurer.reset-size3.size10,.katex .sizing.reset-size3.size10{font-size:2.96285714em}.katex .fontsize-ensurer.reset-size3.size11,.katex .sizing.reset-size3.size11{font-size:3.55428571em}.katex .fontsize-ensurer.reset-size4.size1,.katex .sizing.reset-size4.size1{font-size:.625em}.katex .fontsize-ensurer.reset-size4.size2,.katex .sizing.reset-size4.size2{font-size:.75em}.katex .fontsize-ensurer.reset-size4.size3,.katex .sizing.reset-size4.size3{font-size:.875em}.katex .fontsize-ensurer.reset-size4.size4,.katex .sizing.reset-size4.size4{font-size:1em}.katex .fontsize-ensurer.reset-size4.size5,.katex .sizing.reset-size4.size5{font-size:1.125em}.katex .fontsize-ensurer.reset-size4.size6,.katex .sizing.reset-size4.size6{font-size:1.25em}.katex .fontsize-ensurer.reset-size4.size7,.katex .sizing.reset-size4.size7{font-size:1.5em}.katex .fontsize-ensurer.reset-size4.size8,.katex .sizing.reset-size4.size8{font-size:1.8em}.katex .fontsize-ensurer.reset-size4.size9,.katex .sizing.reset-size4.size9{font-size:2.16em}.katex .fontsize-ensurer.reset-size4.size10,.katex .sizing.reset-size4.size10{font-size:2.5925em}.katex .fontsize-ensurer.reset-size4.size11,.katex .sizing.reset-size4.size11{font-size:3.11em}.katex .fontsize-ensurer.reset-size5.size1,.katex .sizing.reset-size5.size1{font-size:.55555556em}.katex .fontsize-ensurer.reset-size5.size2,.katex .sizing.reset-size5.size2{font-size:.66666667em}.katex .fontsize-ensurer.reset-size5.size3,.katex .sizing.reset-size5.size3{font-size:.77777778em}.katex .fontsize-ensurer.reset-size5.size4,.katex .sizing.reset-size5.size4{font-size:.88888889em}.katex .fontsize-ensurer.reset-size5.size5,.katex .sizing.reset-size5.size5{font-size:1em}.katex .fontsize-ensurer.reset-size5.size6,.katex .sizing.reset-size5.size6{font-size:1.11111111em}.katex .fontsize-ensurer.reset-size5.size7,.katex .sizing.reset-size5.size7{font-size:1.33333333em}.katex .fontsize-ensurer.reset-size5.size8,.katex .sizing.reset-size5.size8{font-size:1.6em}.katex .fontsize-ensurer.reset-size5.size9,.katex .sizing.reset-size5.size9{font-size:1.92em}.katex .fontsize-ensurer.reset-size5.size10,.katex .sizing.reset-size5.size10{font-size:2.30444444em}.katex .fontsize-ensurer.reset-size5.size11,.katex .sizing.reset-size5.size11{font-size:2.76444444em}.katex .fontsize-ensurer.reset-size6.size1,.katex .sizing.reset-size6.size1{font-size:.5em}.katex .fontsize-ensurer.reset-size6.size2,.katex .sizing.reset-size6.size2{font-size:.6em}.katex .fontsize-ensurer.reset-size6.size3,.katex .sizing.reset-size6.size3{font-size:.7em}.katex .fontsize-ensurer.reset-size6.size4,.katex .sizing.reset-size6.size4{font-size:.8em}.katex .fontsize-ensurer.reset-size6.size5,.katex .sizing.reset-size6.size5{font-size:.9em}.katex .fontsize-ensurer.reset-size6.size6,.katex .sizing.reset-size6.size6{font-size:1em}.katex .fontsize-ensurer.reset-size6.size7,.katex .sizing.reset-size6.size7{font-size:1.2em}.katex .fontsize-ensurer.reset-size6.size8,.katex .sizing.reset-size6.size8{font-size:1.44em}.katex .fontsize-ensurer.reset-size6.size9,.katex .sizing.reset-size6.size9{font-size:1.728em}.katex .fontsize-ensurer.reset-size6.size10,.katex .sizing.reset-size6.size10{font-size:2.074em}.katex .fontsize-ensurer.reset-size6.size11,.katex .sizing.reset-size6.size11{font-size:2.488em}.katex .fontsize-ensurer.reset-size7.size1,.katex .sizing.reset-size7.size1{font-size:.41666667em}.katex .fontsize-ensurer.reset-size7.size2,.katex .sizing.reset-size7.size2{font-size:.5em}.katex .fontsize-ensurer.reset-size7.size3,.katex .sizing.reset-size7.size3{font-size:.58333333em}.katex .fontsize-ensurer.reset-size7.size4,.katex .sizing.reset-size7.size4{font-size:.66666667em}.katex .fontsize-ensurer.reset-size7.size5,.katex .sizing.reset-size7.size5{font-size:.75em}.katex .fontsize-ensurer.reset-size7.size6,.katex .sizing.reset-size7.size6{font-size:.83333333em}.katex .fontsize-ensurer.reset-size7.size7,.katex .sizing.reset-size7.size7{font-size:1em}.katex .fontsize-ensurer.reset-size7.size8,.katex .sizing.reset-size7.size8{font-size:1.2em}.katex .fontsize-ensurer.reset-size7.size9,.katex .sizing.reset-size7.size9{font-size:1.44em}.katex .fontsize-ensurer.reset-size7.size10,.katex .sizing.reset-size7.size10{font-size:1.72833333em}.katex .fontsize-ensurer.reset-size7.size11,.katex .sizing.reset-size7.size11{font-size:2.07333333em}.katex .fontsize-ensurer.reset-size8.size1,.katex .sizing.reset-size8.size1{font-size:.34722222em}.katex .fontsize-ensurer.reset-size8.size2,.katex .sizing.reset-size8.size2{font-size:.41666667em}.katex .fontsize-ensurer.reset-size8.size3,.katex .sizing.reset-size8.size3{font-size:.48611111em}.katex .fontsize-ensurer.reset-size8.size4,.katex .sizing.reset-size8.size4{font-size:.55555556em}.katex .fontsize-ensurer.reset-size8.size5,.katex .sizing.reset-size8.size5{font-size:.625em}.katex .fontsize-ensurer.reset-size8.size6,.katex .sizing.reset-size8.size6{font-size:.69444444em}.katex .fontsize-ensurer.reset-size8.size7,.katex .sizing.reset-size8.size7{font-size:.83333333em}.katex .fontsize-ensurer.reset-size8.size8,.katex .sizing.reset-size8.size8{font-size:1em}.katex .fontsize-ensurer.reset-size8.size9,.katex .sizing.reset-size8.size9{font-size:1.2em}.katex .fontsize-ensurer.reset-size8.size10,.katex .sizing.reset-size8.size10{font-size:1.44027778em}.katex .fontsize-ensurer.reset-size8.size11,.katex .sizing.reset-size8.size11{font-size:1.72777778em}.katex .fontsize-ensurer.reset-size9.size1,.katex .sizing.reset-size9.size1{font-size:.28935185em}.katex .fontsize-ensurer.reset-size9.size2,.katex .sizing.reset-size9.size2{font-size:.34722222em}.katex .fontsize-ensurer.reset-size9.size3,.katex .sizing.reset-size9.size3{font-size:.40509259em}.katex .fontsize-ensurer.reset-size9.size4,.katex .sizing.reset-size9.size4{font-size:.46296296em}.katex .fontsize-ensurer.reset-size9.size5,.katex .sizing.reset-size9.size5{font-size:.52083333em}.katex .fontsize-ensurer.reset-size9.size6,.katex .sizing.reset-size9.size6{font-size:.5787037em}.katex .fontsize-ensurer.reset-size9.size7,.katex .sizing.reset-size9.size7{font-size:.69444444em}.katex .fontsize-ensurer.reset-size9.size8,.katex .sizing.reset-size9.size8{font-size:.83333333em}.katex .fontsize-ensurer.reset-size9.size9,.katex .sizing.reset-size9.size9{font-size:1em}.katex .fontsize-ensurer.reset-size9.size10,.katex .sizing.reset-size9.size10{font-size:1.20023148em}.katex .fontsize-ensurer.reset-size9.size11,.katex .sizing.reset-size9.size11{font-size:1.43981481em}.katex .fontsize-ensurer.reset-size10.size1,.katex .sizing.reset-size10.size1{font-size:.24108004em}.katex .fontsize-ensurer.reset-size10.size2,.katex .sizing.reset-size10.size2{font-size:.28929605em}.katex .fontsize-ensurer.reset-size10.size3,.katex .sizing.reset-size10.size3{font-size:.33751205em}.katex .fontsize-ensurer.reset-size10.size4,.katex .sizing.reset-size10.size4{font-size:.38572806em}.katex .fontsize-ensurer.reset-size10.size5,.katex .sizing.reset-size10.size5{font-size:.43394407em}.katex .fontsize-ensurer.reset-size10.size6,.katex .sizing.reset-size10.size6{font-size:.48216008em}.katex .fontsize-ensurer.reset-size10.size7,.katex .sizing.reset-size10.size7{font-size:.57859209em}.katex .fontsize-ensurer.reset-size10.size8,.katex .sizing.reset-size10.size8{font-size:.69431051em}.katex .fontsize-ensurer.reset-size10.size9,.katex .sizing.reset-size10.size9{font-size:.83317261em}.katex .fontsize-ensurer.reset-size10.size10,.katex .sizing.reset-size10.size10{font-size:1em}.katex .fontsize-ensurer.reset-size10.size11,.katex .sizing.reset-size10.size11{font-size:1.19961427em}.katex .fontsize-ensurer.reset-size11.size1,.katex .sizing.reset-size11.size1{font-size:.20096463em}.katex .fontsize-ensurer.reset-size11.size2,.katex .sizing.reset-size11.size2{font-size:.24115756em}.katex .fontsize-ensurer.reset-size11.size3,.katex .sizing.reset-size11.size3{font-size:.28135048em}.katex .fontsize-ensurer.reset-size11.size4,.katex .sizing.reset-size11.size4{font-size:.32154341em}.katex .fontsize-ensurer.reset-size11.size5,.katex .sizing.reset-size11.size5{font-size:.36173633em}.katex .fontsize-ensurer.reset-size11.size6,.katex .sizing.reset-size11.size6{font-size:.40192926em}.katex .fontsize-ensurer.reset-size11.size7,.katex .sizing.reset-size11.size7{font-size:.48231511em}.katex .fontsize-ensurer.reset-size11.size8,.katex .sizing.reset-size11.size8{font-size:.57877814em}.katex .fontsize-ensurer.reset-size11.size9,.katex .sizing.reset-size11.size9{font-size:.69453376em}.katex .fontsize-ensurer.reset-size11.size10,.katex .sizing.reset-size11.size10{font-size:.83360129em}.katex .fontsize-ensurer.reset-size11.size11,.katex .sizing.reset-size11.size11{font-size:1em}.katex .delimsizing.size1{font-family:KaTeX_Size1}.katex .delimsizing.size2{font-family:KaTeX_Size2}.katex .delimsizing.size3{font-family:KaTeX_Size3}.katex .delimsizing.size4{font-family:KaTeX_Size4}.katex .delimsizing.mult .delim-size1>span{font-family:KaTeX_Size1}.katex .delimsizing.mult .delim-size4>span{font-family:KaTeX_Size4}.katex .nulldelimiter{display:inline-block;width:.12em}.katex .delimcenter,.katex .op-symbol{position:relative}.katex .op-symbol.small-op{font-family:KaTeX_Size1}.katex .op-symbol.large-op{font-family:KaTeX_Size2}.katex .accent>.vlist-t,.katex .op-limits>.vlist-t{text-align:center}.katex .accent .accent-body{position:relative}.katex .accent .accent-body:not(.accent-full){width:0}.katex .overlay{display:block}.katex .mtable .vertical-separator{display:inline-block;min-width:1px}.katex .mtable .arraycolsep{display:inline-block}.katex .mtable .col-align-c>.vlist-t{text-align:center}.katex .mtable .col-align-l>.vlist-t{text-align:left}.katex .mtable .col-align-r>.vlist-t{text-align:right}.katex .svg-align{text-align:left}.katex svg{fill:currentColor;stroke:currentColor;fill-rule:nonzero;fill-opacity:1;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;display:block;height:inherit;position:absolute;width:100%}.katex svg path{stroke:none}.katex img{border-style:none;max-height:none;max-width:none;min-height:0;min-width:0}.katex .stretchy{display:block;overflow:hidden;position:relative;width:100%}.katex .stretchy:after,.katex .stretchy:before{content:\"\"}.katex .hide-tail{overflow:hidden;position:relative;width:100%}.katex .halfarrow-left{left:0;overflow:hidden;position:absolute;width:50.2%}.katex .halfarrow-right{overflow:hidden;position:absolute;right:0;width:50.2%}.katex .brace-left{left:0;overflow:hidden;position:absolute;width:25.1%}.katex .brace-center{left:25%;overflow:hidden;position:absolute;width:50%}.katex .brace-right{overflow:hidden;position:absolute;right:0;width:25.1%}.katex .x-arrow-pad{padding:0 .5em}.katex .cd-arrow-pad{padding:0 .55556em 0 .27778em}.katex .mover,.katex .munder,.katex .x-arrow{text-align:center}.katex .boxpad{padding:0 .3em}.katex .fbox,.katex .fcolorbox{border:.04em solid;box-sizing:border-box}.katex .cancel-pad{padding:0 .2em}.katex .cancel-lap{margin-left:-.2em;margin-right:-.2em}.katex .sout{border-bottom-style:solid;border-bottom-width:.08em}.katex .angl{border-right:.049em solid;border-top:.049em solid;box-sizing:border-content;margin-right:.03889em}.katex .anglpad{padding:0 .03889em}.katex .eqn-num:before{content:\"(\" counter(katexEqnNo) \")\";counter-increment:katexEqnNo}.katex .mml-eqn-num:before{content:\"(\" counter(mmlEqnNo) \")\";counter-increment:mmlEqnNo}.katex .mtr-glue{width:50%}.katex .cd-vert-arrow{display:inline-block;position:relative}.katex .cd-label-left{display:inline-block;position:absolute;right:-webkit-calc(50% + .3em);right:calc(50% + .3em);text-align:left}.katex .cd-label-right{display:inline-block;left:-webkit-calc(50% + .3em);left:calc(50% + .3em);position:absolute;text-align:right}.katex-display{display:block;margin:1em 0;text-align:center}.katex-display>.katex{display:block;text-align:center;white-space:nowrap}.katex-display>.katex>.katex-html{display:block;position:relative}.katex-display>.katex>.katex-html>.tag{position:absolute;right:0}.katex-display.leqno>.katex>.katex-html>.tag{left:0;right:auto}.katex-display.fleqn>.katex{padding-left:2em;text-align:left}body{counter-reset:katexEqnNo mmlEqnNo}\n","date":"2023-12-11T04:23:19.020Z","updated":"2023-12-11T04:23:19.020Z","path":"html/nest/css/katex.min.css","layout":"false","title":"","comments":1,"_id":"clq0gtc9u0003zqq90pylbqqj","content":"@font-face{font-family:KaTeX_AMS;font-style:normal;font-weight:400;src:url(fonts/KaTeX_AMS-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_AMS-Regular.woff) format(\"woff\"),url(fonts/KaTeX_AMS-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Caligraphic;font-style:normal;font-weight:700;src:url(fonts/KaTeX_Caligraphic-Bold.woff2) format(\"woff2\"),url(fonts/KaTeX_Caligraphic-Bold.woff) format(\"woff\"),url(fonts/KaTeX_Caligraphic-Bold.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Caligraphic;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Caligraphic-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Caligraphic-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Caligraphic-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Fraktur;font-style:normal;font-weight:700;src:url(fonts/KaTeX_Fraktur-Bold.woff2) format(\"woff2\"),url(fonts/KaTeX_Fraktur-Bold.woff) format(\"woff\"),url(fonts/KaTeX_Fraktur-Bold.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Fraktur;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Fraktur-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Fraktur-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Fraktur-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Main;font-style:normal;font-weight:700;src:url(fonts/KaTeX_Main-Bold.woff2) format(\"woff2\"),url(fonts/KaTeX_Main-Bold.woff) format(\"woff\"),url(fonts/KaTeX_Main-Bold.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Main;font-style:italic;font-weight:700;src:url(fonts/KaTeX_Main-BoldItalic.woff2) format(\"woff2\"),url(fonts/KaTeX_Main-BoldItalic.woff) format(\"woff\"),url(fonts/KaTeX_Main-BoldItalic.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Main;font-style:italic;font-weight:400;src:url(fonts/KaTeX_Main-Italic.woff2) format(\"woff2\"),url(fonts/KaTeX_Main-Italic.woff) format(\"woff\"),url(fonts/KaTeX_Main-Italic.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Main;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Main-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Main-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Main-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Math;font-style:italic;font-weight:700;src:url(fonts/KaTeX_Math-BoldItalic.woff2) format(\"woff2\"),url(fonts/KaTeX_Math-BoldItalic.woff) format(\"woff\"),url(fonts/KaTeX_Math-BoldItalic.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Math;font-style:italic;font-weight:400;src:url(fonts/KaTeX_Math-Italic.woff2) format(\"woff2\"),url(fonts/KaTeX_Math-Italic.woff) format(\"woff\"),url(fonts/KaTeX_Math-Italic.ttf) format(\"truetype\")}@font-face{font-family:\"KaTeX_SansSerif\";font-style:normal;font-weight:700;src:url(fonts/KaTeX_SansSerif-Bold.woff2) format(\"woff2\"),url(fonts/KaTeX_SansSerif-Bold.woff) format(\"woff\"),url(fonts/KaTeX_SansSerif-Bold.ttf) format(\"truetype\")}@font-face{font-family:\"KaTeX_SansSerif\";font-style:italic;font-weight:400;src:url(fonts/KaTeX_SansSerif-Italic.woff2) format(\"woff2\"),url(fonts/KaTeX_SansSerif-Italic.woff) format(\"woff\"),url(fonts/KaTeX_SansSerif-Italic.ttf) format(\"truetype\")}@font-face{font-family:\"KaTeX_SansSerif\";font-style:normal;font-weight:400;src:url(fonts/KaTeX_SansSerif-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_SansSerif-Regular.woff) format(\"woff\"),url(fonts/KaTeX_SansSerif-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Script;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Script-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Script-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Script-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Size1;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Size1-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Size1-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Size1-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Size2;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Size2-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Size2-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Size2-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Size3;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Size3-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Size3-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Size3-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Size4;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Size4-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Size4-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Size4-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Typewriter;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Typewriter-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Typewriter-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Typewriter-Regular.ttf) format(\"truetype\")}.katex{font:normal 1.21em KaTeX_Main,Times New Roman,serif;line-height:1.2;text-indent:0;text-rendering:auto}.katex *{-ms-high-contrast-adjust:none!important;border-color:currentColor}.katex .katex-version:after{content:\"0.13.11\"}.katex .katex-mathml{clip:rect(1px,1px,1px,1px);border:0;height:1px;overflow:hidden;padding:0;position:absolute;width:1px}.katex .katex-html>.newline{display:block}.katex .base{position:relative;white-space:nowrap;width:-webkit-min-content;width:-moz-min-content;width:min-content}.katex .base,.katex .strut{display:inline-block}.katex .textbf{font-weight:700}.katex .textit{font-style:italic}.katex .textrm{font-family:KaTeX_Main}.katex .textsf{font-family:KaTeX_SansSerif}.katex .texttt{font-family:KaTeX_Typewriter}.katex .mathnormal{font-family:KaTeX_Math;font-style:italic}.katex .mathit{font-family:KaTeX_Main;font-style:italic}.katex .mathrm{font-style:normal}.katex .mathbf{font-family:KaTeX_Main;font-weight:700}.katex .boldsymbol{font-family:KaTeX_Math;font-style:italic;font-weight:700}.katex .amsrm,.katex .mathbb,.katex .textbb{font-family:KaTeX_AMS}.katex .mathcal{font-family:KaTeX_Caligraphic}.katex .mathfrak,.katex .textfrak{font-family:KaTeX_Fraktur}.katex .mathtt{font-family:KaTeX_Typewriter}.katex .mathscr,.katex .textscr{font-family:KaTeX_Script}.katex .mathsf,.katex .textsf{font-family:KaTeX_SansSerif}.katex .mathboldsf,.katex .textboldsf{font-family:KaTeX_SansSerif;font-weight:700}.katex .mathitsf,.katex .textitsf{font-family:KaTeX_SansSerif;font-style:italic}.katex .mainrm{font-family:KaTeX_Main;font-style:normal}.katex .vlist-t{border-collapse:collapse;display:inline-table;table-layout:fixed}.katex .vlist-r{display:table-row}.katex .vlist{display:table-cell;position:relative;vertical-align:bottom}.katex .vlist>span{display:block;height:0;position:relative}.katex .vlist>span>span{display:inline-block}.katex .vlist>span>.pstrut{overflow:hidden;width:0}.katex .vlist-t2{margin-right:-2px}.katex .vlist-s{display:table-cell;font-size:1px;min-width:2px;vertical-align:bottom;width:2px}.katex .vbox{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-box-align:baseline;align-items:baseline;display:-webkit-inline-box;display:inline-flex;flex-direction:column}.katex .hbox{width:100%}.katex .hbox,.katex .thinbox{-webkit-box-orient:horizontal;-webkit-box-direction:normal;display:-webkit-inline-box;display:inline-flex;flex-direction:row}.katex .thinbox{max-width:0;width:0}.katex .msupsub{text-align:left}.katex .mfrac>span>span{text-align:center}.katex .mfrac .frac-line{border-bottom-style:solid;display:inline-block;width:100%}.katex .hdashline,.katex .hline,.katex .mfrac .frac-line,.katex .overline .overline-line,.katex .rule,.katex .underline .underline-line{min-height:1px}.katex .mspace{display:inline-block}.katex .clap,.katex .llap,.katex .rlap{position:relative;width:0}.katex .clap>.inner,.katex .llap>.inner,.katex .rlap>.inner{position:absolute}.katex .clap>.fix,.katex .llap>.fix,.katex .rlap>.fix{display:inline-block}.katex .llap>.inner{right:0}.katex .clap>.inner,.katex .rlap>.inner{left:0}.katex .clap>.inner>span{margin-left:-50%;margin-right:50%}.katex .rule{border:0 solid;display:inline-block;position:relative}.katex .hline,.katex .overline .overline-line,.katex .underline .underline-line{border-bottom-style:solid;display:inline-block;width:100%}.katex .hdashline{border-bottom-style:dashed;display:inline-block;width:100%}.katex .sqrt>.root{margin-left:.27777778em;margin-right:-.55555556em}.katex .fontsize-ensurer.reset-size1.size1,.katex .sizing.reset-size1.size1{font-size:1em}.katex .fontsize-ensurer.reset-size1.size2,.katex .sizing.reset-size1.size2{font-size:1.2em}.katex .fontsize-ensurer.reset-size1.size3,.katex .sizing.reset-size1.size3{font-size:1.4em}.katex .fontsize-ensurer.reset-size1.size4,.katex .sizing.reset-size1.size4{font-size:1.6em}.katex .fontsize-ensurer.reset-size1.size5,.katex .sizing.reset-size1.size5{font-size:1.8em}.katex .fontsize-ensurer.reset-size1.size6,.katex .sizing.reset-size1.size6{font-size:2em}.katex .fontsize-ensurer.reset-size1.size7,.katex .sizing.reset-size1.size7{font-size:2.4em}.katex .fontsize-ensurer.reset-size1.size8,.katex .sizing.reset-size1.size8{font-size:2.88em}.katex .fontsize-ensurer.reset-size1.size9,.katex .sizing.reset-size1.size9{font-size:3.456em}.katex .fontsize-ensurer.reset-size1.size10,.katex .sizing.reset-size1.size10{font-size:4.148em}.katex .fontsize-ensurer.reset-size1.size11,.katex .sizing.reset-size1.size11{font-size:4.976em}.katex .fontsize-ensurer.reset-size2.size1,.katex .sizing.reset-size2.size1{font-size:.83333333em}.katex .fontsize-ensurer.reset-size2.size2,.katex .sizing.reset-size2.size2{font-size:1em}.katex .fontsize-ensurer.reset-size2.size3,.katex .sizing.reset-size2.size3{font-size:1.16666667em}.katex .fontsize-ensurer.reset-size2.size4,.katex .sizing.reset-size2.size4{font-size:1.33333333em}.katex .fontsize-ensurer.reset-size2.size5,.katex .sizing.reset-size2.size5{font-size:1.5em}.katex .fontsize-ensurer.reset-size2.size6,.katex .sizing.reset-size2.size6{font-size:1.66666667em}.katex .fontsize-ensurer.reset-size2.size7,.katex .sizing.reset-size2.size7{font-size:2em}.katex .fontsize-ensurer.reset-size2.size8,.katex .sizing.reset-size2.size8{font-size:2.4em}.katex .fontsize-ensurer.reset-size2.size9,.katex .sizing.reset-size2.size9{font-size:2.88em}.katex .fontsize-ensurer.reset-size2.size10,.katex .sizing.reset-size2.size10{font-size:3.45666667em}.katex .fontsize-ensurer.reset-size2.size11,.katex .sizing.reset-size2.size11{font-size:4.14666667em}.katex .fontsize-ensurer.reset-size3.size1,.katex .sizing.reset-size3.size1{font-size:.71428571em}.katex .fontsize-ensurer.reset-size3.size2,.katex .sizing.reset-size3.size2{font-size:.85714286em}.katex .fontsize-ensurer.reset-size3.size3,.katex .sizing.reset-size3.size3{font-size:1em}.katex .fontsize-ensurer.reset-size3.size4,.katex .sizing.reset-size3.size4{font-size:1.14285714em}.katex .fontsize-ensurer.reset-size3.size5,.katex .sizing.reset-size3.size5{font-size:1.28571429em}.katex .fontsize-ensurer.reset-size3.size6,.katex .sizing.reset-size3.size6{font-size:1.42857143em}.katex .fontsize-ensurer.reset-size3.size7,.katex .sizing.reset-size3.size7{font-size:1.71428571em}.katex .fontsize-ensurer.reset-size3.size8,.katex .sizing.reset-size3.size8{font-size:2.05714286em}.katex .fontsize-ensurer.reset-size3.size9,.katex .sizing.reset-size3.size9{font-size:2.46857143em}.katex .fontsize-ensurer.reset-size3.size10,.katex .sizing.reset-size3.size10{font-size:2.96285714em}.katex .fontsize-ensurer.reset-size3.size11,.katex .sizing.reset-size3.size11{font-size:3.55428571em}.katex .fontsize-ensurer.reset-size4.size1,.katex .sizing.reset-size4.size1{font-size:.625em}.katex .fontsize-ensurer.reset-size4.size2,.katex .sizing.reset-size4.size2{font-size:.75em}.katex .fontsize-ensurer.reset-size4.size3,.katex .sizing.reset-size4.size3{font-size:.875em}.katex .fontsize-ensurer.reset-size4.size4,.katex .sizing.reset-size4.size4{font-size:1em}.katex .fontsize-ensurer.reset-size4.size5,.katex .sizing.reset-size4.size5{font-size:1.125em}.katex .fontsize-ensurer.reset-size4.size6,.katex .sizing.reset-size4.size6{font-size:1.25em}.katex .fontsize-ensurer.reset-size4.size7,.katex .sizing.reset-size4.size7{font-size:1.5em}.katex .fontsize-ensurer.reset-size4.size8,.katex .sizing.reset-size4.size8{font-size:1.8em}.katex .fontsize-ensurer.reset-size4.size9,.katex .sizing.reset-size4.size9{font-size:2.16em}.katex .fontsize-ensurer.reset-size4.size10,.katex .sizing.reset-size4.size10{font-size:2.5925em}.katex .fontsize-ensurer.reset-size4.size11,.katex .sizing.reset-size4.size11{font-size:3.11em}.katex .fontsize-ensurer.reset-size5.size1,.katex .sizing.reset-size5.size1{font-size:.55555556em}.katex .fontsize-ensurer.reset-size5.size2,.katex .sizing.reset-size5.size2{font-size:.66666667em}.katex .fontsize-ensurer.reset-size5.size3,.katex .sizing.reset-size5.size3{font-size:.77777778em}.katex .fontsize-ensurer.reset-size5.size4,.katex .sizing.reset-size5.size4{font-size:.88888889em}.katex .fontsize-ensurer.reset-size5.size5,.katex .sizing.reset-size5.size5{font-size:1em}.katex .fontsize-ensurer.reset-size5.size6,.katex .sizing.reset-size5.size6{font-size:1.11111111em}.katex .fontsize-ensurer.reset-size5.size7,.katex .sizing.reset-size5.size7{font-size:1.33333333em}.katex .fontsize-ensurer.reset-size5.size8,.katex .sizing.reset-size5.size8{font-size:1.6em}.katex .fontsize-ensurer.reset-size5.size9,.katex .sizing.reset-size5.size9{font-size:1.92em}.katex .fontsize-ensurer.reset-size5.size10,.katex .sizing.reset-size5.size10{font-size:2.30444444em}.katex .fontsize-ensurer.reset-size5.size11,.katex .sizing.reset-size5.size11{font-size:2.76444444em}.katex .fontsize-ensurer.reset-size6.size1,.katex .sizing.reset-size6.size1{font-size:.5em}.katex .fontsize-ensurer.reset-size6.size2,.katex .sizing.reset-size6.size2{font-size:.6em}.katex .fontsize-ensurer.reset-size6.size3,.katex .sizing.reset-size6.size3{font-size:.7em}.katex .fontsize-ensurer.reset-size6.size4,.katex .sizing.reset-size6.size4{font-size:.8em}.katex .fontsize-ensurer.reset-size6.size5,.katex .sizing.reset-size6.size5{font-size:.9em}.katex .fontsize-ensurer.reset-size6.size6,.katex .sizing.reset-size6.size6{font-size:1em}.katex .fontsize-ensurer.reset-size6.size7,.katex .sizing.reset-size6.size7{font-size:1.2em}.katex .fontsize-ensurer.reset-size6.size8,.katex .sizing.reset-size6.size8{font-size:1.44em}.katex .fontsize-ensurer.reset-size6.size9,.katex .sizing.reset-size6.size9{font-size:1.728em}.katex .fontsize-ensurer.reset-size6.size10,.katex .sizing.reset-size6.size10{font-size:2.074em}.katex .fontsize-ensurer.reset-size6.size11,.katex .sizing.reset-size6.size11{font-size:2.488em}.katex .fontsize-ensurer.reset-size7.size1,.katex .sizing.reset-size7.size1{font-size:.41666667em}.katex .fontsize-ensurer.reset-size7.size2,.katex .sizing.reset-size7.size2{font-size:.5em}.katex .fontsize-ensurer.reset-size7.size3,.katex .sizing.reset-size7.size3{font-size:.58333333em}.katex .fontsize-ensurer.reset-size7.size4,.katex .sizing.reset-size7.size4{font-size:.66666667em}.katex .fontsize-ensurer.reset-size7.size5,.katex .sizing.reset-size7.size5{font-size:.75em}.katex .fontsize-ensurer.reset-size7.size6,.katex .sizing.reset-size7.size6{font-size:.83333333em}.katex .fontsize-ensurer.reset-size7.size7,.katex .sizing.reset-size7.size7{font-size:1em}.katex .fontsize-ensurer.reset-size7.size8,.katex .sizing.reset-size7.size8{font-size:1.2em}.katex .fontsize-ensurer.reset-size7.size9,.katex .sizing.reset-size7.size9{font-size:1.44em}.katex .fontsize-ensurer.reset-size7.size10,.katex .sizing.reset-size7.size10{font-size:1.72833333em}.katex .fontsize-ensurer.reset-size7.size11,.katex .sizing.reset-size7.size11{font-size:2.07333333em}.katex .fontsize-ensurer.reset-size8.size1,.katex .sizing.reset-size8.size1{font-size:.34722222em}.katex .fontsize-ensurer.reset-size8.size2,.katex .sizing.reset-size8.size2{font-size:.41666667em}.katex .fontsize-ensurer.reset-size8.size3,.katex .sizing.reset-size8.size3{font-size:.48611111em}.katex .fontsize-ensurer.reset-size8.size4,.katex .sizing.reset-size8.size4{font-size:.55555556em}.katex .fontsize-ensurer.reset-size8.size5,.katex .sizing.reset-size8.size5{font-size:.625em}.katex .fontsize-ensurer.reset-size8.size6,.katex .sizing.reset-size8.size6{font-size:.69444444em}.katex .fontsize-ensurer.reset-size8.size7,.katex .sizing.reset-size8.size7{font-size:.83333333em}.katex .fontsize-ensurer.reset-size8.size8,.katex .sizing.reset-size8.size8{font-size:1em}.katex .fontsize-ensurer.reset-size8.size9,.katex .sizing.reset-size8.size9{font-size:1.2em}.katex .fontsize-ensurer.reset-size8.size10,.katex .sizing.reset-size8.size10{font-size:1.44027778em}.katex .fontsize-ensurer.reset-size8.size11,.katex .sizing.reset-size8.size11{font-size:1.72777778em}.katex .fontsize-ensurer.reset-size9.size1,.katex .sizing.reset-size9.size1{font-size:.28935185em}.katex .fontsize-ensurer.reset-size9.size2,.katex .sizing.reset-size9.size2{font-size:.34722222em}.katex .fontsize-ensurer.reset-size9.size3,.katex .sizing.reset-size9.size3{font-size:.40509259em}.katex .fontsize-ensurer.reset-size9.size4,.katex .sizing.reset-size9.size4{font-size:.46296296em}.katex .fontsize-ensurer.reset-size9.size5,.katex .sizing.reset-size9.size5{font-size:.52083333em}.katex .fontsize-ensurer.reset-size9.size6,.katex .sizing.reset-size9.size6{font-size:.5787037em}.katex .fontsize-ensurer.reset-size9.size7,.katex .sizing.reset-size9.size7{font-size:.69444444em}.katex .fontsize-ensurer.reset-size9.size8,.katex .sizing.reset-size9.size8{font-size:.83333333em}.katex .fontsize-ensurer.reset-size9.size9,.katex .sizing.reset-size9.size9{font-size:1em}.katex .fontsize-ensurer.reset-size9.size10,.katex .sizing.reset-size9.size10{font-size:1.20023148em}.katex .fontsize-ensurer.reset-size9.size11,.katex .sizing.reset-size9.size11{font-size:1.43981481em}.katex .fontsize-ensurer.reset-size10.size1,.katex .sizing.reset-size10.size1{font-size:.24108004em}.katex .fontsize-ensurer.reset-size10.size2,.katex .sizing.reset-size10.size2{font-size:.28929605em}.katex .fontsize-ensurer.reset-size10.size3,.katex .sizing.reset-size10.size3{font-size:.33751205em}.katex .fontsize-ensurer.reset-size10.size4,.katex .sizing.reset-size10.size4{font-size:.38572806em}.katex .fontsize-ensurer.reset-size10.size5,.katex .sizing.reset-size10.size5{font-size:.43394407em}.katex .fontsize-ensurer.reset-size10.size6,.katex .sizing.reset-size10.size6{font-size:.48216008em}.katex .fontsize-ensurer.reset-size10.size7,.katex .sizing.reset-size10.size7{font-size:.57859209em}.katex .fontsize-ensurer.reset-size10.size8,.katex .sizing.reset-size10.size8{font-size:.69431051em}.katex .fontsize-ensurer.reset-size10.size9,.katex .sizing.reset-size10.size9{font-size:.83317261em}.katex .fontsize-ensurer.reset-size10.size10,.katex .sizing.reset-size10.size10{font-size:1em}.katex .fontsize-ensurer.reset-size10.size11,.katex .sizing.reset-size10.size11{font-size:1.19961427em}.katex .fontsize-ensurer.reset-size11.size1,.katex .sizing.reset-size11.size1{font-size:.20096463em}.katex .fontsize-ensurer.reset-size11.size2,.katex .sizing.reset-size11.size2{font-size:.24115756em}.katex .fontsize-ensurer.reset-size11.size3,.katex .sizing.reset-size11.size3{font-size:.28135048em}.katex .fontsize-ensurer.reset-size11.size4,.katex .sizing.reset-size11.size4{font-size:.32154341em}.katex .fontsize-ensurer.reset-size11.size5,.katex .sizing.reset-size11.size5{font-size:.36173633em}.katex .fontsize-ensurer.reset-size11.size6,.katex .sizing.reset-size11.size6{font-size:.40192926em}.katex .fontsize-ensurer.reset-size11.size7,.katex .sizing.reset-size11.size7{font-size:.48231511em}.katex .fontsize-ensurer.reset-size11.size8,.katex .sizing.reset-size11.size8{font-size:.57877814em}.katex .fontsize-ensurer.reset-size11.size9,.katex .sizing.reset-size11.size9{font-size:.69453376em}.katex .fontsize-ensurer.reset-size11.size10,.katex .sizing.reset-size11.size10{font-size:.83360129em}.katex .fontsize-ensurer.reset-size11.size11,.katex .sizing.reset-size11.size11{font-size:1em}.katex .delimsizing.size1{font-family:KaTeX_Size1}.katex .delimsizing.size2{font-family:KaTeX_Size2}.katex .delimsizing.size3{font-family:KaTeX_Size3}.katex .delimsizing.size4{font-family:KaTeX_Size4}.katex .delimsizing.mult .delim-size1>span{font-family:KaTeX_Size1}.katex .delimsizing.mult .delim-size4>span{font-family:KaTeX_Size4}.katex .nulldelimiter{display:inline-block;width:.12em}.katex .delimcenter,.katex .op-symbol{position:relative}.katex .op-symbol.small-op{font-family:KaTeX_Size1}.katex .op-symbol.large-op{font-family:KaTeX_Size2}.katex .accent>.vlist-t,.katex .op-limits>.vlist-t{text-align:center}.katex .accent .accent-body{position:relative}.katex .accent .accent-body:not(.accent-full){width:0}.katex .overlay{display:block}.katex .mtable .vertical-separator{display:inline-block;min-width:1px}.katex .mtable .arraycolsep{display:inline-block}.katex .mtable .col-align-c>.vlist-t{text-align:center}.katex .mtable .col-align-l>.vlist-t{text-align:left}.katex .mtable .col-align-r>.vlist-t{text-align:right}.katex .svg-align{text-align:left}.katex svg{fill:currentColor;stroke:currentColor;fill-rule:nonzero;fill-opacity:1;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;display:block;height:inherit;position:absolute;width:100%}.katex svg path{stroke:none}.katex img{border-style:none;max-height:none;max-width:none;min-height:0;min-width:0}.katex .stretchy{display:block;overflow:hidden;position:relative;width:100%}.katex .stretchy:after,.katex .stretchy:before{content:\"\"}.katex .hide-tail{overflow:hidden;position:relative;width:100%}.katex .halfarrow-left{left:0;overflow:hidden;position:absolute;width:50.2%}.katex .halfarrow-right{overflow:hidden;position:absolute;right:0;width:50.2%}.katex .brace-left{left:0;overflow:hidden;position:absolute;width:25.1%}.katex .brace-center{left:25%;overflow:hidden;position:absolute;width:50%}.katex .brace-right{overflow:hidden;position:absolute;right:0;width:25.1%}.katex .x-arrow-pad{padding:0 .5em}.katex .cd-arrow-pad{padding:0 .55556em 0 .27778em}.katex .mover,.katex .munder,.katex .x-arrow{text-align:center}.katex .boxpad{padding:0 .3em}.katex .fbox,.katex .fcolorbox{border:.04em solid;box-sizing:border-box}.katex .cancel-pad{padding:0 .2em}.katex .cancel-lap{margin-left:-.2em;margin-right:-.2em}.katex .sout{border-bottom-style:solid;border-bottom-width:.08em}.katex .angl{border-right:.049em solid;border-top:.049em solid;box-sizing:border-content;margin-right:.03889em}.katex .anglpad{padding:0 .03889em}.katex .eqn-num:before{content:\"(\" counter(katexEqnNo) \")\";counter-increment:katexEqnNo}.katex .mml-eqn-num:before{content:\"(\" counter(mmlEqnNo) \")\";counter-increment:mmlEqnNo}.katex .mtr-glue{width:50%}.katex .cd-vert-arrow{display:inline-block;position:relative}.katex .cd-label-left{display:inline-block;position:absolute;right:-webkit-calc(50% + .3em);right:calc(50% + .3em);text-align:left}.katex .cd-label-right{display:inline-block;left:-webkit-calc(50% + .3em);left:calc(50% + .3em);position:absolute;text-align:right}.katex-display{display:block;margin:1em 0;text-align:center}.katex-display>.katex{display:block;text-align:center;white-space:nowrap}.katex-display>.katex>.katex-html{display:block;position:relative}.katex-display>.katex>.katex-html>.tag{position:absolute;right:0}.katex-display.leqno>.katex>.katex-html>.tag{left:0;right:auto}.katex-display.fleqn>.katex{padding-left:2em;text-align:left}body{counter-reset:katexEqnNo mmlEqnNo}\n","site":{"data":{}},"length":2874,"excerpt":"","more":"@font-face{font-family:KaTeX_AMS;font-style:normal;font-weight:400;src:url(fonts/KaTeX_AMS-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_AMS-Regular.woff) format(\"woff\"),url(fonts/KaTeX_AMS-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Caligraphic;font-style:normal;font-weight:700;src:url(fonts/KaTeX_Caligraphic-Bold.woff2) format(\"woff2\"),url(fonts/KaTeX_Caligraphic-Bold.woff) format(\"woff\"),url(fonts/KaTeX_Caligraphic-Bold.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Caligraphic;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Caligraphic-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Caligraphic-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Caligraphic-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Fraktur;font-style:normal;font-weight:700;src:url(fonts/KaTeX_Fraktur-Bold.woff2) format(\"woff2\"),url(fonts/KaTeX_Fraktur-Bold.woff) format(\"woff\"),url(fonts/KaTeX_Fraktur-Bold.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Fraktur;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Fraktur-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Fraktur-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Fraktur-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Main;font-style:normal;font-weight:700;src:url(fonts/KaTeX_Main-Bold.woff2) format(\"woff2\"),url(fonts/KaTeX_Main-Bold.woff) format(\"woff\"),url(fonts/KaTeX_Main-Bold.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Main;font-style:italic;font-weight:700;src:url(fonts/KaTeX_Main-BoldItalic.woff2) format(\"woff2\"),url(fonts/KaTeX_Main-BoldItalic.woff) format(\"woff\"),url(fonts/KaTeX_Main-BoldItalic.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Main;font-style:italic;font-weight:400;src:url(fonts/KaTeX_Main-Italic.woff2) format(\"woff2\"),url(fonts/KaTeX_Main-Italic.woff) format(\"woff\"),url(fonts/KaTeX_Main-Italic.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Main;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Main-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Main-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Main-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Math;font-style:italic;font-weight:700;src:url(fonts/KaTeX_Math-BoldItalic.woff2) format(\"woff2\"),url(fonts/KaTeX_Math-BoldItalic.woff) format(\"woff\"),url(fonts/KaTeX_Math-BoldItalic.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Math;font-style:italic;font-weight:400;src:url(fonts/KaTeX_Math-Italic.woff2) format(\"woff2\"),url(fonts/KaTeX_Math-Italic.woff) format(\"woff\"),url(fonts/KaTeX_Math-Italic.ttf) format(\"truetype\")}@font-face{font-family:\"KaTeX_SansSerif\";font-style:normal;font-weight:700;src:url(fonts/KaTeX_SansSerif-Bold.woff2) format(\"woff2\"),url(fonts/KaTeX_SansSerif-Bold.woff) format(\"woff\"),url(fonts/KaTeX_SansSerif-Bold.ttf) format(\"truetype\")}@font-face{font-family:\"KaTeX_SansSerif\";font-style:italic;font-weight:400;src:url(fonts/KaTeX_SansSerif-Italic.woff2) format(\"woff2\"),url(fonts/KaTeX_SansSerif-Italic.woff) format(\"woff\"),url(fonts/KaTeX_SansSerif-Italic.ttf) format(\"truetype\")}@font-face{font-family:\"KaTeX_SansSerif\";font-style:normal;font-weight:400;src:url(fonts/KaTeX_SansSerif-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_SansSerif-Regular.woff) format(\"woff\"),url(fonts/KaTeX_SansSerif-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Script;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Script-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Script-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Script-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Size1;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Size1-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Size1-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Size1-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Size2;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Size2-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Size2-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Size2-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Size3;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Size3-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Size3-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Size3-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Size4;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Size4-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Size4-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Size4-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Typewriter;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Typewriter-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Typewriter-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Typewriter-Regular.ttf) format(\"truetype\")}.katex{font:normal 1.21em KaTeX_Main,Times New Roman,serif;line-height:1.2;text-indent:0;text-rendering:auto}.katex *{-ms-high-contrast-adjust:none!important;border-color:currentColor}.katex .katex-version:after{content:\"0.13.11\"}.katex .katex-mathml{clip:rect(1px,1px,1px,1px);border:0;height:1px;overflow:hidden;padding:0;position:absolute;width:1px}.katex .katex-html>.newline{display:block}.katex .base{position:relative;white-space:nowrap;width:-webkit-min-content;width:-moz-min-content;width:min-content}.katex .base,.katex .strut{display:inline-block}.katex .textbf{font-weight:700}.katex .textit{font-style:italic}.katex .textrm{font-family:KaTeX_Main}.katex .textsf{font-family:KaTeX_SansSerif}.katex .texttt{font-family:KaTeX_Typewriter}.katex .mathnormal{font-family:KaTeX_Math;font-style:italic}.katex .mathit{font-family:KaTeX_Main;font-style:italic}.katex .mathrm{font-style:normal}.katex .mathbf{font-family:KaTeX_Main;font-weight:700}.katex .boldsymbol{font-family:KaTeX_Math;font-style:italic;font-weight:700}.katex .amsrm,.katex .mathbb,.katex .textbb{font-family:KaTeX_AMS}.katex .mathcal{font-family:KaTeX_Caligraphic}.katex .mathfrak,.katex .textfrak{font-family:KaTeX_Fraktur}.katex .mathtt{font-family:KaTeX_Typewriter}.katex .mathscr,.katex .textscr{font-family:KaTeX_Script}.katex .mathsf,.katex .textsf{font-family:KaTeX_SansSerif}.katex .mathboldsf,.katex .textboldsf{font-family:KaTeX_SansSerif;font-weight:700}.katex .mathitsf,.katex .textitsf{font-family:KaTeX_SansSerif;font-style:italic}.katex .mainrm{font-family:KaTeX_Main;font-style:normal}.katex .vlist-t{border-collapse:collapse;display:inline-table;table-layout:fixed}.katex .vlist-r{display:table-row}.katex .vlist{display:table-cell;position:relative;vertical-align:bottom}.katex .vlist>span{display:block;height:0;position:relative}.katex .vlist>span>span{display:inline-block}.katex .vlist>span>.pstrut{overflow:hidden;width:0}.katex .vlist-t2{margin-right:-2px}.katex .vlist-s{display:table-cell;font-size:1px;min-width:2px;vertical-align:bottom;width:2px}.katex .vbox{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-box-align:baseline;align-items:baseline;display:-webkit-inline-box;display:inline-flex;flex-direction:column}.katex .hbox{width:100%}.katex .hbox,.katex .thinbox{-webkit-box-orient:horizontal;-webkit-box-direction:normal;display:-webkit-inline-box;display:inline-flex;flex-direction:row}.katex .thinbox{max-width:0;width:0}.katex .msupsub{text-align:left}.katex .mfrac>span>span{text-align:center}.katex .mfrac .frac-line{border-bottom-style:solid;display:inline-block;width:100%}.katex .hdashline,.katex .hline,.katex .mfrac .frac-line,.katex .overline .overline-line,.katex .rule,.katex .underline .underline-line{min-height:1px}.katex .mspace{display:inline-block}.katex .clap,.katex .llap,.katex .rlap{position:relative;width:0}.katex .clap>.inner,.katex .llap>.inner,.katex .rlap>.inner{position:absolute}.katex .clap>.fix,.katex .llap>.fix,.katex .rlap>.fix{display:inline-block}.katex .llap>.inner{right:0}.katex .clap>.inner,.katex .rlap>.inner{left:0}.katex .clap>.inner>span{margin-left:-50%;margin-right:50%}.katex .rule{border:0 solid;display:inline-block;position:relative}.katex .hline,.katex .overline .overline-line,.katex .underline .underline-line{border-bottom-style:solid;display:inline-block;width:100%}.katex .hdashline{border-bottom-style:dashed;display:inline-block;width:100%}.katex .sqrt>.root{margin-left:.27777778em;margin-right:-.55555556em}.katex .fontsize-ensurer.reset-size1.size1,.katex .sizing.reset-size1.size1{font-size:1em}.katex .fontsize-ensurer.reset-size1.size2,.katex .sizing.reset-size1.size2{font-size:1.2em}.katex .fontsize-ensurer.reset-size1.size3,.katex .sizing.reset-size1.size3{font-size:1.4em}.katex .fontsize-ensurer.reset-size1.size4,.katex .sizing.reset-size1.size4{font-size:1.6em}.katex .fontsize-ensurer.reset-size1.size5,.katex .sizing.reset-size1.size5{font-size:1.8em}.katex .fontsize-ensurer.reset-size1.size6,.katex .sizing.reset-size1.size6{font-size:2em}.katex .fontsize-ensurer.reset-size1.size7,.katex .sizing.reset-size1.size7{font-size:2.4em}.katex .fontsize-ensurer.reset-size1.size8,.katex .sizing.reset-size1.size8{font-size:2.88em}.katex .fontsize-ensurer.reset-size1.size9,.katex .sizing.reset-size1.size9{font-size:3.456em}.katex .fontsize-ensurer.reset-size1.size10,.katex .sizing.reset-size1.size10{font-size:4.148em}.katex .fontsize-ensurer.reset-size1.size11,.katex .sizing.reset-size1.size11{font-size:4.976em}.katex .fontsize-ensurer.reset-size2.size1,.katex .sizing.reset-size2.size1{font-size:.83333333em}.katex .fontsize-ensurer.reset-size2.size2,.katex .sizing.reset-size2.size2{font-size:1em}.katex .fontsize-ensurer.reset-size2.size3,.katex .sizing.reset-size2.size3{font-size:1.16666667em}.katex .fontsize-ensurer.reset-size2.size4,.katex .sizing.reset-size2.size4{font-size:1.33333333em}.katex .fontsize-ensurer.reset-size2.size5,.katex .sizing.reset-size2.size5{font-size:1.5em}.katex .fontsize-ensurer.reset-size2.size6,.katex .sizing.reset-size2.size6{font-size:1.66666667em}.katex .fontsize-ensurer.reset-size2.size7,.katex .sizing.reset-size2.size7{font-size:2em}.katex .fontsize-ensurer.reset-size2.size8,.katex .sizing.reset-size2.size8{font-size:2.4em}.katex .fontsize-ensurer.reset-size2.size9,.katex .sizing.reset-size2.size9{font-size:2.88em}.katex .fontsize-ensurer.reset-size2.size10,.katex .sizing.reset-size2.size10{font-size:3.45666667em}.katex .fontsize-ensurer.reset-size2.size11,.katex .sizing.reset-size2.size11{font-size:4.14666667em}.katex .fontsize-ensurer.reset-size3.size1,.katex .sizing.reset-size3.size1{font-size:.71428571em}.katex .fontsize-ensurer.reset-size3.size2,.katex .sizing.reset-size3.size2{font-size:.85714286em}.katex .fontsize-ensurer.reset-size3.size3,.katex .sizing.reset-size3.size3{font-size:1em}.katex .fontsize-ensurer.reset-size3.size4,.katex .sizing.reset-size3.size4{font-size:1.14285714em}.katex .fontsize-ensurer.reset-size3.size5,.katex .sizing.reset-size3.size5{font-size:1.28571429em}.katex .fontsize-ensurer.reset-size3.size6,.katex .sizing.reset-size3.size6{font-size:1.42857143em}.katex .fontsize-ensurer.reset-size3.size7,.katex .sizing.reset-size3.size7{font-size:1.71428571em}.katex .fontsize-ensurer.reset-size3.size8,.katex .sizing.reset-size3.size8{font-size:2.05714286em}.katex .fontsize-ensurer.reset-size3.size9,.katex .sizing.reset-size3.size9{font-size:2.46857143em}.katex .fontsize-ensurer.reset-size3.size10,.katex .sizing.reset-size3.size10{font-size:2.96285714em}.katex .fontsize-ensurer.reset-size3.size11,.katex .sizing.reset-size3.size11{font-size:3.55428571em}.katex .fontsize-ensurer.reset-size4.size1,.katex .sizing.reset-size4.size1{font-size:.625em}.katex .fontsize-ensurer.reset-size4.size2,.katex .sizing.reset-size4.size2{font-size:.75em}.katex .fontsize-ensurer.reset-size4.size3,.katex .sizing.reset-size4.size3{font-size:.875em}.katex .fontsize-ensurer.reset-size4.size4,.katex .sizing.reset-size4.size4{font-size:1em}.katex .fontsize-ensurer.reset-size4.size5,.katex .sizing.reset-size4.size5{font-size:1.125em}.katex .fontsize-ensurer.reset-size4.size6,.katex .sizing.reset-size4.size6{font-size:1.25em}.katex .fontsize-ensurer.reset-size4.size7,.katex .sizing.reset-size4.size7{font-size:1.5em}.katex .fontsize-ensurer.reset-size4.size8,.katex .sizing.reset-size4.size8{font-size:1.8em}.katex .fontsize-ensurer.reset-size4.size9,.katex .sizing.reset-size4.size9{font-size:2.16em}.katex .fontsize-ensurer.reset-size4.size10,.katex .sizing.reset-size4.size10{font-size:2.5925em}.katex .fontsize-ensurer.reset-size4.size11,.katex .sizing.reset-size4.size11{font-size:3.11em}.katex .fontsize-ensurer.reset-size5.size1,.katex .sizing.reset-size5.size1{font-size:.55555556em}.katex .fontsize-ensurer.reset-size5.size2,.katex .sizing.reset-size5.size2{font-size:.66666667em}.katex .fontsize-ensurer.reset-size5.size3,.katex .sizing.reset-size5.size3{font-size:.77777778em}.katex .fontsize-ensurer.reset-size5.size4,.katex .sizing.reset-size5.size4{font-size:.88888889em}.katex .fontsize-ensurer.reset-size5.size5,.katex .sizing.reset-size5.size5{font-size:1em}.katex .fontsize-ensurer.reset-size5.size6,.katex .sizing.reset-size5.size6{font-size:1.11111111em}.katex .fontsize-ensurer.reset-size5.size7,.katex .sizing.reset-size5.size7{font-size:1.33333333em}.katex .fontsize-ensurer.reset-size5.size8,.katex .sizing.reset-size5.size8{font-size:1.6em}.katex .fontsize-ensurer.reset-size5.size9,.katex .sizing.reset-size5.size9{font-size:1.92em}.katex .fontsize-ensurer.reset-size5.size10,.katex .sizing.reset-size5.size10{font-size:2.30444444em}.katex .fontsize-ensurer.reset-size5.size11,.katex .sizing.reset-size5.size11{font-size:2.76444444em}.katex .fontsize-ensurer.reset-size6.size1,.katex .sizing.reset-size6.size1{font-size:.5em}.katex .fontsize-ensurer.reset-size6.size2,.katex .sizing.reset-size6.size2{font-size:.6em}.katex .fontsize-ensurer.reset-size6.size3,.katex .sizing.reset-size6.size3{font-size:.7em}.katex .fontsize-ensurer.reset-size6.size4,.katex .sizing.reset-size6.size4{font-size:.8em}.katex .fontsize-ensurer.reset-size6.size5,.katex .sizing.reset-size6.size5{font-size:.9em}.katex .fontsize-ensurer.reset-size6.size6,.katex .sizing.reset-size6.size6{font-size:1em}.katex .fontsize-ensurer.reset-size6.size7,.katex .sizing.reset-size6.size7{font-size:1.2em}.katex .fontsize-ensurer.reset-size6.size8,.katex .sizing.reset-size6.size8{font-size:1.44em}.katex .fontsize-ensurer.reset-size6.size9,.katex .sizing.reset-size6.size9{font-size:1.728em}.katex .fontsize-ensurer.reset-size6.size10,.katex .sizing.reset-size6.size10{font-size:2.074em}.katex .fontsize-ensurer.reset-size6.size11,.katex .sizing.reset-size6.size11{font-size:2.488em}.katex .fontsize-ensurer.reset-size7.size1,.katex .sizing.reset-size7.size1{font-size:.41666667em}.katex .fontsize-ensurer.reset-size7.size2,.katex .sizing.reset-size7.size2{font-size:.5em}.katex .fontsize-ensurer.reset-size7.size3,.katex .sizing.reset-size7.size3{font-size:.58333333em}.katex .fontsize-ensurer.reset-size7.size4,.katex .sizing.reset-size7.size4{font-size:.66666667em}.katex .fontsize-ensurer.reset-size7.size5,.katex .sizing.reset-size7.size5{font-size:.75em}.katex .fontsize-ensurer.reset-size7.size6,.katex .sizing.reset-size7.size6{font-size:.83333333em}.katex .fontsize-ensurer.reset-size7.size7,.katex .sizing.reset-size7.size7{font-size:1em}.katex .fontsize-ensurer.reset-size7.size8,.katex .sizing.reset-size7.size8{font-size:1.2em}.katex .fontsize-ensurer.reset-size7.size9,.katex .sizing.reset-size7.size9{font-size:1.44em}.katex .fontsize-ensurer.reset-size7.size10,.katex .sizing.reset-size7.size10{font-size:1.72833333em}.katex .fontsize-ensurer.reset-size7.size11,.katex .sizing.reset-size7.size11{font-size:2.07333333em}.katex .fontsize-ensurer.reset-size8.size1,.katex .sizing.reset-size8.size1{font-size:.34722222em}.katex .fontsize-ensurer.reset-size8.size2,.katex .sizing.reset-size8.size2{font-size:.41666667em}.katex .fontsize-ensurer.reset-size8.size3,.katex .sizing.reset-size8.size3{font-size:.48611111em}.katex .fontsize-ensurer.reset-size8.size4,.katex .sizing.reset-size8.size4{font-size:.55555556em}.katex .fontsize-ensurer.reset-size8.size5,.katex .sizing.reset-size8.size5{font-size:.625em}.katex .fontsize-ensurer.reset-size8.size6,.katex .sizing.reset-size8.size6{font-size:.69444444em}.katex .fontsize-ensurer.reset-size8.size7,.katex .sizing.reset-size8.size7{font-size:.83333333em}.katex .fontsize-ensurer.reset-size8.size8,.katex .sizing.reset-size8.size8{font-size:1em}.katex .fontsize-ensurer.reset-size8.size9,.katex .sizing.reset-size8.size9{font-size:1.2em}.katex .fontsize-ensurer.reset-size8.size10,.katex .sizing.reset-size8.size10{font-size:1.44027778em}.katex .fontsize-ensurer.reset-size8.size11,.katex .sizing.reset-size8.size11{font-size:1.72777778em}.katex .fontsize-ensurer.reset-size9.size1,.katex .sizing.reset-size9.size1{font-size:.28935185em}.katex .fontsize-ensurer.reset-size9.size2,.katex .sizing.reset-size9.size2{font-size:.34722222em}.katex .fontsize-ensurer.reset-size9.size3,.katex .sizing.reset-size9.size3{font-size:.40509259em}.katex .fontsize-ensurer.reset-size9.size4,.katex .sizing.reset-size9.size4{font-size:.46296296em}.katex .fontsize-ensurer.reset-size9.size5,.katex .sizing.reset-size9.size5{font-size:.52083333em}.katex .fontsize-ensurer.reset-size9.size6,.katex .sizing.reset-size9.size6{font-size:.5787037em}.katex .fontsize-ensurer.reset-size9.size7,.katex .sizing.reset-size9.size7{font-size:.69444444em}.katex .fontsize-ensurer.reset-size9.size8,.katex .sizing.reset-size9.size8{font-size:.83333333em}.katex .fontsize-ensurer.reset-size9.size9,.katex .sizing.reset-size9.size9{font-size:1em}.katex .fontsize-ensurer.reset-size9.size10,.katex .sizing.reset-size9.size10{font-size:1.20023148em}.katex .fontsize-ensurer.reset-size9.size11,.katex .sizing.reset-size9.size11{font-size:1.43981481em}.katex .fontsize-ensurer.reset-size10.size1,.katex .sizing.reset-size10.size1{font-size:.24108004em}.katex .fontsize-ensurer.reset-size10.size2,.katex .sizing.reset-size10.size2{font-size:.28929605em}.katex .fontsize-ensurer.reset-size10.size3,.katex .sizing.reset-size10.size3{font-size:.33751205em}.katex .fontsize-ensurer.reset-size10.size4,.katex .sizing.reset-size10.size4{font-size:.38572806em}.katex .fontsize-ensurer.reset-size10.size5,.katex .sizing.reset-size10.size5{font-size:.43394407em}.katex .fontsize-ensurer.reset-size10.size6,.katex .sizing.reset-size10.size6{font-size:.48216008em}.katex .fontsize-ensurer.reset-size10.size7,.katex .sizing.reset-size10.size7{font-size:.57859209em}.katex .fontsize-ensurer.reset-size10.size8,.katex .sizing.reset-size10.size8{font-size:.69431051em}.katex .fontsize-ensurer.reset-size10.size9,.katex .sizing.reset-size10.size9{font-size:.83317261em}.katex .fontsize-ensurer.reset-size10.size10,.katex .sizing.reset-size10.size10{font-size:1em}.katex .fontsize-ensurer.reset-size10.size11,.katex .sizing.reset-size10.size11{font-size:1.19961427em}.katex .fontsize-ensurer.reset-size11.size1,.katex .sizing.reset-size11.size1{font-size:.20096463em}.katex .fontsize-ensurer.reset-size11.size2,.katex .sizing.reset-size11.size2{font-size:.24115756em}.katex .fontsize-ensurer.reset-size11.size3,.katex .sizing.reset-size11.size3{font-size:.28135048em}.katex .fontsize-ensurer.reset-size11.size4,.katex .sizing.reset-size11.size4{font-size:.32154341em}.katex .fontsize-ensurer.reset-size11.size5,.katex .sizing.reset-size11.size5{font-size:.36173633em}.katex .fontsize-ensurer.reset-size11.size6,.katex .sizing.reset-size11.size6{font-size:.40192926em}.katex .fontsize-ensurer.reset-size11.size7,.katex .sizing.reset-size11.size7{font-size:.48231511em}.katex .fontsize-ensurer.reset-size11.size8,.katex .sizing.reset-size11.size8{font-size:.57877814em}.katex .fontsize-ensurer.reset-size11.size9,.katex .sizing.reset-size11.size9{font-size:.69453376em}.katex .fontsize-ensurer.reset-size11.size10,.katex .sizing.reset-size11.size10{font-size:.83360129em}.katex .fontsize-ensurer.reset-size11.size11,.katex .sizing.reset-size11.size11{font-size:1em}.katex .delimsizing.size1{font-family:KaTeX_Size1}.katex .delimsizing.size2{font-family:KaTeX_Size2}.katex .delimsizing.size3{font-family:KaTeX_Size3}.katex .delimsizing.size4{font-family:KaTeX_Size4}.katex .delimsizing.mult .delim-size1>span{font-family:KaTeX_Size1}.katex .delimsizing.mult .delim-size4>span{font-family:KaTeX_Size4}.katex .nulldelimiter{display:inline-block;width:.12em}.katex .delimcenter,.katex .op-symbol{position:relative}.katex .op-symbol.small-op{font-family:KaTeX_Size1}.katex .op-symbol.large-op{font-family:KaTeX_Size2}.katex .accent>.vlist-t,.katex .op-limits>.vlist-t{text-align:center}.katex .accent .accent-body{position:relative}.katex .accent .accent-body:not(.accent-full){width:0}.katex .overlay{display:block}.katex .mtable .vertical-separator{display:inline-block;min-width:1px}.katex .mtable .arraycolsep{display:inline-block}.katex .mtable .col-align-c>.vlist-t{text-align:center}.katex .mtable .col-align-l>.vlist-t{text-align:left}.katex .mtable .col-align-r>.vlist-t{text-align:right}.katex .svg-align{text-align:left}.katex svg{fill:currentColor;stroke:currentColor;fill-rule:nonzero;fill-opacity:1;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;display:block;height:inherit;position:absolute;width:100%}.katex svg path{stroke:none}.katex img{border-style:none;max-height:none;max-width:none;min-height:0;min-width:0}.katex .stretchy{display:block;overflow:hidden;position:relative;width:100%}.katex .stretchy:after,.katex .stretchy:before{content:\"\"}.katex .hide-tail{overflow:hidden;position:relative;width:100%}.katex .halfarrow-left{left:0;overflow:hidden;position:absolute;width:50.2%}.katex .halfarrow-right{overflow:hidden;position:absolute;right:0;width:50.2%}.katex .brace-left{left:0;overflow:hidden;position:absolute;width:25.1%}.katex .brace-center{left:25%;overflow:hidden;position:absolute;width:50%}.katex .brace-right{overflow:hidden;position:absolute;right:0;width:25.1%}.katex .x-arrow-pad{padding:0 .5em}.katex .cd-arrow-pad{padding:0 .55556em 0 .27778em}.katex .mover,.katex .munder,.katex .x-arrow{text-align:center}.katex .boxpad{padding:0 .3em}.katex .fbox,.katex .fcolorbox{border:.04em solid;box-sizing:border-box}.katex .cancel-pad{padding:0 .2em}.katex .cancel-lap{margin-left:-.2em;margin-right:-.2em}.katex .sout{border-bottom-style:solid;border-bottom-width:.08em}.katex .angl{border-right:.049em solid;border-top:.049em solid;box-sizing:border-content;margin-right:.03889em}.katex .anglpad{padding:0 .03889em}.katex .eqn-num:before{content:\"(\" counter(katexEqnNo) \")\";counter-increment:katexEqnNo}.katex .mml-eqn-num:before{content:\"(\" counter(mmlEqnNo) \")\";counter-increment:mmlEqnNo}.katex .mtr-glue{width:50%}.katex .cd-vert-arrow{display:inline-block;position:relative}.katex .cd-label-left{display:inline-block;position:absolute;right:-webkit-calc(50% + .3em);right:calc(50% + .3em);text-align:left}.katex .cd-label-right{display:inline-block;left:-webkit-calc(50% + .3em);left:calc(50% + .3em);position:absolute;text-align:right}.katex-display{display:block;margin:1em 0;text-align:center}.katex-display>.katex{display:block;text-align:center;white-space:nowrap}.katex-display>.katex>.katex-html{display:block;position:relative}.katex-display>.katex>.katex-html>.tag{position:absolute;right:0}.katex-display.leqno>.katex>.katex-html>.tag{left:0;right:auto}.katex-display.fleqn>.katex{padding-left:2em;text-align:left}body{counter-reset:katexEqnNo mmlEqnNo}\n"},{"_content":"/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */*,::before,::after{box-sizing:border-box}html{line-height:1.15;-webkit-text-size-adjust:100%;-moz-tab-size:4;tab-size:4}body{margin:0;font-family:system-ui,-apple-system,'Segoe UI',Roboto,Helvetica,Arial,sans-serif,'Apple Color Emoji','Segoe UI Emoji'}hr{height:0;color:inherit}abbr[title]{text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:ui-monospace,SFMono-Regular,Consolas,'Liberation Mono',Menlo,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}table{text-indent:0;border-color:inherit}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,select{text-transform:none}button,[type='button'],[type='reset'],[type='submit']{-webkit-appearance:button}::-moz-focus-inner{border-style:none;padding:0}:-moz-focusring{outline:1px dotted ButtonText}:-moz-ui-invalid{box-shadow:none}legend{padding:0}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type='search']{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}","source":"html/nest/css/modern-norm.min.css","raw":"/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */*,::before,::after{box-sizing:border-box}html{line-height:1.15;-webkit-text-size-adjust:100%;-moz-tab-size:4;tab-size:4}body{margin:0;font-family:system-ui,-apple-system,'Segoe UI',Roboto,Helvetica,Arial,sans-serif,'Apple Color Emoji','Segoe UI Emoji'}hr{height:0;color:inherit}abbr[title]{text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:ui-monospace,SFMono-Regular,Consolas,'Liberation Mono',Menlo,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}table{text-indent:0;border-color:inherit}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,select{text-transform:none}button,[type='button'],[type='reset'],[type='submit']{-webkit-appearance:button}::-moz-focus-inner{border-style:none;padding:0}:-moz-focusring{outline:1px dotted ButtonText}:-moz-ui-invalid{box-shadow:none}legend{padding:0}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type='search']{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}","date":"2023-12-11T04:23:19.020Z","updated":"2023-12-11T04:23:19.020Z","path":"html/nest/css/modern-norm.min.css","layout":"false","title":"","comments":1,"_id":"clq0gtc9u0004zqq97gyhb4jg","content":"/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */*,::before,::after{box-sizing:border-box}html{line-height:1.15;-webkit-text-size-adjust:100%;-moz-tab-size:4;tab-size:4}body{margin:0;font-family:system-ui,-apple-system,'Segoe UI',Roboto,Helvetica,Arial,sans-serif,'Apple Color Emoji','Segoe UI Emoji'}hr{height:0;color:inherit}abbr[title]{text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:ui-monospace,SFMono-Regular,Consolas,'Liberation Mono',Menlo,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}table{text-indent:0;border-color:inherit}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,select{text-transform:none}button,[type='button'],[type='reset'],[type='submit']{-webkit-appearance:button}::-moz-focus-inner{border-style:none;padding:0}:-moz-focusring{outline:1px dotted ButtonText}:-moz-ui-invalid{box-shadow:none}legend{padding:0}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type='search']{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}","site":{"data":{}},"length":192,"excerpt":"","more":"/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */*,::before,::after{box-sizing:border-box}html{line-height:1.15;-webkit-text-size-adjust:100%;-moz-tab-size:4;tab-size:4}body{margin:0;font-family:system-ui,-apple-system,'Segoe UI',Roboto,Helvetica,Arial,sans-serif,'Apple Color Emoji','Segoe UI Emoji'}hr{height:0;color:inherit}abbr[title]{text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:ui-monospace,SFMono-Regular,Consolas,'Liberation Mono',Menlo,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}table{text-indent:0;border-color:inherit}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,select{text-transform:none}button,[type='button'],[type='reset'],[type='submit']{-webkit-appearance:button}::-moz-focus-inner{border-style:none;padding:0}:-moz-focusring{outline:1px dotted ButtonText}:-moz-ui-invalid{box-shadow:none}legend{padding:0}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type='search']{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}"},{"_content":":root {\n  --color-basic-50: #FFFFFF;\n  --color-basic-50-a: rgba(255, 255, 255, 0);\n  --color-basic-75: #FAFAFA;\n  --color-basic-100: #F5F5F5;\n  --color-basic-200: #EAEAEA;\n  --color-basic-300: #E1E1E1;\n  --color-basic-400: #CACACA;\n  --color-basic-500: #B3B3B3;\n  --color-basic-600: #8E8E8E;\n  --color-basic-700: #6E6E6E;\n  --color-basic-800: #4B4B4B;\n  --color-basic-900: #2C2C2C;\n  --wolai-border-color: rgba(38, 22, 22, 0.10196078431372549);\n  --wolai-bi-link-background: rgba(208, 207, 207, 0.2);\n  --wolai-bi-link-hover-color: #F1EFEF;\n  --wolai-bi-link-line-color: #BBBBBB;\n  --wolai-bi-link-text-color: rgb(207, 86, 89);\n  --wolai-bi-link-text-background: rgba(204, 112, 112, 0.10196078431372549);\n  --wolai-bi-link-text-hover-background: rgba(204, 112, 112, 0.1803921568627451);\n  --wolai-bookmark-description-color: #878683;\n  --wolai-bookmark-node-border-color: #DDDDDD;\n  --wolai-bookmark-title-color: rgb(55, 53, 47);\n  --wolai-code-node-bg: #F6F5F5;\n  --wolai-code-node-color: #333940;\n  --wolai-desc-color: #BCB3B3;\n  --wolai-caption-color: #8E8E8E;\n  --wolai-hover-bg: #EEECEC;\n  --wolai-inline-code-background: rgba(208, 187, 193, 0.2);\n  --wolai-inline-code-color: rgb(85, 142, 218);\n  --wolai-link-node-color: #544C4C;\n  --wolai-link-node-hover-color: #231E1E;\n  --wolai-link-node-line-color: #E8E6E6;\n  --wolai-modal-color: #554C4C;\n  --wolai-quote-border-color: rgba(187, 187, 187, 0.5019607843137255);\n  --wolai-scrollbar-color: #D2CFCF;\n  --wolai-scrollbar-hover-color: #6C6A6A;\n  --wolai-table-border-color: #DDDDDD;\n  --wolai-table-header-bg: #F5F5F5;\n  --wolai-theme-color: rgb(207, 86, 89);\n  --wolai-title-color: #312727;\n  --wolai-color-default: rgb(33, 37, 41);\n  --wolai-color-gray: rgb(140, 140, 140);\n  --wolai-color-brown: rgb(163, 67, 31);\n  --wolai-color-orange: rgb(240, 107, 5);\n  --wolai-color-yellow: rgb(223, 171, 1);\n  --wolai-color-green: rgb(3, 135, 1);\n  --wolai-color-blue: rgb(5, 117, 197);\n  --wolai-color-purple: rgb(136, 49, 204);\n  --wolai-color-pink: rgb(200, 21, 182);\n  --wolai-color-red: rgb(233, 30, 44);\n  --wolai-color-blank-bg: #FFFFFF;\n  --wolai-color-cultured: rgba(140, 140, 140, 0.12156862745098039);\n  --wolai-color-lightgray: rgba(92, 92, 92, 0.2);\n  --wolai-color-apricot: rgba(163, 67, 31, 0.2);\n  --wolai-color-vivid_tangerine: rgba(240, 107, 5, 0.2);\n  --wolai-color-blond: rgba(240, 200, 0, 0.2);\n  --wolai-color-aero_blue: rgba(3, 135, 102, 0.2);\n  --wolai-color-uranian_blue: rgba(5, 117, 197, 0.2);\n  --wolai-color-lavender_blue: rgba(74, 82, 199, 0.2);\n  --wolai-color-pale_purple: rgba(136, 49, 204, 0.2);\n  --wolai-color-pink_lavender: rgba(200, 21, 182, 0.2);\n  --wolai-color-lightpink: rgba(233, 30, 44, 0.2);\n  --wolai-color-fluorescent_yellow: #FFF88F;\n  --wolai-color-fluorescent_green: #D3F8B6;\n  --wolai-color-fluorescent_green2: #AFFAD1;\n  --wolai-color-fluorescent_blue: #B1FFFF;\n  --wolai-color-fluorescent_purple: #FDBFFF;\n  --wolai-color-fluorescent_purple2: #D2CBFF;\n}\n@media (prefers-color-scheme: dark) {\n  :root {\n    --color-basic-50: #252525;\n    --color-basic-50-a: rgba(37, 37, 37, 0);\n    --color-basic-75: #2F2F2F;\n    --color-basic-100: #323232;\n    --color-basic-200: #3E3E3E;\n    --color-basic-300: #4A4A4A;\n    --color-basic-400: #5A5A5A;\n    --color-basic-500: #6E6E6E;\n    --color-basic-600: #909090;\n    --color-basic-700: #B9B9B9;\n    --color-basic-800: #BDBDBD;\n    --color-basic-900: #C2C2C2;\n    --wolai-border-color: #444444;\n    --wolai-bi-link-background: rgba(208, 207, 207, 0.2);\n    --wolai-bi-link-hover-color: #686868;\n    --wolai-bi-link-line-color: #888888;\n    --wolai-bi-link-text-color: rgb(245, 132, 132);\n    --wolai-bi-link-text-background: rgba(154, 101, 101, 0.3803921568627451);\n    --wolai-bi-link-text-hover-background: rgba(154, 101, 101, 0.5019607843137255);\n    --wolai-bookmark-description-color: #7F7F81;\n    --wolai-bookmark-node-border-color: #555555;\n    --wolai-bookmark-title-color: rgb(190, 190, 191);\n    --wolai-code-node-bg: #282A36;\n    --wolai-code-node-color: #F8F8F2;\n    --wolai-desc-color: #8F8F8F;\n    --wolai-caption-color: #909090;\n    --wolai-hover-bg: #2C2C2F;\n    --wolai-inline-code-background: rgba(208, 187, 193, 0.2);\n    --wolai-inline-code-color: #84AADC;\n    --wolai-link-node-color: rgba(255, 255, 255, 0.5019607843137255);\n    --wolai-link-node-hover-color: rgba(255, 255, 255, 0.7019607843137254);\n    --wolai-link-node-line-color: rgba(255, 255, 255, 0.2);\n    --wolai-modal-color: rgba(255, 255, 255, 0.7019607843137254);\n    --wolai-quote-border-color: #404040;\n    --wolai-scrollbar-color: #545454;\n    --wolai-scrollbar-hover-color: #C0BCBC;\n    --wolai-table-border-color: #555555;\n    --wolai-table-header-bg: #3A3A3A;\n    --wolai-theme-color: rgb(207, 86, 89);\n    --wolai-title-color: rgba(255, 255, 255, 0.7019607843137254);\n    --wolai-color-default: rgba(255, 255, 255, 0.8509803921568627);\n    --wolai-color-gray: rgb(102, 102, 102);\n    --wolai-color-brown: rgb(199, 103, 67);\n    --wolai-color-orange: rgb(219, 95, 0);\n    --wolai-color-yellow: rgb(200, 148, 44);\n    --wolai-color-green: rgb(27, 167, 132);\n    --wolai-color-blue: rgb(44, 134, 252);\n    --wolai-color-purple: rgb(184, 82, 235);\n    --wolai-color-pink: rgb(218, 78, 143);\n    --wolai-color-red: rgb(226, 80, 88);\n    --wolai-color-blank-bg: #252528;\n    --wolai-color-cultured: rgba(102, 102, 102, 0.2);\n    --wolai-color-lightgray: rgba(140, 140, 140, 0.2784313725490196);\n    --wolai-color-apricot: rgba(199, 103, 67, 0.2784313725490196);\n    --wolai-color-vivid_tangerine: rgba(219, 95, 0, 0.2784313725490196);\n    --wolai-color-blond: rgba(200, 148, 44, 0.2784313725490196);\n    --wolai-color-aero_blue: rgba(27, 167, 132, 0.2784313725490196);\n    --wolai-color-uranian_blue: rgba(44, 134, 252, 0.2784313725490196);\n    --wolai-color-lavender_blue: rgba(44, 134, 252, 0.2784313725490196);\n    --wolai-color-pale_purple: rgba(184, 82, 235, 0.2784313725490196);\n    --wolai-color-pink_lavender: rgba(218, 78, 143, 0.2784313725490196);\n    --wolai-color-lightpink: rgba(226, 80, 88, 0.2784313725490196);\n    --wolai-color-fluorescent_yellow: #8D8829;\n    --wolai-color-fluorescent_green: #568B2A;\n    --wolai-color-fluorescent_green2: #34805C;\n    --wolai-color-fluorescent_blue: #329096;\n    --wolai-color-fluorescent_purple: #843473;\n    --wolai-color-fluorescent_purple2: #5B309B;\n  }\n}\n:root {\n  --wolai-normal-font: \"\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\", zh quote\", -apple-system, BlinkMacSystemFont, \"PingFang SC\", \"Noto Sans\", \"Noto Sans CJK SC\", \"Microsoft YaHei\", 微软雅黑, sans-serif, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial;\n  --wolai-mono-font: SFMono-Regular, Consolas, \"Liberation Mono\", Menlo, monospace;\n  --wolai-serif-font: \"zh question mark\", \"Times New Roman\", \"Songti SC\", STSong, NSimSun, SimSun, FangSong, \"Nanum Myeongjo\", NanumMyeongjo, Batang, serif !important;\n  --wolai-kai-font: \"zh question mark\", \"Times New Roman\", \"Kaiti SC\", STKaiti, KaiTi !important;\n}\n.wolai-block {\n  border-radius: 3px;\n  font-weight: normal;\n}\n.block-frame {\n  border-color: var(--wolai-border-color);\n}\n.wolai-block>.wolai-block {\n  margin-left: 29px;\n}\ndiv.wolai-block.wolai-text>.wolai-block {\n  margin-left: 20px;\n}\n.placeholder {\n  opacity: 0.3;\n}\nbody {\n  background-color: var(--wolai-color-blank-bg);\n  font-family: var(--wolai-normal-font);\n}\n\n.font-serif {\n  font-family: var(--wolai-serif-font);\n}\n.font-kai {\n  font-family: var(--wolai-kai-font);\n}\n\nheader>div.image {\n  height: 120px;\n}\n\nheader>div.image.has {\n  height: 30vh;\n  background-size: cover;\n  background-position: 50% 50%;\n}\n\ndiv.title>div.banner {\n  height: 36px;\n  margin-bottom: 52px;\n}\n\ndiv.title>div.banner>div.icon {\n  margin-top: -36px;\n  width: 66px;\n  height: 66px;\n  font-size: 66px;\n  background-size: cover;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: var(--wolai-normal-font);\n}\n\ndiv.title>div.banner>div.icon.icon-image {\n  border-radius: 5px;\n}\n\ndiv.title>div.banner>div.icon[data-symbol]::before {\n  content: attr(data-symbol)\n}\nheader>div.title {\n  box-sizing: content-box;\n  max-width: 100%;\n  /* padding: 0 98px; */\n  margin: 0 auto;\n}\n@media only screen and (max-width: 760px) {\n  header>div.title {\n    max-width: inherit;\n    padding: 0 72px;\n  }\n}\nbody.full-width header>div.title {\n  max-width: 100%;\n}\ndiv.main-title {\n    font-size: 40px;\n    font-weight: 600;\n    line-height: 48px;\n    margin-bottom: 20px;\n}\ndiv.main-title::before {\n    content: attr(data-title);\n}\nbody.small-font div.main-title {\n    font-size: 34px;\n    line-height: 40.8px;\n}\n.wolai-serial-number {\n    color: var(--color-basic-500);\n    padding: 0 2px;\n    marginRight: 3px;\n  }\nfooter {\n  height: 80px;\n  padding: 20px 0 0 60px;\n}\n::-webkit-scrollbar {\n  width: 8px;\n  height: 8px;\n}\n::-webkit-scrollbar-thumb {\n  background-color: var(--wolai-scrollbar-color);\n  border-radius: 4px;\n}\n::-webkit-scrollbar-thumb:hover {\n  background-color: var(--wolai-scrollbar-hover-color);\n}\n::-webkit-scrollbar-track {\n  background-color: transparent;\n}\narticle {\n  box-sizing: content-box;\n  max-width: 100%;\n  /* padding: 0 98px; */\n  margin: 0 auto;\n}\nbody.full-width article {\n  max-width: 100%;\n}\n@media only screen and (max-width: 760px) {\n  article {\n    padding: 0 72px;\n  }\n}\n.wolai-block:first-child {\n  margin-top: 0 !important;\n}\n.wolai-block:last-child {\n  margin-bottom: 0 !important;\n}\nspan.katex-display {\n  font-size: 16px;\n  line-height: 24px;\n}\nbody.small-font span.katex-display {\n  font-size: 14px;\n  line-height: 21px;\n}\nh1 {\n  font-size: 30px;\n  line-height: 39px;\n  min-height: 36px;\n}\nbody.small-font h1 {\n  font-size: 26px;\n  line-height: 34px;\n  min-height: 22px;\n}\nh2 {\n  font-size: 24px;\n  line-height: 31px;\n  min-height: 28.8px;\n}\nbody.small-font h2 {\n  font-size: 22px;\n  line-height: 27px;\n  min-height: 22px;\n}\nh3 {\n  font-size: 20px;\n  line-height: 24px;\n  min-height: 24px;\n}\nbody.small-font h3 {\n  font-size: 18px;\n  line-height: 22px;\n  min-height: 22px;\n}\nh4 {\n  font-size: 18px;\n  line-height: 21.6px;\n  min-height: 21.6px;\n}\nbody.small-font h4 {\n  font-size: 16px;\n  line-height: 22px;\n  min-height: 22px;\n}\nh5 {\n  font-size: 16px;\n  line-height: 21.6px;\n  min-height: 21.6px;\n}\nbody.small-font h5 {\n  font-size: 14px;\n  line-height: 22px;\n  min-height: 22px;\n}\nh1{\n  margin-top: 36px;\n  margin-bottom: 13px;\n}\nbody.less-lead h1{\n  margin-top: 34px;\n  margin-bottom: 11px;\n}\nbody.more-lead h1{\n  margin-top: 38px;\n  margin-bottom: 15px;\n}\nh2{\n  margin-top: 26px;\n  margin-bottom: 9px;\n}\nbody.less-lead h2{\n  margin-top: 24px;\n  margin-bottom: 7px;\n}\nbody.more-lead h2{\n  margin-top: 28px;\n  margin-bottom: 11px;\n}\nh3{\n  margin-top: 16px;\n  margin-bottom: 9px;\n}\nbody.less-lead h3{\n  margin-top: 14px;\n  margin-bottom: 7px;\n}\nbody.more-lead h3{\n  margin-top: 18px;\n  margin-bottom: 11px;\n}\nh4{\n  margin-top: 13px;\n  margin-bottom: 9px;\n}\nbody.less-lead h4{\n  margin-top: 11px;\n  margin-bottom: 7px;\n}\nbody.more-lead h4{\n  margin-top: 15px;\n  margin-bottom: 11px;\n}\nh5{\n  margin-top: 13px;\n  margin-bottom: 9px;\n}\nbody.less-lead h5{\n  margin-top: 11px;\n  margin-bottom: 7px;\n}\nbody.more-lead h5{\n  margin-top: 15px;\n  margin-bottom: 11px;\n}\nh1, h2, h3, h4, h5 {\n  padding: 3px 2px;\n}\nh1.wolai-block, h2.wolai-block, h3.wolai-block, h4.wolai-block, h5.wolai-block {\n  font-weight: bold;\n}\nh1.wolai-block>.wolai-block,\nh2.wolai-block>.wolai-block,\nh3.wolai-block>.wolai-block,\nh4.wolai-block>.wolai-block,\nh5.wolai-block>.wolai-block{\n  margin-left: 20px;\n}\np { margin: 0; }\ndiv.wolai-text {\n}\ndiv.wolai-text {\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font div.wolai-text {\n  font-size: 14px;\n  line-height: 20px;\n  min-height: 20px;\n}\ndiv.wolai-text{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead div.wolai-text{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead div.wolai-text{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\ndiv.wolai-text { padding: 3px 2px; }\nfigure { margin: 0; }\n.wolai-center { display: flex;\njustify-content: center;\n}\n.wolai-left { display: flex;\njustify-content: flex-start;\n}\n.wolai-right { display: flex;\njustify-content: flex-end;\n}\nfigure{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead figure{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead figure{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\nfigure>img { display: block; max-width: 100%;\n  border-radius: 5px;\n}\nfigure>figcaption{\n  padding: 10px 5px;\n  text-align: inherit;\n  color: var(--wolai-caption-color);\n}\nfigure>figcaption{\n  font-size: 14px;\n  line-height: 26px;\n}\nbody.small-font figure>figcaption{\n  font-size: 12px;\n  line-height: 22px;\n}\nbody.less-lead figure>figcaption{\n  line-height: 24px;\n}\nbody.small-font.less-lead figure>figcaption{\n  line-height: 20px;\n}\nbody.more-lead figure>figcaption{\n  line-height: 29px;\n}\nbody.small-font.more-lead figure>figcaption{\n  line-height: 25px;\n}\ntable>caption{\n  padding: 10px 5px;\n  text-align: inherit;\n  color: var(--wolai-caption-color);\n}\ntable>caption{\n  font-size: 14px;\n  line-height: 26px;\n}\nbody.small-font table>caption{\n  font-size: 12px;\n  line-height: 22px;\n}\nbody.less-lead table>caption{\n  line-height: 24px;\n}\nbody.small-font.less-lead table>caption{\n  line-height: 20px;\n}\nbody.more-lead table>caption{\n  line-height: 29px;\n}\nbody.small-font.more-lead table>caption{\n  line-height: 25px;\n}\ncode-block>figcaption{\n  padding: 10px 5px;\n  text-align: inherit;\n  color: var(--wolai-caption-color);\n}\ncode-block>figcaption{\n  font-size: 14px;\n  line-height: 26px;\n}\nbody.small-font code-block>figcaption{\n  font-size: 12px;\n  line-height: 22px;\n}\nbody.less-lead code-block>figcaption{\n  line-height: 24px;\n}\nbody.small-font.less-lead code-block>figcaption{\n  line-height: 20px;\n}\nbody.more-lead code-block>figcaption{\n  line-height: 29px;\n}\nbody.small-font.more-lead code-block>figcaption{\n  line-height: 25px;\n}\nvideo {\n  max-width: 100%;\n  border-radius: 5px;\n}\naudio {\n  width: 100%;\n  border-radius: 5px;\n}\nfigure.stretch {\n  align-self: stretch;\n}\ndiv.wolai-pre {\n  background-color: var(--wolai-code-node-bg);\n  position: relative;\n}\ndiv.wolai-pre{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead div.wolai-pre{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead div.wolai-pre{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\ndiv.wolai-pre>pre {\n  font-family: var(--wolai-mono-font);\n  color: var(--wolai-code-node-color);\n  padding: 20px 10px;\n  overflow-x: auto;\n}\ndiv.wolai-pre>pre{\n  font-size: 14px;\n  line-height: 21px;\n}\nbody.small-font div.wolai-pre>pre{\n  font-size: 12px;\n  line-height: 18px;\n}\nbody.less-lead div.wolai-pre>pre{\n  line-height: 19px;\n}\nbody.small-font.less-lead div.wolai-pre>pre{\n  line-height: 16px;\n}\nbody.more-lead div.wolai-pre>pre{\n  line-height: 23px;\n}\nbody.small-font.more-lead div.wolai-pre>pre{\n  line-height: 20px;\n}\ndiv.wolai-pre>div.marker {\n  position: absolute;\n  right: 25px;\n  bottom: 12px;\n  font-size: 12px;\n  color: var(--wolai-modal-color);\n}\ndiv.wolai-pre>div.marker::before {\n  content: attr(data-lang);\n}\nblockquote {\n  position: relative; margin: 0;\n}\nblockquote {\n  padding: 8px 0 8px 20px;\n}\nblockquote{\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font blockquote{\n  font-size: 14px;\n  line-height: 22px;\n  min-height: 22px;\n}\nbody.less-lead blockquote{\n  line-height: 24px;\n  min-height: 24px;\n}\nbody.small-font.less-lead blockquote{\n  line-height: 20px;\n  min-height: 20px;\n}\nbody.more-lead blockquote{\n  line-height: 29px;\n  min-height: 29px;\n}\nbody.small-font.more-lead blockquote{\n  line-height: 25px;\n  min-height: 25px;\n}\nblockquote{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead blockquote{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead blockquote{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\nblockquote::before {\n  content: '';\n  position: absolute;\n  top: 5px;\n  left: 2px;\n  height: calc(100% - 5px - 5px);\n  width: 4px;\n  background: var(--wolai-quote-border-color);\n  border-radius: 1.5px;\n}\ndiv.wolai-row { display: flex; }\ndiv.wolai-row{\n  padding-top: 6px;\n  padding-bottom: 6px;\n}\nbody.less-lead div.wolai-row{\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\nbody.more-lead div.wolai-row{\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\ndiv.wolai-row>div.wolai-col {\n  margin-left: 40px;\n  flex-grow: 0.5; flex-basis: 0;\n}\ndiv.wolai-row>div.wolai-col:first-child {\n  margin-left: 0;\n}\ndiv.wolai-row>div.wolai-col{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.less-lead div.wolai-row>div.wolai-col{\n  margin-top: 1px;\n  margin-bottom: 1px;\n}\nbody.more-lead div.wolai-row>div.wolai-col{\n  margin-top: 3px;\n  margin-bottom: 3px;\n}\n@media only screen and (max-width: 768px) {\n  div.wolai-row {\n    flex-direction: column;\n  }\n  div.wolai-row>div.wolai-col {\n    margin-left: 0;\n  }\n}\naside {\n  position: relative;\n}\naside {\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font aside {\n  font-size: 14px;\n  line-height: 22px;\n  min-height: 22px;\n}\naside{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead aside{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead aside{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\naside>div.icon::before {\n  content: \"📌\";\n}\naside>div.icon[data-symbol]::before {\n  content: attr(data-symbol);\n}\naside>div.icon.icon-image{\n  border-radius: 3px;\n  background-size: contain;\n}\naside>div.icon.icon-image::before {\n  content: none;\n}\naside {\n  padding-left: 51px;\n  padding-top: 15px;\n  padding-right: 15px;\n  padding-bottom: 15px;\n}\naside>div.icon {\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 24px;\n  width: 26px;\n  height: 26px;\n  top: 15px;\n  left: 15px;\n}\nbody.small-font aside {\n  padding-left: 47px;\n}\nbody.small-font aside>div.icon {\n  font-size: 20px;\n  width: 22px;\n  height: 22px;\n}\nul { padding-left: 0; margin: 0; }\nul>li, ol>li { list-style: none; position: relative; }\nul>li, ol>li { border-radius: 3px; }\ndiv.wolai-block.wolai-task-block>input[type=\"checkbox\"] { display: none; }\ndiv.wolai-block.wolai-task-block>* {\n  margin-left: 0;\n}\ndiv.wolai-block.wolai-task-block{ margin-left: 0; position: relative; }\ndetails>summary::marker { content: ''}\nli{\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font li{\n  font-size: 14px;\n  line-height: 22px;\n  min-height: 22px;\n}\nbody.less-lead li{\n  line-height: 24px;\n  min-height: 24px;\n}\nbody.small-font.less-lead li{\n  line-height: 20px;\n  min-height: 20px;\n}\nbody.more-lead li{\n  line-height: 29px;\n  min-height: 29px;\n}\nbody.small-font.more-lead li{\n  line-height: 25px;\n  min-height: 25px;\n}\ndiv.wolai-block.wolai-task-block{\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font div.wolai-block.wolai-task-block{\n  font-size: 14px;\n  line-height: 22px;\n  min-height: 22px;\n}\nbody.less-lead div.wolai-block.wolai-task-block{\n  line-height: 24px;\n  min-height: 24px;\n}\nbody.small-font.less-lead div.wolai-block.wolai-task-block{\n  line-height: 20px;\n  min-height: 20px;\n}\nbody.more-lead div.wolai-block.wolai-task-block{\n  line-height: 29px;\n  min-height: 29px;\n}\nbody.small-font.more-lead div.wolai-block.wolai-task-block{\n  line-height: 25px;\n  min-height: 25px;\n}\ndetails{\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font details{\n  font-size: 14px;\n  line-height: 22px;\n  min-height: 22px;\n}\nbody.less-lead details{\n  line-height: 24px;\n  min-height: 24px;\n}\nbody.small-font.less-lead details{\n  line-height: 20px;\n  min-height: 20px;\n}\nbody.more-lead details{\n  line-height: 29px;\n  min-height: 29px;\n}\nbody.small-font.more-lead details{\n  line-height: 25px;\n  min-height: 25px;\n}\nul{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead ul{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead ul{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\nol{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead ol{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead ol{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\nul>li+li{\n  margin-top: 4px;\n}\nbody.less-lead ul>li+li{\n  margin-top: 2px;\n}\nbody.more-lead ul>li+li{\n  margin-top: 6px;\n}\nol>li+li{\n  margin-top: 4px;\n}\nbody.less-lead ol>li+li{\n  margin-top: 2px;\n}\nbody.more-lead ol>li+li{\n  margin-top: 6px;\n}\ndiv.wolai-block.wolai-task-block{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead div.wolai-block.wolai-task-block{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead div.wolai-block.wolai-task-block{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\ndetails{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead details{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead details{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\nol>li>div.marker {\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  text-align: center;\n}\nol { padding-left: 0; counter-reset: arabicCounter; }\nol>li>div.marker::before {\n  counter-increment: arabicCounter;\n  content: counter(arabicCounter) \".\";\n}\nul>li>div.marker,\ndiv.wolai-block.wolai-task-block>div.marker {\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  background-repeat: no-repeat;\n  background-position: center;\n}\ndetails>summary>div.marker {\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n  background-repeat: no-repeat;\n  background-position: center;\n}\nol>li>div.marker{\n  left: 3px;\n  top: 3px;\n}\nbody.small-font ol>li>div.marker{\n  top: 3px;\n}\nbody.less-lead ol>li>div.marker{\n  top: 3px;\n}\nbody.small-font.less-lead ol>li>div.marker{\n  top: 3px;\n}\nbody.more-lead ol>li>div.marker{\n  top: 3px;\n}\nbody.small-font.more-lead ol>li>div.marker{\n  top: 3px;\n}\nul>li>div.marker{\n  left: 3px;\n  top: 4px;\n}\nbody.small-font ul>li>div.marker{\n  top: 2px;\n}\nbody.less-lead ul>li>div.marker{\n  top: 3px;\n}\nbody.small-font.less-lead ul>li>div.marker{\n  top: 1px;\n}\nbody.more-lead ul>li>div.marker{\n  top: 5px;\n}\nbody.small-font.more-lead ul>li>div.marker{\n  top: 3.5px;\n}\ndiv.wolai-block.wolai-task-block>div.marker{\n  left: 3px;\n  top: 4px;\n}\nbody.small-font div.wolai-block.wolai-task-block>div.marker{\n  top: 2px;\n}\nbody.less-lead div.wolai-block.wolai-task-block>div.marker{\n  top: 3px;\n}\nbody.small-font.less-lead div.wolai-block.wolai-task-block>div.marker{\n  top: 1px;\n}\nbody.more-lead div.wolai-block.wolai-task-block>div.marker{\n  top: 5px;\n}\nbody.small-font.more-lead div.wolai-block.wolai-task-block>div.marker{\n  top: 3.5px;\n}\ndetails>summary>div.marker{\n  left: 1px;\n  top: 1px;\n}\nbody.small-font details>summary>div.marker{\n  top: -1px;\n}\nbody.less-lead details>summary>div.marker{\n  top: 0;\n}\nbody.small-font.less-lead details>summary>div.marker{\n  top: -2px;\n}\nbody.more-lead details>summary>div.marker{\n  top: 2px;\n}\nbody.small-font.more-lead details>summary>div.marker{\n  top: 1px;\n}\nul>li, ol>li, div.wolai-block.wolai-task-block {\n  padding: 3px 2px 3px 29px;\n}\ndetails {\n  padding: 3px 2px;\n}\ndetails>.wolai-block {\n  margin-left: 29px !important;\n}\ndetails>summary {\n  padding-left: 27px;\n}\ndetails>summary { position: relative; }\ndiv.wolai-block.wolai-task-block.checked {\n  opacity: 0.5;\n}\ndiv.wolai-block.wolai-task-block.checked>.wrapper {\n  text-decoration: line-through;\n}\ndetails>summary>div.marker {\n    height:100%;\n    align-items: center;\n    justify-content: center;\n  }\ndetails>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(33, 37, 41); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(33, 37, 41); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.def-color>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(33, 37, 41); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.def-color[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(33, 37, 41); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.gray>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(140, 140, 140); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.gray[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(140, 140, 140); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.brown>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(163, 67, 31); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.brown[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(163, 67, 31); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.orange>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(240, 107, 5); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.orange[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(240, 107, 5); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.yellow>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(223, 171, 1); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.yellow[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(223, 171, 1); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.green>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(3, 135, 1); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.green[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(3, 135, 1); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.blue>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(5, 117, 197); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.blue[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(5, 117, 197); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.purple>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(136, 49, 204); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.purple[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(136, 49, 204); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.pink>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(200, 21, 182); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.pink[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(200, 21, 182); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.red>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(233, 30, 44); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.red[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(233, 30, 44); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\n@media (prefers-color-scheme: dark) {\ndetails>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgba(255, 255, 255, 0.8509803921568627); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgba(255, 255, 255, 0.8509803921568627); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.def-color>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgba(255, 255, 255, 0.8509803921568627); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.def-color[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgba(255, 255, 255, 0.8509803921568627); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.gray>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(102, 102, 102); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.gray[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(102, 102, 102); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.brown>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(199, 103, 67); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.brown[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(199, 103, 67); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.orange>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(219, 95, 0); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.orange[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(219, 95, 0); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.yellow>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(200, 148, 44); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.yellow[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(200, 148, 44); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.green>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(27, 167, 132); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.green[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(27, 167, 132); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.blue>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(44, 134, 252); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.blue[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(44, 134, 252); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.purple>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(184, 82, 235); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.purple[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(184, 82, 235); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.pink>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(218, 78, 143); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.pink[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(218, 78, 143); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.red>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(226, 80, 88); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.red[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(226, 80, 88); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\n}\nhr {\n  display: block;\n  border-top-color: transparent;\n  border-left-color: transparent;\n  border-right-color: transparent;\n  border-bottom: 1px solid var(--wolai-border-color) !important;\n}\nhr{\n  margin-top: 10.5px;\n  margin-bottom: 10.5px;\n}\nbody.less-lead hr{\n  margin-top: 8.5px;\n  margin-bottom: 8.5px;\n}\nbody.more-lead hr{\n  margin-top: 12.5px;\n  margin-bottom: 12.5px;\n}\ndiv.wolai-block.wolai-simple-table{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead div.wolai-block.wolai-simple-table{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead div.wolai-block.wolai-simple-table{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\ndiv.wolai-block.wolai-simple-table {\n  display: flex;\n}\ntable {\n  border-collapse: separate;\n  border: 0 solid transparent;\n  border-spacing: 0;\n  padding: 0;\n  margin: 6px;\n  border-radius: 3px;\n  box-shadow: 0 0 0 1px var(--wolai-table-border-color);\n}\ntable>caption {\n  caption-side: bottom;\n}\ntable>thead {\n  background: var(--wolai-table-header-bg);\n  border-radius: 3px;\n}\ntable td, table th {\n  font-weight: inherit;\n  text-align: inherit;\n  padding: 5px 10px;\n  width: 100px;\n}\ntable td {\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font table td {\n  font-size: 14px;\n  line-height: 20px;\n  min-height: 20px;\n}\ntable th {\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font table th {\n  font-size: 14px;\n  line-height: 20px;\n  min-height: 20px;\n}\ntr>td, tr>th {\n  border: 0 solid transparent;\n  border-left: 1px solid var(--wolai-table-border-color);\n  border-top: 1px solid var(--wolai-table-border-color);\n}\ntr>td:first-child,\ntr>th:first-child {\n  border-left: 0 transparent;\n}\ntable tr:first-child>td, table tr:first-child>th {\n  border-top: 0 transparent;\n}\ntable>thead+tbody>tr:first-child>td {\n  border-top: 1px solid var(--wolai-table-border-color);\n}\ntable tr:first-child>td:first-child,\ntable tr:first-child>th:first-child {\n  border-top-left-radius: 3px;\n}\ntable tr:first-child>td:last-child,\ntable tr:first-child>th:last-child {\n  border-top-right-radius: 3px;\n}\ntable>thead+tbody>tr:first-child>td:first-child,\ntable>thead+tbody>tr:first-child>td:last-child {\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n}\ntable tr:last-child>td:first-child,\ntable tr:only-child>th:first-child {\n  border-bottom-left-radius: 3px;\n}\ntable tr:last-child>td:last-child,\ntable tr:only-child>th:last-child {\n  border-bottom-right-radius: 3px;\n}\nprogress {\n  appearance: none; -webkit-appearance: none; width: 100%;\n}\ndiv.wolai-block.wolai-progress>progress {\n  display: none;\n}\ndiv.wolai-block.wolai-progress>div.display {\n  display: flex; align-items: center;\n  height: 34px;\n}\nbody.small-font div.wolai-block.wolai-progress>div.display {\n  height: 30px;\n}\ndiv.wolai-block.wolai-progress>div.display>div.marker {\n  display: flex; justify-content: center; align-items: center;\n  flex-shrink: 0;\n  width: 26px;\n  margin-left: 2px;\n  margin-right: 0;\n  padding-left: 0;\n  padding-right: 0;\n}\ndiv.wolai-block.wolai-progress>div.display>.content {\n  overflow: hidden; position: relative; flex: 1;\n  height: 10px;\n  border-radius: 5px;\n}\nbody.small-font div.wolai-block.wolai-progress>div.display>.content {\n  height: 8px;\n  border-radius: 4px;\n}\ndiv.wolai-block.wolai-progress>div.display>.content>.miu {\n  position: absolute; left: 0; top: 0; width: 0; height: 100%;\n  background: var(--wolai-theme-color);\n}\ndiv.wolai-block.wolai-progress>div.display>.content>.er {\n  position: absolute; left: 0; top: 0; width: 100%; height: 100%;\n  background: var(--wolai-theme-color);\n  opacity: 0.15;\n}\ndiv.wolai-block.wolai-progress>div.display>.digit {\n  color: var(--wolai-desc-color);\n  text-align: left;\n  margin-left: 8px;\n  margin-right: 2px;\n  width: 44px;\n  font-variant-numeric: tabular-nums;\n}\nbody.small-font div.wolai-block.wolai-progress>div.display>.digit {\n  font-size: 14px;\n  line-height: 14px;\n}\ndiv.wolai-block.wolai-progress>div.display>.digit[data-value]::before {\n  content: attr(data-value) \"%\";\n}\ndiv.wolai-block.wolai-bookmark {\n  position: relative;\n  border: 1px solid var(--wolai-bookmark-node-border-color);\n  border-radius: 4px;\n  overflow: hidden;\n}\n@media (prefers-color-scheme: dark) {\n  div.wolai-block.wolai-bookmark {\n    background-color: var(--wolai-color-cultured);\n  }\n}\ndiv.wolai-block.wolai-bookmark{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead div.wolai-block.wolai-bookmark{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead div.wolai-block.wolai-bookmark{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\ndiv.wolai-block.wolai-bookmark>a {\n  position: absolute;\n  width: 100%; height: 100%;\n  color: transparent;\n  user-select: none;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box {\n  display: flex;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane {\n  padding: 16px;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane {\n  flex: 0.7;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane div[data-title] {\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 19px;\n  max-height: 19px;\n  margin-bottom: 3px;\n  color: var(--wolai-bookmark-title-color);\n  overflow: hidden;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane div[data-title]::before {\n  content: attr(data-title);\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane div[data-desc] {\n  font-size: 12px;\n  line-height: 19px;\n  max-height: 38px;\n  color: var(--wolai-bookmark-description-color);\n  overflow: hidden;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane div[data-desc]::before {\n  content: attr(data-desc);\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane>div.icon-host {\n  display: flex;\n  align-items: center;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane>div.icon-host>div.icon {\n  width: 14px;\n  height: 14px;\n  margin-right: 8px;\n  background-size: cover;\n  background-position: 50% 50%;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane>div.icon-host div[data-hostname] {\n  font-size: 12px;\n  line-height: 16px;\n  max-height: 16px;\n  color: var(--wolai-bookmark-title-color);\n  overflow: hidden;\n  flex-grow: 1;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane>div.icon-host div[data-hostname]::before {\n  content: attr(data-hostname);\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.preview-pane {\n  flex: 0.3;\n  background-size: cover;\n  background-position: 50% 50%;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.preview-pane[data-image] {\n  background-image: attr(data-image)\n}\ndiv.wolai-file-block.wolai-block,\ndiv.wolai-sub-page.wolai-block {\n  position: relative;\n}\ndiv.wolai-file-block.wolai-block {\n  padding: 3px 2px 3px 30px;\n}\ndiv.wolai-sub-page.wolai-block {\n  padding: 3px 2px 3px 30px;\n}\ndiv.wolai-file-block.wolai-block {\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font div.wolai-file-block.wolai-block {\n  font-size: 14px;\n  line-height: 20px;\n  min-height: 20px;\n}\ndiv.wolai-file-block.wolai-block{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead div.wolai-file-block.wolai-block{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead div.wolai-file-block.wolai-block{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\ndiv.wolai-sub-page.wolai-block {\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font div.wolai-sub-page.wolai-block {\n  font-size: 14px;\n  line-height: 20px;\n  min-height: 20px;\n}\ndiv.wolai-sub-page.wolai-block{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead div.wolai-sub-page.wolai-block{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead div.wolai-sub-page.wolai-block{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\ndiv.wolai-file-block.wolai-block:hover,\ndiv.wolai-sub-page.wolai-block:hover {\n  background-color: var(--wolai-hover-bg);\n}\ndiv.wolai-file-block.wolai-block a,\ndiv.wolai-sub-page.wolai-block a {\n  color: var(--wolai-title-color);\n  display: block;\n  text-decoration: none;\n}\ndiv.wolai-sub-page.wolai-block a {\n  font-weight: bold;\n}\ndiv.wolai-sub-page.wolai-block a>span {\n  display: inline-block;\n  line-height: 1.5;\n  border-bottom: 1px solid var(--wolai-border-color);\n}\ndiv.wolai-file-block.wolai-block a>.file-size {\n  font-size: 12px;\n  margin-left: 4px;\n  color: var(--wolai-title-color);\n  opacity: 0.65;\n}\nbody.small-font div.wolai-file-block.wolai-block a>.file-size {\n  font-size: 12px;\n}\ndiv.wolai-file-block.wolai-block a>.file-size::before {\n  content: attr(data-size);\n}\ndiv.wolai-file-block.wolai-block>div.file-icon {\n  position: absolute;\n  left: 3px;\n  top: 4px;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E%3Cpath d='M12.157 2.2a2.8 2.8 0 011.856.703l.148.142 4.843 4.965a2.8 2.8 0 01.789 1.756l.007.199V19a2.8 2.8 0 01-2.63 2.795L17 21.8H7a2.8 2.8 0 01-2.795-2.63L4.2 19V5a2.8 2.8 0 012.63-2.795L7 2.2h5.157zM11.2 3.8H7a1.2 1.2 0 00-1.194 1.077L5.8 5v14a1.2 1.2 0 001.077 1.194L7 20.2h10a1.2 1.2 0 001.194-1.077L18.2 19v-8.2H13a1.8 1.8 0 01-1.794-1.652L11.2 9V3.8zm1.816.362a1.2 1.2 0 00-.215-.175L12.8 9a.2.2 0 00.147.193L13 9.2h4.923l-.064-.073-4.843-4.965z' fill='none' style='fill: rgb(33, 37, 41);' fill-rule='evenodd'%3E%3C/path%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: center;\n}\n@media (prefers-color-scheme: dark) {\n  div.wolai-file-block.wolai-block>div.file-icon {\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E%3Cpath d='M12.157 2.2a2.8 2.8 0 011.856.703l.148.142 4.843 4.965a2.8 2.8 0 01.789 1.756l.007.199V19a2.8 2.8 0 01-2.63 2.795L17 21.8H7a2.8 2.8 0 01-2.795-2.63L4.2 19V5a2.8 2.8 0 012.63-2.795L7 2.2h5.157zM11.2 3.8H7a1.2 1.2 0 00-1.194 1.077L5.8 5v14a1.2 1.2 0 001.077 1.194L7 20.2h10a1.2 1.2 0 001.194-1.077L18.2 19v-8.2H13a1.8 1.8 0 01-1.794-1.652L11.2 9V3.8zm1.816.362a1.2 1.2 0 00-.215-.175L12.8 9a.2.2 0 00.147.193L13 9.2h4.923l-.064-.073-4.843-4.965z' fill='none' style='fill: rgba(255, 255, 255, 0.7);' fill-rule='evenodd'%3E%3C/path%3E%3C/svg%3E\");\n  }\n}\ndiv.wolai-sub-page.wolai-block>div.page-icon {\n  position: absolute;\n  left: 5px;\n  top: 7px;\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 20 20'%3E%3Cpath d='M14.202 18c1.32 0 1.8-.138 2.282-.396a2.692 2.692 0 001.12-1.12l.046-.088c.229-.456.35-.954.35-2.194V5.798l-.002-.23c-.015-1.148-.151-1.599-.394-2.052a2.692 2.692 0 00-1.12-1.12l-.088-.046c-.456-.229-.954-.35-2.194-.35H5.798l-.23.002c-1.148.015-1.599.151-2.052.394a2.692 2.692 0 00-1.12 1.12l-.046.088c-.221.441-.342.922-.35 2.077v8.52c0 1.321.138 1.8.396 2.283.258.483.637.862 1.12 1.12l.088.046c.441.221.922.342 2.077.35h8.52zm.094-1.778H5.704l-.256-.003c-.655-.012-.873-.064-1.094-.182a.916.916 0 01-.39-.391c-.133-.247-.183-.491-.186-1.35V5.704l.003-.256c.012-.655.064-.873.182-1.094a.916.916 0 01.391-.39c.247-.133.491-.183 1.35-.186h8.498c.935 0 1.188.049 1.444.185a.916.916 0 01.39.391c.133.247.183.491.186 1.35v8.498c0 .935-.049 1.188-.185 1.444a.916.916 0 01-.391.39c-.247.133-.491.183-1.35.186zm-2.413-7.555V6.889H5.556v1.778h6.327zm2.505 4.44v-1.779H5.556v1.778h8.832z' fill='rgb(33, 37, 41)' fill-rule='nonzero'%3E%3C/path%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: contain;\n  border-radius: 3px;\n}\n@media (prefers-color-scheme: dark) {\n  div.wolai-sub-page.wolai-block>div.page-icon {\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 20 20'%3E%3Cpath d='M14.202 18c1.32 0 1.8-.138 2.282-.396a2.692 2.692 0 001.12-1.12l.046-.088c.229-.456.35-.954.35-2.194V5.798l-.002-.23c-.015-1.148-.151-1.599-.394-2.052a2.692 2.692 0 00-1.12-1.12l-.088-.046c-.456-.229-.954-.35-2.194-.35H5.798l-.23.002c-1.148.015-1.599.151-2.052.394a2.692 2.692 0 00-1.12 1.12l-.046.088c-.221.441-.342.922-.35 2.077v8.52c0 1.321.138 1.8.396 2.283.258.483.637.862 1.12 1.12l.088.046c.441.221.922.342 2.077.35h8.52zm.094-1.778H5.704l-.256-.003c-.655-.012-.873-.064-1.094-.182a.916.916 0 01-.39-.391c-.133-.247-.183-.491-.186-1.35V5.704l.003-.256c.012-.655.064-.873.182-1.094a.916.916 0 01.391-.39c.247-.133.491-.183 1.35-.186h8.498c.935 0 1.188.049 1.444.185a.916.916 0 01.39.391c.133.247.183.491.186 1.35v8.498c0 .935-.049 1.188-.185 1.444a.916.916 0 01-.391.39c-.247.133-.491.183-1.35.186zm-2.413-7.555V6.889H5.556v1.778h6.327zm2.505 4.44v-1.779H5.556v1.778h8.832z' fill='rgb(255, 255, 255, 0.7)' fill-rule='nonzero'%3E%3C/path%3E%3C/svg%3E\");\n  }\n}\ndiv.wolai-sub-page.wolai-block>div.page-icon[data-symbol] {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-image: none;\n  font-size: 18px;\n}\ndiv.wolai-sub-page.wolai-block>div.page-icon[data-symbol]::before {\n  content: attr(data-symbol);\n}\n.wolai-block:not(ul, ol, div.wolai-task-block, div.wolai-text)>.block-ref:not(li) {\n  margin-left: 29px;\n}\ndiv.wolai-block.wolai-text>.block-ref {\n  margin-left: 20px;\n}\n.block-ref {\n  position: relative;\n}\n.block-ref>div.decorator {\n  position: absolute;\n  width: 1px;\n  height: 100%;\n  left: -2px;\n  top: 0;\n  border-left: 1px dashed var(--wolai-bi-link-line-color);\n}\nli.block-ref>div.decorator {\n  left: -2px;\n  top: -1px;\n  height: calc(100% + 2px);\n}\na {\n  text-decoration: none;\n  color: var(--wolai-color-default);\n}\n.inline-wrap span, span.inline-wrap {\n  white-space: pre-wrap;\n  word-break: break-word;\n}\nspan>a>span{\n    border-bottom: 1px solid var(--wolai-link-node-line-color);\n}\nspan>a>span:hover {\n  border-bottom-color: var(--wolai-link-node-hover-color);\n}\ncode {\n    padding: 0.2em 0.4em;\n    font-family: var(--wolai-mono-font);\n    font-size: 85%;\n    color: var(--wolai-inline-code-color);\n    background-color: var(--wolai-inline-code-background);\n    border-radius: 4px;\n}\nspan.jill { padding: 0 0.125em }\nspan>a.wolai-bi-link>span {\n  background-color: var(--wolai-bi-link-background);\n  border-radius: 2px 2px 0 0;\n  margin: 0 2px;\n  padding: 0 2px;\n}\nspan>a.wolai-bi-link:hover>span {\n  background-color: var(--wolai-bi-link-hover-color);\n}\nspan>a.wolai-bi-link>span {\n  border-bottom: 1px dashed var(--wolai-bi-link-line-color);\n}\nspan u {\n  text-decoration: none;\n  border-bottom: 1px solid var(--wolai-color-default);\n}\n.def-color u, u.def-color {\n  border-bottom-color: var(--wolai-color-default);\n}\n.gray u, u.gray {\n  border-bottom-color: var(--wolai-color-gray);\n}\n.brown u, u.brown {\n  border-bottom-color: var(--wolai-color-brown);\n}\n.orange u, u.orange {\n  border-bottom-color: var(--wolai-color-orange);\n}\n.yellow u, u.yellow {\n  border-bottom-color: var(--wolai-color-yellow);\n}\n.green u, u.green {\n  border-bottom-color: var(--wolai-color-green);\n}\n.blue u, u.blue {\n  border-bottom-color: var(--wolai-color-blue);\n}\n.purple u, u.purple {\n  border-bottom-color: var(--wolai-color-purple);\n}\n.pink u, u.pink {\n  border-bottom-color: var(--wolai-color-pink);\n}\n.red u, u.red {\n  border-bottom-color: var(--wolai-color-red);\n}\nspan.embed-jiu {\n  width: 18px;\n  height: 20px;\n  margin-right: 1px;\n  display: inline-block;\n  background-repeat: no-repeat;\n  background-size: contain;\n  vertical-align: middle;\n}\nh1 span.embed-jiu {\n  width: 30px;\n  height: 32px;\n}\nh2 span.embed-jiu {\n  width: 24px;\n  height: 26px;\n}\nh3 span.embed-jiu {\n  width: 20px;\n  height: 22px;\n}\nspan.embed-enum {\n  text-align: center;\n  vertical-align: inherit;\n}\nspan.embed-enum::before {\n  content: '1.'\n}\nspan.embed-quote {\n  margin-left: 7px;\n  width: 11px;\n  border-left-width: 4px;\n  border-left-style: solid;\n  border-left-color: var(--wolai-quote-border-color);\n}\nspan.embed-h1 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.787 18.523c.478 0 .8-.322.8-.811v-6.263c0-.558-.343-.907-.918-.907-.333 0-.59.048-.967.306l-1.536 1.063c-.252.177-.35.36-.35.607 0 .344.243.58.57.58a.66.66 0 0 0 .43-.145l1.133-.79h.032v5.549c0 .489.328.811.806.811z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h2 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM16.8 17.91h4.291c.42 0 .672-.263.672-.644 0-.392-.253-.645-.672-.645H18.17v-.032l1.676-1.611c1.268-1.198 1.73-1.789 1.73-2.734 0-1.332-1.107-2.256-2.75-2.256-1.467 0-2.439.8-2.702 1.66-.038.112-.059.225-.059.349 0 .402.258.66.693.66.349 0 .537-.15.72-.472.279-.623.709-.935 1.332-.935.692 0 1.187.457 1.187 1.096 0 .558-.247.934-1.204 1.853l-2.31 2.207c-.327.301-.445.505-.445.811 0 .408.253.693.763.693z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h3 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM18.427 18.582c1.8 0 3.018-.935 3.018-2.342 0-1.069-.746-1.745-1.901-1.853v-.032c.913-.188 1.617-.833 1.617-1.815 0-1.241-1.107-2.052-2.745-2.052-1.37 0-2.25.634-2.594 1.39-.08.184-.118.34-.118.522 0 .392.23.655.682.655.365 0 .553-.134.73-.5.253-.547.65-.821 1.305-.821.785 0 1.204.413 1.204 1.037 0 .633-.527 1.074-1.338 1.074h-.317c-.392 0-.617.236-.617.574 0 .35.225.58.617.58h.339c.94 0 1.493.42 1.487 1.171 0 .645-.547 1.107-1.342 1.107-.806 0-1.225-.322-1.499-.865-.161-.295-.365-.424-.687-.424-.446 0-.715.263-.715.682 0 .161.038.333.124.51.365.763 1.273 1.402 2.75 1.402z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h4 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM20.011 18.523c.446 0 .774-.274.774-.79v-.746h.44c.424 0 .666-.263.666-.645 0-.381-.236-.65-.666-.65h-.44v-3.98c0-.725-.516-1.17-1.338-1.17-.655 0-1.047.268-1.584 1.09-.843 1.251-1.617 2.433-2.149 3.389-.241.424-.338.725-.338 1.058 0 .543.392.908.978.908h2.89v.746c0 .516.321.79.767.79zm-.736-2.788h-2.481v-.043c.628-1.17 1.343-2.26 2.45-3.856h.031v3.9z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h5 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM18.523 18.582c1.768 0 2.998-1.117 2.998-2.771 0-1.478-1.053-2.52-2.536-2.52-.79 0-1.423.312-1.74.812h-.032l.183-2.154h3.061c.408 0 .666-.253.666-.645s-.263-.644-.666-.644h-3.4c-.628 0-.967.263-1.02.918l-.226 2.841c-.005.027-.005.043-.005.065-.022.435.23.806.762.806.36 0 .521-.081.838-.376.274-.264.66-.462 1.123-.462.843 0 1.445.58 1.445 1.396 0 .838-.607 1.445-1.45 1.445-.699 0-1.155-.338-1.435-.897-.182-.29-.386-.403-.709-.403-.419 0-.676.247-.676.66 0 .194.048.36.129.533.386.821 1.46 1.396 2.69 1.396z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h6 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.674 18.582c1.73 0 2.986-1.144 2.986-2.75 0-1.456-1.026-2.524-2.524-2.524-1.048 0-1.81.526-2.111 1.246h-.032v-.08c.01-1.655.574-2.708 1.68-2.708.533 0 .909.199 1.263.645.236.274.43.413.752.413.424 0 .677-.28.677-.639a.954.954 0 0 0-.113-.435c-.365-.725-1.29-1.268-2.573-1.268-2.014 0-3.239 1.547-3.239 4.115 0 .902.162 1.67.457 2.272.57 1.138 1.547 1.713 2.777 1.713zm-.022-1.289a1.404 1.404 0 0 1-1.418-1.423c0-.79.613-1.365 1.434-1.365.817 0 1.413.58 1.413 1.397-.005.779-.634 1.391-1.429 1.391z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h7 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM18.025 18.523c.349 0 .548-.129.725-.473l2.874-5.548c.209-.408.306-.666.306-.956 0-.553-.403-.886-.967-.886H16.95c-.387 0-.672.252-.672.639 0 .392.285.65.672.65h3.34v.032l-2.868 5.371a.988.988 0 0 0-.14.51c0 .376.285.66.742.66z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h8 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.588 18.582c1.848 0 3.142-.924 3.142-2.267 0-1.02-.747-1.772-1.805-1.982v-.032c.908-.23 1.52-.891 1.52-1.724 0-1.214-1.176-2.09-2.857-2.09-1.681 0-2.863.882-2.863 2.085 0 .843.618 1.504 1.53 1.73v.031c-1.057.205-1.81.957-1.81 1.977 0 1.343 1.29 2.272 3.143 2.272zm0-4.77c-.736 0-1.257-.44-1.257-1.074 0-.639.521-1.08 1.257-1.08.73 0 1.257.441 1.257 1.08 0 .634-.527 1.075-1.257 1.075zm0 3.588c-.854 0-1.45-.504-1.45-1.208 0-.698.596-1.198 1.45-1.198s1.445.5 1.445 1.198c0 .704-.591 1.208-1.445 1.208z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h9 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.357 18.582c2.057 0 3.287-1.536 3.287-4.114 0-.908-.161-1.676-.457-2.272-.563-1.139-1.541-1.714-2.776-1.714-1.73 0-2.987 1.144-2.987 2.75 0 1.51 1.139 2.53 2.573 2.53 1.02 0 1.783-.51 2.063-1.257h.032v.086c-.006 1.617-.532 2.707-1.676 2.707-.585 0-.93-.21-1.289-.644-.242-.269-.424-.414-.752-.414-.43 0-.671.274-.671.634 0 .14.032.274.107.424.322.693 1.262 1.284 2.546 1.284zm.059-4.023c-.811 0-1.413-.58-1.413-1.391 0-.784.629-1.391 1.43-1.391.8 0 1.422.618 1.422 1.418 0 .79-.617 1.364-1.439 1.364z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-bullet {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Ccircle fill='%23554C4C' cx='10' cy='10' r='3'%3E%3C/circle%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-toggle {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M11.460903,7.1826499 L15.3597015,11.981171 C15.7908888,12.5118631 15.7102242,13.2916205 15.1795321,13.7228078 C14.9588408,13.9021195 14.6831527,14 14.3987984,14 L6.60120158,14 C5.91742046,14 5.36310634,13.4456859 5.36310634,12.7619048 C5.36310634,12.4775505 5.46098681,12.2018624 5.64029853,11.981171 L9.53909695,7.1826499 C9.97028428,6.65195781 10.7500416,6.57129325 11.2807337,7.00248058 C11.3468265,7.056181 11.4072026,7.11655708 11.460903,7.1826499 Z' fill='%23554C4C' transform='translate(10.500000, 10.000000) rotate(-270.000000) translate(-10.500000, -10.000000) '%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-task {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Crect stroke='%23554C4C' stroke-width='1.5' x='2.75' y='2.75' width='14.5' height='14.5' rx='2'%3E%3C/rect%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-untask {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(5.000000, 5.000000)' fill='%23554C4C' fill-rule='nonzero'%3E%3Cpath d='M3.95468589,10 C3.60453141,10 3.33676622,9.8409332 3.05870237,9.4909862 L0.24716787,5.93849417 C0.09268795,5.747614 0,5.50371156 0,5.27041357 C0,4.7826087 0.38105046,4.40084836 0.83419156,4.40084836 C1.12255407,4.40084836 1.36972194,4.5068929 1.59629248,4.82502651 L3.91349125,7.8791092 L8.3934089,0.48780488 C8.5890834,0.15906681 8.8568486,0 9.1246138,0 C9.5777549,0 10,0.30752916 10,0.80593849 C10,1.03923648 9.8867147,1.28313892 9.7528321,1.495228 L4.79917611,9.4803818 C4.58290422,9.8303287 4.29454171,10 3.95468589,10 Z'%3E%3C/path%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-callout {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M15.7166667,10.720413 C16.3609989,10.720413 16.8833333,11.2427475 16.8833333,11.8870797 L16.8833333,11.8870797 L16.8833333,15.5037464 C16.8833333,16.1480786 16.3609989,16.670413 15.7166667,16.670413 L15.7166667,16.670413 L4.28333333,16.670413 C3.63900111,16.670413 3.11666667,16.1480786 3.11666667,15.5037464 L3.11666667,15.5037464 L3.11666667,11.8870797 C3.11666667,11.2427475 3.63900111,10.720413 4.28333333,10.720413 L4.28333333,10.720413 Z M15.7166667,11.8870797 L4.28333333,11.8870797 L4.28333333,15.5037464 L15.7166667,15.5037464 L15.7166667,11.8870797 Z M16.4166667,6.87041303 C16.7388328,6.87041303 17,7.13158026 17,7.45374636 C17,7.77591246 16.7388328,8.03707969 16.4166667,8.03707969 L3.58333333,8.03707969 C3.26116723,8.03707969 3,7.77591246 3,7.45374636 C3,7.13158026 3.26116723,6.87041303 3.58333333,6.87041303 L16.4166667,6.87041303 Z M16.4166667,3 C16.7388328,3 17,3.26116723 17,3.58333333 C17,3.90549944 16.7388328,4.16666667 16.4166667,4.16666667 L3.58333333,4.16666667 C3.26116723,4.16666667 3,3.90549944 3,3.58333333 C3,3.26116723 3.26116723,3 3.58333333,3 L16.4166667,3 Z' fill='%23554C4C' fill-rule='nonzero'%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-code {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M11.6166822,3.83364946 C11.9377497,3.91967925 12.1282855,4.24969686 12.0422557,4.57076443 L9.11376613,15.5000363 C9.02773634,15.8211038 8.69771872,16.0116396 8.37665116,15.9256098 C8.0555836,15.83958 7.86504784,15.5095624 7.95107764,15.1884948 L10.8795672,4.25922298 C10.965597,3.93815542 11.2956146,3.74761966 11.6166822,3.83364946 Z M6.57038834,5.4184093 C6.80542611,5.65344707 6.80542611,6.03451858 6.57038834,6.26955635 L3.08021403,9.75873548 L6.57038834,13.2489622 C6.80542611,13.4839999 6.80542611,13.8650715 6.57038834,14.1001092 C6.33535057,14.335147 5.95427906,14.335147 5.71924129,14.1001092 L1.80396485,10.1848328 C1.56892708,9.94979502 1.56892708,9.5687235 1.80396485,9.33368573 L5.71924129,5.4184093 C5.95427906,5.18337153 6.33535057,5.18337153 6.57038834,5.4184093 Z M13.422945,5.4184093 C13.6579828,5.18337153 14.0390543,5.18337153 14.274092,5.4184093 L14.274092,5.4184093 L18.1893685,9.33368573 C18.4244062,9.5687235 18.4244062,9.94979502 18.1893685,10.1848328 L18.1893685,10.1848328 L14.274092,14.1001092 C14.0390543,14.335147 13.6579828,14.335147 13.422945,14.1001092 C13.1879072,13.8650715 13.1879072,13.4839999 13.422945,13.2489622 L13.422945,13.2489622 L16.9131193,9.75873548 L13.422945,6.26955635 C13.1879072,6.03451858 13.1879072,5.65344707 13.422945,5.4184093 Z' fill='%23554C4C'%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-simp-table {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M14.7727273,2.5 C16.2789584,2.5 17.5,3.72104159 17.5,5.22727273 L17.5,14.7727273 C17.5,16.2789584 16.2789584,17.5 14.7727273,17.5 L5.22727273,17.5 C3.72104159,17.5 2.5,16.2789584 2.5,14.7727273 L2.5,5.22727273 C2.5,3.72104159 3.72104159,2.5 5.22727273,2.5 L14.7727273,2.5 Z M3.77186238,12.4423287 L3.77272727,14.7727273 C3.77272727,15.5473604 4.37826423,16.1805629 5.14180713,16.2248035 L5.22727273,16.2272727 L7.55767127,16.2281376 C7.53307493,16.1800392 7.51564204,16.1273634 7.50675303,16.0716375 L7.5,15.9859521 L7.499,12.5 L4.01404787,12.5 C3.92645682,12.5 3.84401,12.4792232 3.77186238,12.4423287 Z M11.5,12.5 L8.499,12.5 L8.5,15.9859521 C8.5,16.0735432 8.47922323,16.15599 8.44213461,16.2281376 L11.5576713,16.2281376 C11.5330749,16.1800392 11.515642,16.1273634 11.506753,16.0716375 L11.5,15.9859521 L11.5,12.5 Z M16.2281376,12.4423287 C16.1800392,12.4669251 16.1273634,12.484358 16.0716375,12.493247 L15.9859521,12.5 L12.5,12.5 L12.5,15.9859521 C12.5,16.0735432 12.4792232,16.15599 12.4421346,16.2281376 L14.7727273,16.2272727 C15.5473604,16.2272727 16.1805629,15.6217358 16.2248035,14.8581929 L16.2272727,14.7727273 L16.2281376,12.4423287 Z M7.499,8.248 L3.772,8.249 L3.77272727,8.25 L3.77186238,11.5578654 C3.81996079,11.5331396 3.87263663,11.5156636 3.92836249,11.5067602 L4.01404787,11.5 L7.499,11.5 L7.499,8.248 Z M16.227,8.249 L12.5,8.248 L12.5,11.5 L15.9859521,11.5 C16.0735432,11.5 16.15599,11.5207768 16.2281376,11.5578654 L16.227,8.249 Z M11.5,8.248 L8.499,8.248 L8.499,11.5 L11.5,11.5 L11.5,8.248 Z M14.7727273,3.77272727 L5.22727273,3.77272727 C4.45263957,3.77272727 3.81943715,4.37826423 3.77519646,5.14180713 L3.77272727,5.22727273 L3.772,7 L16.227,7 L16.2272727,5.22727273 C16.2272727,4.45263957 15.6217358,3.81943715 14.8581929,3.77519646 L14.7727273,3.77272727 Z' fill='%23554C4C' fill-rule='nonzero'%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\n@media (prefers-color-scheme: dark) {\nspan.embed-h1 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.787 18.523c.478 0 .8-.322.8-.811v-6.263c0-.558-.343-.907-.918-.907-.333 0-.59.048-.967.306l-1.536 1.063c-.252.177-.35.36-.35.607 0 .344.243.58.57.58a.66.66 0 0 0 .43-.145l1.133-.79h.032v5.549c0 .489.328.811.806.811z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h2 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM16.8 17.91h4.291c.42 0 .672-.263.672-.644 0-.392-.253-.645-.672-.645H18.17v-.032l1.676-1.611c1.268-1.198 1.73-1.789 1.73-2.734 0-1.332-1.107-2.256-2.75-2.256-1.467 0-2.439.8-2.702 1.66-.038.112-.059.225-.059.349 0 .402.258.66.693.66.349 0 .537-.15.72-.472.279-.623.709-.935 1.332-.935.692 0 1.187.457 1.187 1.096 0 .558-.247.934-1.204 1.853l-2.31 2.207c-.327.301-.445.505-.445.811 0 .408.253.693.763.693z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h3 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM18.427 18.582c1.8 0 3.018-.935 3.018-2.342 0-1.069-.746-1.745-1.901-1.853v-.032c.913-.188 1.617-.833 1.617-1.815 0-1.241-1.107-2.052-2.745-2.052-1.37 0-2.25.634-2.594 1.39-.08.184-.118.34-.118.522 0 .392.23.655.682.655.365 0 .553-.134.73-.5.253-.547.65-.821 1.305-.821.785 0 1.204.413 1.204 1.037 0 .633-.527 1.074-1.338 1.074h-.317c-.392 0-.617.236-.617.574 0 .35.225.58.617.58h.339c.94 0 1.493.42 1.487 1.171 0 .645-.547 1.107-1.342 1.107-.806 0-1.225-.322-1.499-.865-.161-.295-.365-.424-.687-.424-.446 0-.715.263-.715.682 0 .161.038.333.124.51.365.763 1.273 1.402 2.75 1.402z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h4 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM20.011 18.523c.446 0 .774-.274.774-.79v-.746h.44c.424 0 .666-.263.666-.645 0-.381-.236-.65-.666-.65h-.44v-3.98c0-.725-.516-1.17-1.338-1.17-.655 0-1.047.268-1.584 1.09-.843 1.251-1.617 2.433-2.149 3.389-.241.424-.338.725-.338 1.058 0 .543.392.908.978.908h2.89v.746c0 .516.321.79.767.79zm-.736-2.788h-2.481v-.043c.628-1.17 1.343-2.26 2.45-3.856h.031v3.9z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h5 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM18.523 18.582c1.768 0 2.998-1.117 2.998-2.771 0-1.478-1.053-2.52-2.536-2.52-.79 0-1.423.312-1.74.812h-.032l.183-2.154h3.061c.408 0 .666-.253.666-.645s-.263-.644-.666-.644h-3.4c-.628 0-.967.263-1.02.918l-.226 2.841c-.005.027-.005.043-.005.065-.022.435.23.806.762.806.36 0 .521-.081.838-.376.274-.264.66-.462 1.123-.462.843 0 1.445.58 1.445 1.396 0 .838-.607 1.445-1.45 1.445-.699 0-1.155-.338-1.435-.897-.182-.29-.386-.403-.709-.403-.419 0-.676.247-.676.66 0 .194.048.36.129.533.386.821 1.46 1.396 2.69 1.396z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h6 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.674 18.582c1.73 0 2.986-1.144 2.986-2.75 0-1.456-1.026-2.524-2.524-2.524-1.048 0-1.81.526-2.111 1.246h-.032v-.08c.01-1.655.574-2.708 1.68-2.708.533 0 .909.199 1.263.645.236.274.43.413.752.413.424 0 .677-.28.677-.639a.954.954 0 0 0-.113-.435c-.365-.725-1.29-1.268-2.573-1.268-2.014 0-3.239 1.547-3.239 4.115 0 .902.162 1.67.457 2.272.57 1.138 1.547 1.713 2.777 1.713zm-.022-1.289a1.404 1.404 0 0 1-1.418-1.423c0-.79.613-1.365 1.434-1.365.817 0 1.413.58 1.413 1.397-.005.779-.634 1.391-1.429 1.391z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h7 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM18.025 18.523c.349 0 .548-.129.725-.473l2.874-5.548c.209-.408.306-.666.306-.956 0-.553-.403-.886-.967-.886H16.95c-.387 0-.672.252-.672.639 0 .392.285.65.672.65h3.34v.032l-2.868 5.371a.988.988 0 0 0-.14.51c0 .376.285.66.742.66z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h8 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.588 18.582c1.848 0 3.142-.924 3.142-2.267 0-1.02-.747-1.772-1.805-1.982v-.032c.908-.23 1.52-.891 1.52-1.724 0-1.214-1.176-2.09-2.857-2.09-1.681 0-2.863.882-2.863 2.085 0 .843.618 1.504 1.53 1.73v.031c-1.057.205-1.81.957-1.81 1.977 0 1.343 1.29 2.272 3.143 2.272zm0-4.77c-.736 0-1.257-.44-1.257-1.074 0-.639.521-1.08 1.257-1.08.73 0 1.257.441 1.257 1.08 0 .634-.527 1.075-1.257 1.075zm0 3.588c-.854 0-1.45-.504-1.45-1.208 0-.698.596-1.198 1.45-1.198s1.445.5 1.445 1.198c0 .704-.591 1.208-1.445 1.208z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h9 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.357 18.582c2.057 0 3.287-1.536 3.287-4.114 0-.908-.161-1.676-.457-2.272-.563-1.139-1.541-1.714-2.776-1.714-1.73 0-2.987 1.144-2.987 2.75 0 1.51 1.139 2.53 2.573 2.53 1.02 0 1.783-.51 2.063-1.257h.032v.086c-.006 1.617-.532 2.707-1.676 2.707-.585 0-.93-.21-1.289-.644-.242-.269-.424-.414-.752-.414-.43 0-.671.274-.671.634 0 .14.032.274.107.424.322.693 1.262 1.284 2.546 1.284zm.059-4.023c-.811 0-1.413-.58-1.413-1.391 0-.784.629-1.391 1.43-1.391.8 0 1.422.618 1.422 1.418 0 .79-.617 1.364-1.439 1.364z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-bullet {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Ccircle fill='%23828282' cx='10' cy='10' r='3'%3E%3C/circle%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-toggle {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M11.460903,7.1826499 L15.3597015,11.981171 C15.7908888,12.5118631 15.7102242,13.2916205 15.1795321,13.7228078 C14.9588408,13.9021195 14.6831527,14 14.3987984,14 L6.60120158,14 C5.91742046,14 5.36310634,13.4456859 5.36310634,12.7619048 C5.36310634,12.4775505 5.46098681,12.2018624 5.64029853,11.981171 L9.53909695,7.1826499 C9.97028428,6.65195781 10.7500416,6.57129325 11.2807337,7.00248058 C11.3468265,7.056181 11.4072026,7.11655708 11.460903,7.1826499 Z' fill='%23828282' transform='translate(10.500000, 10.000000) rotate(-270.000000) translate(-10.500000, -10.000000) '%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-task {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Crect stroke='%23828282' stroke-width='1.5' x='2.75' y='2.75' width='14.5' height='14.5' rx='2'%3E%3C/rect%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-untask {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(5.000000, 5.000000)' fill='%23828282' fill-rule='nonzero'%3E%3Cpath d='M3.95468589,10 C3.60453141,10 3.33676622,9.8409332 3.05870237,9.4909862 L0.24716787,5.93849417 C0.09268795,5.747614 0,5.50371156 0,5.27041357 C0,4.7826087 0.38105046,4.40084836 0.83419156,4.40084836 C1.12255407,4.40084836 1.36972194,4.5068929 1.59629248,4.82502651 L3.91349125,7.8791092 L8.3934089,0.48780488 C8.5890834,0.15906681 8.8568486,0 9.1246138,0 C9.5777549,0 10,0.30752916 10,0.80593849 C10,1.03923648 9.8867147,1.28313892 9.7528321,1.495228 L4.79917611,9.4803818 C4.58290422,9.8303287 4.29454171,10 3.95468589,10 Z'%3E%3C/path%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-callout {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M15.7166667,10.720413 C16.3609989,10.720413 16.8833333,11.2427475 16.8833333,11.8870797 L16.8833333,11.8870797 L16.8833333,15.5037464 C16.8833333,16.1480786 16.3609989,16.670413 15.7166667,16.670413 L15.7166667,16.670413 L4.28333333,16.670413 C3.63900111,16.670413 3.11666667,16.1480786 3.11666667,15.5037464 L3.11666667,15.5037464 L3.11666667,11.8870797 C3.11666667,11.2427475 3.63900111,10.720413 4.28333333,10.720413 L4.28333333,10.720413 Z M15.7166667,11.8870797 L4.28333333,11.8870797 L4.28333333,15.5037464 L15.7166667,15.5037464 L15.7166667,11.8870797 Z M16.4166667,6.87041303 C16.7388328,6.87041303 17,7.13158026 17,7.45374636 C17,7.77591246 16.7388328,8.03707969 16.4166667,8.03707969 L3.58333333,8.03707969 C3.26116723,8.03707969 3,7.77591246 3,7.45374636 C3,7.13158026 3.26116723,6.87041303 3.58333333,6.87041303 L16.4166667,6.87041303 Z M16.4166667,3 C16.7388328,3 17,3.26116723 17,3.58333333 C17,3.90549944 16.7388328,4.16666667 16.4166667,4.16666667 L3.58333333,4.16666667 C3.26116723,4.16666667 3,3.90549944 3,3.58333333 C3,3.26116723 3.26116723,3 3.58333333,3 L16.4166667,3 Z' fill='%23828282' fill-rule='nonzero'%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-code {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M11.6166822,3.83364946 C11.9377497,3.91967925 12.1282855,4.24969686 12.0422557,4.57076443 L9.11376613,15.5000363 C9.02773634,15.8211038 8.69771872,16.0116396 8.37665116,15.9256098 C8.0555836,15.83958 7.86504784,15.5095624 7.95107764,15.1884948 L10.8795672,4.25922298 C10.965597,3.93815542 11.2956146,3.74761966 11.6166822,3.83364946 Z M6.57038834,5.4184093 C6.80542611,5.65344707 6.80542611,6.03451858 6.57038834,6.26955635 L3.08021403,9.75873548 L6.57038834,13.2489622 C6.80542611,13.4839999 6.80542611,13.8650715 6.57038834,14.1001092 C6.33535057,14.335147 5.95427906,14.335147 5.71924129,14.1001092 L1.80396485,10.1848328 C1.56892708,9.94979502 1.56892708,9.5687235 1.80396485,9.33368573 L5.71924129,5.4184093 C5.95427906,5.18337153 6.33535057,5.18337153 6.57038834,5.4184093 Z M13.422945,5.4184093 C13.6579828,5.18337153 14.0390543,5.18337153 14.274092,5.4184093 L14.274092,5.4184093 L18.1893685,9.33368573 C18.4244062,9.5687235 18.4244062,9.94979502 18.1893685,10.1848328 L18.1893685,10.1848328 L14.274092,14.1001092 C14.0390543,14.335147 13.6579828,14.335147 13.422945,14.1001092 C13.1879072,13.8650715 13.1879072,13.4839999 13.422945,13.2489622 L13.422945,13.2489622 L16.9131193,9.75873548 L13.422945,6.26955635 C13.1879072,6.03451858 13.1879072,5.65344707 13.422945,5.4184093 Z' fill='%23828282'%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-simp-table {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M14.7727273,2.5 C16.2789584,2.5 17.5,3.72104159 17.5,5.22727273 L17.5,14.7727273 C17.5,16.2789584 16.2789584,17.5 14.7727273,17.5 L5.22727273,17.5 C3.72104159,17.5 2.5,16.2789584 2.5,14.7727273 L2.5,5.22727273 C2.5,3.72104159 3.72104159,2.5 5.22727273,2.5 L14.7727273,2.5 Z M3.77186238,12.4423287 L3.77272727,14.7727273 C3.77272727,15.5473604 4.37826423,16.1805629 5.14180713,16.2248035 L5.22727273,16.2272727 L7.55767127,16.2281376 C7.53307493,16.1800392 7.51564204,16.1273634 7.50675303,16.0716375 L7.5,15.9859521 L7.499,12.5 L4.01404787,12.5 C3.92645682,12.5 3.84401,12.4792232 3.77186238,12.4423287 Z M11.5,12.5 L8.499,12.5 L8.5,15.9859521 C8.5,16.0735432 8.47922323,16.15599 8.44213461,16.2281376 L11.5576713,16.2281376 C11.5330749,16.1800392 11.515642,16.1273634 11.506753,16.0716375 L11.5,15.9859521 L11.5,12.5 Z M16.2281376,12.4423287 C16.1800392,12.4669251 16.1273634,12.484358 16.0716375,12.493247 L15.9859521,12.5 L12.5,12.5 L12.5,15.9859521 C12.5,16.0735432 12.4792232,16.15599 12.4421346,16.2281376 L14.7727273,16.2272727 C15.5473604,16.2272727 16.1805629,15.6217358 16.2248035,14.8581929 L16.2272727,14.7727273 L16.2281376,12.4423287 Z M7.499,8.248 L3.772,8.249 L3.77272727,8.25 L3.77186238,11.5578654 C3.81996079,11.5331396 3.87263663,11.5156636 3.92836249,11.5067602 L4.01404787,11.5 L7.499,11.5 L7.499,8.248 Z M16.227,8.249 L12.5,8.248 L12.5,11.5 L15.9859521,11.5 C16.0735432,11.5 16.15599,11.5207768 16.2281376,11.5578654 L16.227,8.249 Z M11.5,8.248 L8.499,8.248 L8.499,11.5 L11.5,11.5 L11.5,8.248 Z M14.7727273,3.77272727 L5.22727273,3.77272727 C4.45263957,3.77272727 3.81943715,4.37826423 3.77519646,5.14180713 L3.77272727,5.22727273 L3.772,7 L16.227,7 L16.2272727,5.22727273 C16.2272727,4.45263957 15.6217358,3.81943715 14.8581929,3.77519646 L14.7727273,3.77272727 Z' fill='%23828282' fill-rule='nonzero'%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\n}\nspan>a.wolai-bi-link>span.embed-page {\n  color: var(--wolai-bi-link-text-color);\n  background-color: var(--wolai-bi-link-text-background);\n  margin: 0 2px;\n  padding: 0 2px;\n  border-radius: 3px;\n}\nspan>a.wolai-bi-link>span.embed-page:hover {\n  background-color: var(--wolai-bi-link-text-hover-background);\n}\nspan>a.wolai-bi-link>span.embed-page {\n  border-bottom: none;\n}\nspan>a.wolai-bi-link.embed-progress>span {\n  border-bottom: none;\n  border-radius: 2px;\n  display: inline-block;\n}\nspan>a.wolai-bi-link.embed-progress>span>div {\n  display: flex;\n  align-items: center;\n  margin: 2px;\n}\nspan>a.wolai-bi-link.embed-progress>span .content {\n  overflow: hidden; position: relative;\n  width: 32px;\n  height: 6px;\n  border-radius: 3px;\n}\nbody.small-font span>a.wolai-bi-link.embed-progress>span .content {\n  width: 28px;\n  height: 4px;\n  border-radius: 2px;\n}\nspan>a.wolai-bi-link.embed-progress .miu {\n  position: absolute; left: 0; top: 0; width: 0; height: 100%;\n  background: var(--wolai-theme-color);\n}\nspan>a.wolai-bi-link.embed-progress .er {\n  position: absolute; left: 0; top: 0; width: 100%; height: 100%;\n  background: var(--wolai-theme-color);\n  opacity: 0.15;\n}\nspan>a.wolai-bi-link.embed-progress .digit {\n  color: var(--wolai-desc-color);\n  margin-left: 8px;\n  line-height: 18px;\n  font-variant-numeric: tabular-nums;\n}\nbody.small-font span>a.wolai-bi-link.embed-progress .digit {\n  line-height: 14px;\n}\nspan>a.wolai-bi-link.embed-progress .digit[data-value]::before {\n  content: attr(data-value) \"%\";\n}\nheader, article, footer {\n    color: var(--wolai-color-default);\n}\narticle .def-color { color: inherit; }\narticle .gray { color: var(--wolai-color-gray); }\narticle .brown { color: var(--wolai-color-brown); }\narticle .orange { color: var(--wolai-color-orange); }\narticle .yellow { color: var(--wolai-color-yellow); }\narticle .green { color: var(--wolai-color-green); }\narticle .blue { color: var(--wolai-color-blue); }\narticle .purple { color: var(--wolai-color-purple); }\narticle .pink { color: var(--wolai-color-pink); }\narticle .red { color: var(--wolai-color-red); }\narticle .bg-default { background-color: var(--wolai-color-blank-bg);}\narticle .bg-cultured { background-color: var(--wolai-color-cultured); }\narticle .bg-lightgray { background-color: var(--wolai-color-lightgray); }\narticle .bg-apricot { background-color: var(--wolai-color-apricot); }\narticle .bg-vivid_tangerine { background-color: var(--wolai-color-vivid_tangerine); }\narticle .bg-blond { background-color: var(--wolai-color-blond); }\narticle .bg-aero_blue { background-color: var(--wolai-color-aero_blue); }\narticle .bg-uranian_blue { background-color: var(--wolai-color-uranian_blue); }\narticle .bg-lavender_blue { background-color: var(--wolai-color-lavender_blue); }\narticle .bg-pale_purple { background-color: var(--wolai-color-pale_purple); }\narticle .bg-pink_lavender { background-color: var(--wolai-color-pink_lavender); }\narticle .bg-lightpink { background-color: var(--wolai-color-lightpink); }\narticle .bg-fluorescent_yellow { background-color: var(--wolai-color-fluorescent_yellow); }\narticle .bg-fluorescent_green { background-color: var(--wolai-color-fluorescent_green); }\narticle .bg-fluorescent_green2 { background-color: var(--wolai-color-fluorescent_green2); }\narticle .bg-fluorescent_blue { background-color: var(--wolai-color-fluorescent_blue); }\narticle .bg-fluorescent_purple { background-color: var(--wolai-color-fluorescent_purple); }\narticle .bg-fluorescent_purple2 { background-color: var(--wolai-color-fluorescent_purple2); }\n\n\n    @media print {\n      span {\n        page-break-inside: avoid;\n      }\n\n      * {\n        -webkit-print-color-adjust: exact !important;\n      }\n\n      /* 链接不显示修饰线 */\n      a {\n        text-decoration: none !important;\n      }\n\n    }\n    \ndetails > summary::-webkit-details-marker {display: none;}","source":"html/nest/css/wolai.css","raw":":root {\n  --color-basic-50: #FFFFFF;\n  --color-basic-50-a: rgba(255, 255, 255, 0);\n  --color-basic-75: #FAFAFA;\n  --color-basic-100: #F5F5F5;\n  --color-basic-200: #EAEAEA;\n  --color-basic-300: #E1E1E1;\n  --color-basic-400: #CACACA;\n  --color-basic-500: #B3B3B3;\n  --color-basic-600: #8E8E8E;\n  --color-basic-700: #6E6E6E;\n  --color-basic-800: #4B4B4B;\n  --color-basic-900: #2C2C2C;\n  --wolai-border-color: rgba(38, 22, 22, 0.10196078431372549);\n  --wolai-bi-link-background: rgba(208, 207, 207, 0.2);\n  --wolai-bi-link-hover-color: #F1EFEF;\n  --wolai-bi-link-line-color: #BBBBBB;\n  --wolai-bi-link-text-color: rgb(207, 86, 89);\n  --wolai-bi-link-text-background: rgba(204, 112, 112, 0.10196078431372549);\n  --wolai-bi-link-text-hover-background: rgba(204, 112, 112, 0.1803921568627451);\n  --wolai-bookmark-description-color: #878683;\n  --wolai-bookmark-node-border-color: #DDDDDD;\n  --wolai-bookmark-title-color: rgb(55, 53, 47);\n  --wolai-code-node-bg: #F6F5F5;\n  --wolai-code-node-color: #333940;\n  --wolai-desc-color: #BCB3B3;\n  --wolai-caption-color: #8E8E8E;\n  --wolai-hover-bg: #EEECEC;\n  --wolai-inline-code-background: rgba(208, 187, 193, 0.2);\n  --wolai-inline-code-color: rgb(85, 142, 218);\n  --wolai-link-node-color: #544C4C;\n  --wolai-link-node-hover-color: #231E1E;\n  --wolai-link-node-line-color: #E8E6E6;\n  --wolai-modal-color: #554C4C;\n  --wolai-quote-border-color: rgba(187, 187, 187, 0.5019607843137255);\n  --wolai-scrollbar-color: #D2CFCF;\n  --wolai-scrollbar-hover-color: #6C6A6A;\n  --wolai-table-border-color: #DDDDDD;\n  --wolai-table-header-bg: #F5F5F5;\n  --wolai-theme-color: rgb(207, 86, 89);\n  --wolai-title-color: #312727;\n  --wolai-color-default: rgb(33, 37, 41);\n  --wolai-color-gray: rgb(140, 140, 140);\n  --wolai-color-brown: rgb(163, 67, 31);\n  --wolai-color-orange: rgb(240, 107, 5);\n  --wolai-color-yellow: rgb(223, 171, 1);\n  --wolai-color-green: rgb(3, 135, 1);\n  --wolai-color-blue: rgb(5, 117, 197);\n  --wolai-color-purple: rgb(136, 49, 204);\n  --wolai-color-pink: rgb(200, 21, 182);\n  --wolai-color-red: rgb(233, 30, 44);\n  --wolai-color-blank-bg: #FFFFFF;\n  --wolai-color-cultured: rgba(140, 140, 140, 0.12156862745098039);\n  --wolai-color-lightgray: rgba(92, 92, 92, 0.2);\n  --wolai-color-apricot: rgba(163, 67, 31, 0.2);\n  --wolai-color-vivid_tangerine: rgba(240, 107, 5, 0.2);\n  --wolai-color-blond: rgba(240, 200, 0, 0.2);\n  --wolai-color-aero_blue: rgba(3, 135, 102, 0.2);\n  --wolai-color-uranian_blue: rgba(5, 117, 197, 0.2);\n  --wolai-color-lavender_blue: rgba(74, 82, 199, 0.2);\n  --wolai-color-pale_purple: rgba(136, 49, 204, 0.2);\n  --wolai-color-pink_lavender: rgba(200, 21, 182, 0.2);\n  --wolai-color-lightpink: rgba(233, 30, 44, 0.2);\n  --wolai-color-fluorescent_yellow: #FFF88F;\n  --wolai-color-fluorescent_green: #D3F8B6;\n  --wolai-color-fluorescent_green2: #AFFAD1;\n  --wolai-color-fluorescent_blue: #B1FFFF;\n  --wolai-color-fluorescent_purple: #FDBFFF;\n  --wolai-color-fluorescent_purple2: #D2CBFF;\n}\n@media (prefers-color-scheme: dark) {\n  :root {\n    --color-basic-50: #252525;\n    --color-basic-50-a: rgba(37, 37, 37, 0);\n    --color-basic-75: #2F2F2F;\n    --color-basic-100: #323232;\n    --color-basic-200: #3E3E3E;\n    --color-basic-300: #4A4A4A;\n    --color-basic-400: #5A5A5A;\n    --color-basic-500: #6E6E6E;\n    --color-basic-600: #909090;\n    --color-basic-700: #B9B9B9;\n    --color-basic-800: #BDBDBD;\n    --color-basic-900: #C2C2C2;\n    --wolai-border-color: #444444;\n    --wolai-bi-link-background: rgba(208, 207, 207, 0.2);\n    --wolai-bi-link-hover-color: #686868;\n    --wolai-bi-link-line-color: #888888;\n    --wolai-bi-link-text-color: rgb(245, 132, 132);\n    --wolai-bi-link-text-background: rgba(154, 101, 101, 0.3803921568627451);\n    --wolai-bi-link-text-hover-background: rgba(154, 101, 101, 0.5019607843137255);\n    --wolai-bookmark-description-color: #7F7F81;\n    --wolai-bookmark-node-border-color: #555555;\n    --wolai-bookmark-title-color: rgb(190, 190, 191);\n    --wolai-code-node-bg: #282A36;\n    --wolai-code-node-color: #F8F8F2;\n    --wolai-desc-color: #8F8F8F;\n    --wolai-caption-color: #909090;\n    --wolai-hover-bg: #2C2C2F;\n    --wolai-inline-code-background: rgba(208, 187, 193, 0.2);\n    --wolai-inline-code-color: #84AADC;\n    --wolai-link-node-color: rgba(255, 255, 255, 0.5019607843137255);\n    --wolai-link-node-hover-color: rgba(255, 255, 255, 0.7019607843137254);\n    --wolai-link-node-line-color: rgba(255, 255, 255, 0.2);\n    --wolai-modal-color: rgba(255, 255, 255, 0.7019607843137254);\n    --wolai-quote-border-color: #404040;\n    --wolai-scrollbar-color: #545454;\n    --wolai-scrollbar-hover-color: #C0BCBC;\n    --wolai-table-border-color: #555555;\n    --wolai-table-header-bg: #3A3A3A;\n    --wolai-theme-color: rgb(207, 86, 89);\n    --wolai-title-color: rgba(255, 255, 255, 0.7019607843137254);\n    --wolai-color-default: rgba(255, 255, 255, 0.8509803921568627);\n    --wolai-color-gray: rgb(102, 102, 102);\n    --wolai-color-brown: rgb(199, 103, 67);\n    --wolai-color-orange: rgb(219, 95, 0);\n    --wolai-color-yellow: rgb(200, 148, 44);\n    --wolai-color-green: rgb(27, 167, 132);\n    --wolai-color-blue: rgb(44, 134, 252);\n    --wolai-color-purple: rgb(184, 82, 235);\n    --wolai-color-pink: rgb(218, 78, 143);\n    --wolai-color-red: rgb(226, 80, 88);\n    --wolai-color-blank-bg: #252528;\n    --wolai-color-cultured: rgba(102, 102, 102, 0.2);\n    --wolai-color-lightgray: rgba(140, 140, 140, 0.2784313725490196);\n    --wolai-color-apricot: rgba(199, 103, 67, 0.2784313725490196);\n    --wolai-color-vivid_tangerine: rgba(219, 95, 0, 0.2784313725490196);\n    --wolai-color-blond: rgba(200, 148, 44, 0.2784313725490196);\n    --wolai-color-aero_blue: rgba(27, 167, 132, 0.2784313725490196);\n    --wolai-color-uranian_blue: rgba(44, 134, 252, 0.2784313725490196);\n    --wolai-color-lavender_blue: rgba(44, 134, 252, 0.2784313725490196);\n    --wolai-color-pale_purple: rgba(184, 82, 235, 0.2784313725490196);\n    --wolai-color-pink_lavender: rgba(218, 78, 143, 0.2784313725490196);\n    --wolai-color-lightpink: rgba(226, 80, 88, 0.2784313725490196);\n    --wolai-color-fluorescent_yellow: #8D8829;\n    --wolai-color-fluorescent_green: #568B2A;\n    --wolai-color-fluorescent_green2: #34805C;\n    --wolai-color-fluorescent_blue: #329096;\n    --wolai-color-fluorescent_purple: #843473;\n    --wolai-color-fluorescent_purple2: #5B309B;\n  }\n}\n:root {\n  --wolai-normal-font: \"\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\", zh quote\", -apple-system, BlinkMacSystemFont, \"PingFang SC\", \"Noto Sans\", \"Noto Sans CJK SC\", \"Microsoft YaHei\", 微软雅黑, sans-serif, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial;\n  --wolai-mono-font: SFMono-Regular, Consolas, \"Liberation Mono\", Menlo, monospace;\n  --wolai-serif-font: \"zh question mark\", \"Times New Roman\", \"Songti SC\", STSong, NSimSun, SimSun, FangSong, \"Nanum Myeongjo\", NanumMyeongjo, Batang, serif !important;\n  --wolai-kai-font: \"zh question mark\", \"Times New Roman\", \"Kaiti SC\", STKaiti, KaiTi !important;\n}\n.wolai-block {\n  border-radius: 3px;\n  font-weight: normal;\n}\n.block-frame {\n  border-color: var(--wolai-border-color);\n}\n.wolai-block>.wolai-block {\n  margin-left: 29px;\n}\ndiv.wolai-block.wolai-text>.wolai-block {\n  margin-left: 20px;\n}\n.placeholder {\n  opacity: 0.3;\n}\nbody {\n  background-color: var(--wolai-color-blank-bg);\n  font-family: var(--wolai-normal-font);\n}\n\n.font-serif {\n  font-family: var(--wolai-serif-font);\n}\n.font-kai {\n  font-family: var(--wolai-kai-font);\n}\n\nheader>div.image {\n  height: 120px;\n}\n\nheader>div.image.has {\n  height: 30vh;\n  background-size: cover;\n  background-position: 50% 50%;\n}\n\ndiv.title>div.banner {\n  height: 36px;\n  margin-bottom: 52px;\n}\n\ndiv.title>div.banner>div.icon {\n  margin-top: -36px;\n  width: 66px;\n  height: 66px;\n  font-size: 66px;\n  background-size: cover;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: var(--wolai-normal-font);\n}\n\ndiv.title>div.banner>div.icon.icon-image {\n  border-radius: 5px;\n}\n\ndiv.title>div.banner>div.icon[data-symbol]::before {\n  content: attr(data-symbol)\n}\nheader>div.title {\n  box-sizing: content-box;\n  max-width: 100%;\n  /* padding: 0 98px; */\n  margin: 0 auto;\n}\n@media only screen and (max-width: 760px) {\n  header>div.title {\n    max-width: inherit;\n    padding: 0 72px;\n  }\n}\nbody.full-width header>div.title {\n  max-width: 100%;\n}\ndiv.main-title {\n    font-size: 40px;\n    font-weight: 600;\n    line-height: 48px;\n    margin-bottom: 20px;\n}\ndiv.main-title::before {\n    content: attr(data-title);\n}\nbody.small-font div.main-title {\n    font-size: 34px;\n    line-height: 40.8px;\n}\n.wolai-serial-number {\n    color: var(--color-basic-500);\n    padding: 0 2px;\n    marginRight: 3px;\n  }\nfooter {\n  height: 80px;\n  padding: 20px 0 0 60px;\n}\n::-webkit-scrollbar {\n  width: 8px;\n  height: 8px;\n}\n::-webkit-scrollbar-thumb {\n  background-color: var(--wolai-scrollbar-color);\n  border-radius: 4px;\n}\n::-webkit-scrollbar-thumb:hover {\n  background-color: var(--wolai-scrollbar-hover-color);\n}\n::-webkit-scrollbar-track {\n  background-color: transparent;\n}\narticle {\n  box-sizing: content-box;\n  max-width: 100%;\n  /* padding: 0 98px; */\n  margin: 0 auto;\n}\nbody.full-width article {\n  max-width: 100%;\n}\n@media only screen and (max-width: 760px) {\n  article {\n    padding: 0 72px;\n  }\n}\n.wolai-block:first-child {\n  margin-top: 0 !important;\n}\n.wolai-block:last-child {\n  margin-bottom: 0 !important;\n}\nspan.katex-display {\n  font-size: 16px;\n  line-height: 24px;\n}\nbody.small-font span.katex-display {\n  font-size: 14px;\n  line-height: 21px;\n}\nh1 {\n  font-size: 30px;\n  line-height: 39px;\n  min-height: 36px;\n}\nbody.small-font h1 {\n  font-size: 26px;\n  line-height: 34px;\n  min-height: 22px;\n}\nh2 {\n  font-size: 24px;\n  line-height: 31px;\n  min-height: 28.8px;\n}\nbody.small-font h2 {\n  font-size: 22px;\n  line-height: 27px;\n  min-height: 22px;\n}\nh3 {\n  font-size: 20px;\n  line-height: 24px;\n  min-height: 24px;\n}\nbody.small-font h3 {\n  font-size: 18px;\n  line-height: 22px;\n  min-height: 22px;\n}\nh4 {\n  font-size: 18px;\n  line-height: 21.6px;\n  min-height: 21.6px;\n}\nbody.small-font h4 {\n  font-size: 16px;\n  line-height: 22px;\n  min-height: 22px;\n}\nh5 {\n  font-size: 16px;\n  line-height: 21.6px;\n  min-height: 21.6px;\n}\nbody.small-font h5 {\n  font-size: 14px;\n  line-height: 22px;\n  min-height: 22px;\n}\nh1{\n  margin-top: 36px;\n  margin-bottom: 13px;\n}\nbody.less-lead h1{\n  margin-top: 34px;\n  margin-bottom: 11px;\n}\nbody.more-lead h1{\n  margin-top: 38px;\n  margin-bottom: 15px;\n}\nh2{\n  margin-top: 26px;\n  margin-bottom: 9px;\n}\nbody.less-lead h2{\n  margin-top: 24px;\n  margin-bottom: 7px;\n}\nbody.more-lead h2{\n  margin-top: 28px;\n  margin-bottom: 11px;\n}\nh3{\n  margin-top: 16px;\n  margin-bottom: 9px;\n}\nbody.less-lead h3{\n  margin-top: 14px;\n  margin-bottom: 7px;\n}\nbody.more-lead h3{\n  margin-top: 18px;\n  margin-bottom: 11px;\n}\nh4{\n  margin-top: 13px;\n  margin-bottom: 9px;\n}\nbody.less-lead h4{\n  margin-top: 11px;\n  margin-bottom: 7px;\n}\nbody.more-lead h4{\n  margin-top: 15px;\n  margin-bottom: 11px;\n}\nh5{\n  margin-top: 13px;\n  margin-bottom: 9px;\n}\nbody.less-lead h5{\n  margin-top: 11px;\n  margin-bottom: 7px;\n}\nbody.more-lead h5{\n  margin-top: 15px;\n  margin-bottom: 11px;\n}\nh1, h2, h3, h4, h5 {\n  padding: 3px 2px;\n}\nh1.wolai-block, h2.wolai-block, h3.wolai-block, h4.wolai-block, h5.wolai-block {\n  font-weight: bold;\n}\nh1.wolai-block>.wolai-block,\nh2.wolai-block>.wolai-block,\nh3.wolai-block>.wolai-block,\nh4.wolai-block>.wolai-block,\nh5.wolai-block>.wolai-block{\n  margin-left: 20px;\n}\np { margin: 0; }\ndiv.wolai-text {\n}\ndiv.wolai-text {\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font div.wolai-text {\n  font-size: 14px;\n  line-height: 20px;\n  min-height: 20px;\n}\ndiv.wolai-text{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead div.wolai-text{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead div.wolai-text{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\ndiv.wolai-text { padding: 3px 2px; }\nfigure { margin: 0; }\n.wolai-center { display: flex;\njustify-content: center;\n}\n.wolai-left { display: flex;\njustify-content: flex-start;\n}\n.wolai-right { display: flex;\njustify-content: flex-end;\n}\nfigure{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead figure{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead figure{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\nfigure>img { display: block; max-width: 100%;\n  border-radius: 5px;\n}\nfigure>figcaption{\n  padding: 10px 5px;\n  text-align: inherit;\n  color: var(--wolai-caption-color);\n}\nfigure>figcaption{\n  font-size: 14px;\n  line-height: 26px;\n}\nbody.small-font figure>figcaption{\n  font-size: 12px;\n  line-height: 22px;\n}\nbody.less-lead figure>figcaption{\n  line-height: 24px;\n}\nbody.small-font.less-lead figure>figcaption{\n  line-height: 20px;\n}\nbody.more-lead figure>figcaption{\n  line-height: 29px;\n}\nbody.small-font.more-lead figure>figcaption{\n  line-height: 25px;\n}\ntable>caption{\n  padding: 10px 5px;\n  text-align: inherit;\n  color: var(--wolai-caption-color);\n}\ntable>caption{\n  font-size: 14px;\n  line-height: 26px;\n}\nbody.small-font table>caption{\n  font-size: 12px;\n  line-height: 22px;\n}\nbody.less-lead table>caption{\n  line-height: 24px;\n}\nbody.small-font.less-lead table>caption{\n  line-height: 20px;\n}\nbody.more-lead table>caption{\n  line-height: 29px;\n}\nbody.small-font.more-lead table>caption{\n  line-height: 25px;\n}\ncode-block>figcaption{\n  padding: 10px 5px;\n  text-align: inherit;\n  color: var(--wolai-caption-color);\n}\ncode-block>figcaption{\n  font-size: 14px;\n  line-height: 26px;\n}\nbody.small-font code-block>figcaption{\n  font-size: 12px;\n  line-height: 22px;\n}\nbody.less-lead code-block>figcaption{\n  line-height: 24px;\n}\nbody.small-font.less-lead code-block>figcaption{\n  line-height: 20px;\n}\nbody.more-lead code-block>figcaption{\n  line-height: 29px;\n}\nbody.small-font.more-lead code-block>figcaption{\n  line-height: 25px;\n}\nvideo {\n  max-width: 100%;\n  border-radius: 5px;\n}\naudio {\n  width: 100%;\n  border-radius: 5px;\n}\nfigure.stretch {\n  align-self: stretch;\n}\ndiv.wolai-pre {\n  background-color: var(--wolai-code-node-bg);\n  position: relative;\n}\ndiv.wolai-pre{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead div.wolai-pre{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead div.wolai-pre{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\ndiv.wolai-pre>pre {\n  font-family: var(--wolai-mono-font);\n  color: var(--wolai-code-node-color);\n  padding: 20px 10px;\n  overflow-x: auto;\n}\ndiv.wolai-pre>pre{\n  font-size: 14px;\n  line-height: 21px;\n}\nbody.small-font div.wolai-pre>pre{\n  font-size: 12px;\n  line-height: 18px;\n}\nbody.less-lead div.wolai-pre>pre{\n  line-height: 19px;\n}\nbody.small-font.less-lead div.wolai-pre>pre{\n  line-height: 16px;\n}\nbody.more-lead div.wolai-pre>pre{\n  line-height: 23px;\n}\nbody.small-font.more-lead div.wolai-pre>pre{\n  line-height: 20px;\n}\ndiv.wolai-pre>div.marker {\n  position: absolute;\n  right: 25px;\n  bottom: 12px;\n  font-size: 12px;\n  color: var(--wolai-modal-color);\n}\ndiv.wolai-pre>div.marker::before {\n  content: attr(data-lang);\n}\nblockquote {\n  position: relative; margin: 0;\n}\nblockquote {\n  padding: 8px 0 8px 20px;\n}\nblockquote{\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font blockquote{\n  font-size: 14px;\n  line-height: 22px;\n  min-height: 22px;\n}\nbody.less-lead blockquote{\n  line-height: 24px;\n  min-height: 24px;\n}\nbody.small-font.less-lead blockquote{\n  line-height: 20px;\n  min-height: 20px;\n}\nbody.more-lead blockquote{\n  line-height: 29px;\n  min-height: 29px;\n}\nbody.small-font.more-lead blockquote{\n  line-height: 25px;\n  min-height: 25px;\n}\nblockquote{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead blockquote{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead blockquote{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\nblockquote::before {\n  content: '';\n  position: absolute;\n  top: 5px;\n  left: 2px;\n  height: calc(100% - 5px - 5px);\n  width: 4px;\n  background: var(--wolai-quote-border-color);\n  border-radius: 1.5px;\n}\ndiv.wolai-row { display: flex; }\ndiv.wolai-row{\n  padding-top: 6px;\n  padding-bottom: 6px;\n}\nbody.less-lead div.wolai-row{\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\nbody.more-lead div.wolai-row{\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\ndiv.wolai-row>div.wolai-col {\n  margin-left: 40px;\n  flex-grow: 0.5; flex-basis: 0;\n}\ndiv.wolai-row>div.wolai-col:first-child {\n  margin-left: 0;\n}\ndiv.wolai-row>div.wolai-col{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.less-lead div.wolai-row>div.wolai-col{\n  margin-top: 1px;\n  margin-bottom: 1px;\n}\nbody.more-lead div.wolai-row>div.wolai-col{\n  margin-top: 3px;\n  margin-bottom: 3px;\n}\n@media only screen and (max-width: 768px) {\n  div.wolai-row {\n    flex-direction: column;\n  }\n  div.wolai-row>div.wolai-col {\n    margin-left: 0;\n  }\n}\naside {\n  position: relative;\n}\naside {\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font aside {\n  font-size: 14px;\n  line-height: 22px;\n  min-height: 22px;\n}\naside{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead aside{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead aside{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\naside>div.icon::before {\n  content: \"📌\";\n}\naside>div.icon[data-symbol]::before {\n  content: attr(data-symbol);\n}\naside>div.icon.icon-image{\n  border-radius: 3px;\n  background-size: contain;\n}\naside>div.icon.icon-image::before {\n  content: none;\n}\naside {\n  padding-left: 51px;\n  padding-top: 15px;\n  padding-right: 15px;\n  padding-bottom: 15px;\n}\naside>div.icon {\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 24px;\n  width: 26px;\n  height: 26px;\n  top: 15px;\n  left: 15px;\n}\nbody.small-font aside {\n  padding-left: 47px;\n}\nbody.small-font aside>div.icon {\n  font-size: 20px;\n  width: 22px;\n  height: 22px;\n}\nul { padding-left: 0; margin: 0; }\nul>li, ol>li { list-style: none; position: relative; }\nul>li, ol>li { border-radius: 3px; }\ndiv.wolai-block.wolai-task-block>input[type=\"checkbox\"] { display: none; }\ndiv.wolai-block.wolai-task-block>* {\n  margin-left: 0;\n}\ndiv.wolai-block.wolai-task-block{ margin-left: 0; position: relative; }\ndetails>summary::marker { content: ''}\nli{\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font li{\n  font-size: 14px;\n  line-height: 22px;\n  min-height: 22px;\n}\nbody.less-lead li{\n  line-height: 24px;\n  min-height: 24px;\n}\nbody.small-font.less-lead li{\n  line-height: 20px;\n  min-height: 20px;\n}\nbody.more-lead li{\n  line-height: 29px;\n  min-height: 29px;\n}\nbody.small-font.more-lead li{\n  line-height: 25px;\n  min-height: 25px;\n}\ndiv.wolai-block.wolai-task-block{\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font div.wolai-block.wolai-task-block{\n  font-size: 14px;\n  line-height: 22px;\n  min-height: 22px;\n}\nbody.less-lead div.wolai-block.wolai-task-block{\n  line-height: 24px;\n  min-height: 24px;\n}\nbody.small-font.less-lead div.wolai-block.wolai-task-block{\n  line-height: 20px;\n  min-height: 20px;\n}\nbody.more-lead div.wolai-block.wolai-task-block{\n  line-height: 29px;\n  min-height: 29px;\n}\nbody.small-font.more-lead div.wolai-block.wolai-task-block{\n  line-height: 25px;\n  min-height: 25px;\n}\ndetails{\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font details{\n  font-size: 14px;\n  line-height: 22px;\n  min-height: 22px;\n}\nbody.less-lead details{\n  line-height: 24px;\n  min-height: 24px;\n}\nbody.small-font.less-lead details{\n  line-height: 20px;\n  min-height: 20px;\n}\nbody.more-lead details{\n  line-height: 29px;\n  min-height: 29px;\n}\nbody.small-font.more-lead details{\n  line-height: 25px;\n  min-height: 25px;\n}\nul{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead ul{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead ul{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\nol{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead ol{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead ol{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\nul>li+li{\n  margin-top: 4px;\n}\nbody.less-lead ul>li+li{\n  margin-top: 2px;\n}\nbody.more-lead ul>li+li{\n  margin-top: 6px;\n}\nol>li+li{\n  margin-top: 4px;\n}\nbody.less-lead ol>li+li{\n  margin-top: 2px;\n}\nbody.more-lead ol>li+li{\n  margin-top: 6px;\n}\ndiv.wolai-block.wolai-task-block{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead div.wolai-block.wolai-task-block{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead div.wolai-block.wolai-task-block{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\ndetails{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead details{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead details{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\nol>li>div.marker {\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  text-align: center;\n}\nol { padding-left: 0; counter-reset: arabicCounter; }\nol>li>div.marker::before {\n  counter-increment: arabicCounter;\n  content: counter(arabicCounter) \".\";\n}\nul>li>div.marker,\ndiv.wolai-block.wolai-task-block>div.marker {\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  background-repeat: no-repeat;\n  background-position: center;\n}\ndetails>summary>div.marker {\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n  background-repeat: no-repeat;\n  background-position: center;\n}\nol>li>div.marker{\n  left: 3px;\n  top: 3px;\n}\nbody.small-font ol>li>div.marker{\n  top: 3px;\n}\nbody.less-lead ol>li>div.marker{\n  top: 3px;\n}\nbody.small-font.less-lead ol>li>div.marker{\n  top: 3px;\n}\nbody.more-lead ol>li>div.marker{\n  top: 3px;\n}\nbody.small-font.more-lead ol>li>div.marker{\n  top: 3px;\n}\nul>li>div.marker{\n  left: 3px;\n  top: 4px;\n}\nbody.small-font ul>li>div.marker{\n  top: 2px;\n}\nbody.less-lead ul>li>div.marker{\n  top: 3px;\n}\nbody.small-font.less-lead ul>li>div.marker{\n  top: 1px;\n}\nbody.more-lead ul>li>div.marker{\n  top: 5px;\n}\nbody.small-font.more-lead ul>li>div.marker{\n  top: 3.5px;\n}\ndiv.wolai-block.wolai-task-block>div.marker{\n  left: 3px;\n  top: 4px;\n}\nbody.small-font div.wolai-block.wolai-task-block>div.marker{\n  top: 2px;\n}\nbody.less-lead div.wolai-block.wolai-task-block>div.marker{\n  top: 3px;\n}\nbody.small-font.less-lead div.wolai-block.wolai-task-block>div.marker{\n  top: 1px;\n}\nbody.more-lead div.wolai-block.wolai-task-block>div.marker{\n  top: 5px;\n}\nbody.small-font.more-lead div.wolai-block.wolai-task-block>div.marker{\n  top: 3.5px;\n}\ndetails>summary>div.marker{\n  left: 1px;\n  top: 1px;\n}\nbody.small-font details>summary>div.marker{\n  top: -1px;\n}\nbody.less-lead details>summary>div.marker{\n  top: 0;\n}\nbody.small-font.less-lead details>summary>div.marker{\n  top: -2px;\n}\nbody.more-lead details>summary>div.marker{\n  top: 2px;\n}\nbody.small-font.more-lead details>summary>div.marker{\n  top: 1px;\n}\nul>li, ol>li, div.wolai-block.wolai-task-block {\n  padding: 3px 2px 3px 29px;\n}\ndetails {\n  padding: 3px 2px;\n}\ndetails>.wolai-block {\n  margin-left: 29px !important;\n}\ndetails>summary {\n  padding-left: 27px;\n}\ndetails>summary { position: relative; }\ndiv.wolai-block.wolai-task-block.checked {\n  opacity: 0.5;\n}\ndiv.wolai-block.wolai-task-block.checked>.wrapper {\n  text-decoration: line-through;\n}\ndetails>summary>div.marker {\n    height:100%;\n    align-items: center;\n    justify-content: center;\n  }\ndetails>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(33, 37, 41); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(33, 37, 41); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.def-color>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(33, 37, 41); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.def-color[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(33, 37, 41); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.gray>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(140, 140, 140); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.gray[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(140, 140, 140); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.brown>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(163, 67, 31); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.brown[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(163, 67, 31); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.orange>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(240, 107, 5); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.orange[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(240, 107, 5); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.yellow>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(223, 171, 1); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.yellow[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(223, 171, 1); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.green>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(3, 135, 1); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.green[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(3, 135, 1); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.blue>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(5, 117, 197); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.blue[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(5, 117, 197); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.purple>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(136, 49, 204); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.purple[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(136, 49, 204); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.pink>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(200, 21, 182); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.pink[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(200, 21, 182); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.red>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(233, 30, 44); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.red[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(233, 30, 44); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\n@media (prefers-color-scheme: dark) {\ndetails>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgba(255, 255, 255, 0.8509803921568627); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgba(255, 255, 255, 0.8509803921568627); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.def-color>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgba(255, 255, 255, 0.8509803921568627); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.def-color[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgba(255, 255, 255, 0.8509803921568627); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.gray>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(102, 102, 102); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.gray[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(102, 102, 102); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.brown>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(199, 103, 67); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.brown[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(199, 103, 67); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.orange>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(219, 95, 0); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.orange[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(219, 95, 0); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.yellow>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(200, 148, 44); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.yellow[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(200, 148, 44); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.green>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(27, 167, 132); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.green[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(27, 167, 132); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.blue>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(44, 134, 252); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.blue[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(44, 134, 252); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.purple>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(184, 82, 235); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.purple[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(184, 82, 235); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.pink>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(218, 78, 143); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.pink[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(218, 78, 143); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.red>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(226, 80, 88); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.red[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(226, 80, 88); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\n}\nhr {\n  display: block;\n  border-top-color: transparent;\n  border-left-color: transparent;\n  border-right-color: transparent;\n  border-bottom: 1px solid var(--wolai-border-color) !important;\n}\nhr{\n  margin-top: 10.5px;\n  margin-bottom: 10.5px;\n}\nbody.less-lead hr{\n  margin-top: 8.5px;\n  margin-bottom: 8.5px;\n}\nbody.more-lead hr{\n  margin-top: 12.5px;\n  margin-bottom: 12.5px;\n}\ndiv.wolai-block.wolai-simple-table{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead div.wolai-block.wolai-simple-table{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead div.wolai-block.wolai-simple-table{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\ndiv.wolai-block.wolai-simple-table {\n  display: flex;\n}\ntable {\n  border-collapse: separate;\n  border: 0 solid transparent;\n  border-spacing: 0;\n  padding: 0;\n  margin: 6px;\n  border-radius: 3px;\n  box-shadow: 0 0 0 1px var(--wolai-table-border-color);\n}\ntable>caption {\n  caption-side: bottom;\n}\ntable>thead {\n  background: var(--wolai-table-header-bg);\n  border-radius: 3px;\n}\ntable td, table th {\n  font-weight: inherit;\n  text-align: inherit;\n  padding: 5px 10px;\n  width: 100px;\n}\ntable td {\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font table td {\n  font-size: 14px;\n  line-height: 20px;\n  min-height: 20px;\n}\ntable th {\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font table th {\n  font-size: 14px;\n  line-height: 20px;\n  min-height: 20px;\n}\ntr>td, tr>th {\n  border: 0 solid transparent;\n  border-left: 1px solid var(--wolai-table-border-color);\n  border-top: 1px solid var(--wolai-table-border-color);\n}\ntr>td:first-child,\ntr>th:first-child {\n  border-left: 0 transparent;\n}\ntable tr:first-child>td, table tr:first-child>th {\n  border-top: 0 transparent;\n}\ntable>thead+tbody>tr:first-child>td {\n  border-top: 1px solid var(--wolai-table-border-color);\n}\ntable tr:first-child>td:first-child,\ntable tr:first-child>th:first-child {\n  border-top-left-radius: 3px;\n}\ntable tr:first-child>td:last-child,\ntable tr:first-child>th:last-child {\n  border-top-right-radius: 3px;\n}\ntable>thead+tbody>tr:first-child>td:first-child,\ntable>thead+tbody>tr:first-child>td:last-child {\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n}\ntable tr:last-child>td:first-child,\ntable tr:only-child>th:first-child {\n  border-bottom-left-radius: 3px;\n}\ntable tr:last-child>td:last-child,\ntable tr:only-child>th:last-child {\n  border-bottom-right-radius: 3px;\n}\nprogress {\n  appearance: none; -webkit-appearance: none; width: 100%;\n}\ndiv.wolai-block.wolai-progress>progress {\n  display: none;\n}\ndiv.wolai-block.wolai-progress>div.display {\n  display: flex; align-items: center;\n  height: 34px;\n}\nbody.small-font div.wolai-block.wolai-progress>div.display {\n  height: 30px;\n}\ndiv.wolai-block.wolai-progress>div.display>div.marker {\n  display: flex; justify-content: center; align-items: center;\n  flex-shrink: 0;\n  width: 26px;\n  margin-left: 2px;\n  margin-right: 0;\n  padding-left: 0;\n  padding-right: 0;\n}\ndiv.wolai-block.wolai-progress>div.display>.content {\n  overflow: hidden; position: relative; flex: 1;\n  height: 10px;\n  border-radius: 5px;\n}\nbody.small-font div.wolai-block.wolai-progress>div.display>.content {\n  height: 8px;\n  border-radius: 4px;\n}\ndiv.wolai-block.wolai-progress>div.display>.content>.miu {\n  position: absolute; left: 0; top: 0; width: 0; height: 100%;\n  background: var(--wolai-theme-color);\n}\ndiv.wolai-block.wolai-progress>div.display>.content>.er {\n  position: absolute; left: 0; top: 0; width: 100%; height: 100%;\n  background: var(--wolai-theme-color);\n  opacity: 0.15;\n}\ndiv.wolai-block.wolai-progress>div.display>.digit {\n  color: var(--wolai-desc-color);\n  text-align: left;\n  margin-left: 8px;\n  margin-right: 2px;\n  width: 44px;\n  font-variant-numeric: tabular-nums;\n}\nbody.small-font div.wolai-block.wolai-progress>div.display>.digit {\n  font-size: 14px;\n  line-height: 14px;\n}\ndiv.wolai-block.wolai-progress>div.display>.digit[data-value]::before {\n  content: attr(data-value) \"%\";\n}\ndiv.wolai-block.wolai-bookmark {\n  position: relative;\n  border: 1px solid var(--wolai-bookmark-node-border-color);\n  border-radius: 4px;\n  overflow: hidden;\n}\n@media (prefers-color-scheme: dark) {\n  div.wolai-block.wolai-bookmark {\n    background-color: var(--wolai-color-cultured);\n  }\n}\ndiv.wolai-block.wolai-bookmark{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead div.wolai-block.wolai-bookmark{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead div.wolai-block.wolai-bookmark{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\ndiv.wolai-block.wolai-bookmark>a {\n  position: absolute;\n  width: 100%; height: 100%;\n  color: transparent;\n  user-select: none;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box {\n  display: flex;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane {\n  padding: 16px;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane {\n  flex: 0.7;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane div[data-title] {\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 19px;\n  max-height: 19px;\n  margin-bottom: 3px;\n  color: var(--wolai-bookmark-title-color);\n  overflow: hidden;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane div[data-title]::before {\n  content: attr(data-title);\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane div[data-desc] {\n  font-size: 12px;\n  line-height: 19px;\n  max-height: 38px;\n  color: var(--wolai-bookmark-description-color);\n  overflow: hidden;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane div[data-desc]::before {\n  content: attr(data-desc);\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane>div.icon-host {\n  display: flex;\n  align-items: center;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane>div.icon-host>div.icon {\n  width: 14px;\n  height: 14px;\n  margin-right: 8px;\n  background-size: cover;\n  background-position: 50% 50%;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane>div.icon-host div[data-hostname] {\n  font-size: 12px;\n  line-height: 16px;\n  max-height: 16px;\n  color: var(--wolai-bookmark-title-color);\n  overflow: hidden;\n  flex-grow: 1;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane>div.icon-host div[data-hostname]::before {\n  content: attr(data-hostname);\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.preview-pane {\n  flex: 0.3;\n  background-size: cover;\n  background-position: 50% 50%;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.preview-pane[data-image] {\n  background-image: attr(data-image)\n}\ndiv.wolai-file-block.wolai-block,\ndiv.wolai-sub-page.wolai-block {\n  position: relative;\n}\ndiv.wolai-file-block.wolai-block {\n  padding: 3px 2px 3px 30px;\n}\ndiv.wolai-sub-page.wolai-block {\n  padding: 3px 2px 3px 30px;\n}\ndiv.wolai-file-block.wolai-block {\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font div.wolai-file-block.wolai-block {\n  font-size: 14px;\n  line-height: 20px;\n  min-height: 20px;\n}\ndiv.wolai-file-block.wolai-block{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead div.wolai-file-block.wolai-block{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead div.wolai-file-block.wolai-block{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\ndiv.wolai-sub-page.wolai-block {\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font div.wolai-sub-page.wolai-block {\n  font-size: 14px;\n  line-height: 20px;\n  min-height: 20px;\n}\ndiv.wolai-sub-page.wolai-block{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead div.wolai-sub-page.wolai-block{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead div.wolai-sub-page.wolai-block{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\ndiv.wolai-file-block.wolai-block:hover,\ndiv.wolai-sub-page.wolai-block:hover {\n  background-color: var(--wolai-hover-bg);\n}\ndiv.wolai-file-block.wolai-block a,\ndiv.wolai-sub-page.wolai-block a {\n  color: var(--wolai-title-color);\n  display: block;\n  text-decoration: none;\n}\ndiv.wolai-sub-page.wolai-block a {\n  font-weight: bold;\n}\ndiv.wolai-sub-page.wolai-block a>span {\n  display: inline-block;\n  line-height: 1.5;\n  border-bottom: 1px solid var(--wolai-border-color);\n}\ndiv.wolai-file-block.wolai-block a>.file-size {\n  font-size: 12px;\n  margin-left: 4px;\n  color: var(--wolai-title-color);\n  opacity: 0.65;\n}\nbody.small-font div.wolai-file-block.wolai-block a>.file-size {\n  font-size: 12px;\n}\ndiv.wolai-file-block.wolai-block a>.file-size::before {\n  content: attr(data-size);\n}\ndiv.wolai-file-block.wolai-block>div.file-icon {\n  position: absolute;\n  left: 3px;\n  top: 4px;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E%3Cpath d='M12.157 2.2a2.8 2.8 0 011.856.703l.148.142 4.843 4.965a2.8 2.8 0 01.789 1.756l.007.199V19a2.8 2.8 0 01-2.63 2.795L17 21.8H7a2.8 2.8 0 01-2.795-2.63L4.2 19V5a2.8 2.8 0 012.63-2.795L7 2.2h5.157zM11.2 3.8H7a1.2 1.2 0 00-1.194 1.077L5.8 5v14a1.2 1.2 0 001.077 1.194L7 20.2h10a1.2 1.2 0 001.194-1.077L18.2 19v-8.2H13a1.8 1.8 0 01-1.794-1.652L11.2 9V3.8zm1.816.362a1.2 1.2 0 00-.215-.175L12.8 9a.2.2 0 00.147.193L13 9.2h4.923l-.064-.073-4.843-4.965z' fill='none' style='fill: rgb(33, 37, 41);' fill-rule='evenodd'%3E%3C/path%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: center;\n}\n@media (prefers-color-scheme: dark) {\n  div.wolai-file-block.wolai-block>div.file-icon {\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E%3Cpath d='M12.157 2.2a2.8 2.8 0 011.856.703l.148.142 4.843 4.965a2.8 2.8 0 01.789 1.756l.007.199V19a2.8 2.8 0 01-2.63 2.795L17 21.8H7a2.8 2.8 0 01-2.795-2.63L4.2 19V5a2.8 2.8 0 012.63-2.795L7 2.2h5.157zM11.2 3.8H7a1.2 1.2 0 00-1.194 1.077L5.8 5v14a1.2 1.2 0 001.077 1.194L7 20.2h10a1.2 1.2 0 001.194-1.077L18.2 19v-8.2H13a1.8 1.8 0 01-1.794-1.652L11.2 9V3.8zm1.816.362a1.2 1.2 0 00-.215-.175L12.8 9a.2.2 0 00.147.193L13 9.2h4.923l-.064-.073-4.843-4.965z' fill='none' style='fill: rgba(255, 255, 255, 0.7);' fill-rule='evenodd'%3E%3C/path%3E%3C/svg%3E\");\n  }\n}\ndiv.wolai-sub-page.wolai-block>div.page-icon {\n  position: absolute;\n  left: 5px;\n  top: 7px;\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 20 20'%3E%3Cpath d='M14.202 18c1.32 0 1.8-.138 2.282-.396a2.692 2.692 0 001.12-1.12l.046-.088c.229-.456.35-.954.35-2.194V5.798l-.002-.23c-.015-1.148-.151-1.599-.394-2.052a2.692 2.692 0 00-1.12-1.12l-.088-.046c-.456-.229-.954-.35-2.194-.35H5.798l-.23.002c-1.148.015-1.599.151-2.052.394a2.692 2.692 0 00-1.12 1.12l-.046.088c-.221.441-.342.922-.35 2.077v8.52c0 1.321.138 1.8.396 2.283.258.483.637.862 1.12 1.12l.088.046c.441.221.922.342 2.077.35h8.52zm.094-1.778H5.704l-.256-.003c-.655-.012-.873-.064-1.094-.182a.916.916 0 01-.39-.391c-.133-.247-.183-.491-.186-1.35V5.704l.003-.256c.012-.655.064-.873.182-1.094a.916.916 0 01.391-.39c.247-.133.491-.183 1.35-.186h8.498c.935 0 1.188.049 1.444.185a.916.916 0 01.39.391c.133.247.183.491.186 1.35v8.498c0 .935-.049 1.188-.185 1.444a.916.916 0 01-.391.39c-.247.133-.491.183-1.35.186zm-2.413-7.555V6.889H5.556v1.778h6.327zm2.505 4.44v-1.779H5.556v1.778h8.832z' fill='rgb(33, 37, 41)' fill-rule='nonzero'%3E%3C/path%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: contain;\n  border-radius: 3px;\n}\n@media (prefers-color-scheme: dark) {\n  div.wolai-sub-page.wolai-block>div.page-icon {\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 20 20'%3E%3Cpath d='M14.202 18c1.32 0 1.8-.138 2.282-.396a2.692 2.692 0 001.12-1.12l.046-.088c.229-.456.35-.954.35-2.194V5.798l-.002-.23c-.015-1.148-.151-1.599-.394-2.052a2.692 2.692 0 00-1.12-1.12l-.088-.046c-.456-.229-.954-.35-2.194-.35H5.798l-.23.002c-1.148.015-1.599.151-2.052.394a2.692 2.692 0 00-1.12 1.12l-.046.088c-.221.441-.342.922-.35 2.077v8.52c0 1.321.138 1.8.396 2.283.258.483.637.862 1.12 1.12l.088.046c.441.221.922.342 2.077.35h8.52zm.094-1.778H5.704l-.256-.003c-.655-.012-.873-.064-1.094-.182a.916.916 0 01-.39-.391c-.133-.247-.183-.491-.186-1.35V5.704l.003-.256c.012-.655.064-.873.182-1.094a.916.916 0 01.391-.39c.247-.133.491-.183 1.35-.186h8.498c.935 0 1.188.049 1.444.185a.916.916 0 01.39.391c.133.247.183.491.186 1.35v8.498c0 .935-.049 1.188-.185 1.444a.916.916 0 01-.391.39c-.247.133-.491.183-1.35.186zm-2.413-7.555V6.889H5.556v1.778h6.327zm2.505 4.44v-1.779H5.556v1.778h8.832z' fill='rgb(255, 255, 255, 0.7)' fill-rule='nonzero'%3E%3C/path%3E%3C/svg%3E\");\n  }\n}\ndiv.wolai-sub-page.wolai-block>div.page-icon[data-symbol] {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-image: none;\n  font-size: 18px;\n}\ndiv.wolai-sub-page.wolai-block>div.page-icon[data-symbol]::before {\n  content: attr(data-symbol);\n}\n.wolai-block:not(ul, ol, div.wolai-task-block, div.wolai-text)>.block-ref:not(li) {\n  margin-left: 29px;\n}\ndiv.wolai-block.wolai-text>.block-ref {\n  margin-left: 20px;\n}\n.block-ref {\n  position: relative;\n}\n.block-ref>div.decorator {\n  position: absolute;\n  width: 1px;\n  height: 100%;\n  left: -2px;\n  top: 0;\n  border-left: 1px dashed var(--wolai-bi-link-line-color);\n}\nli.block-ref>div.decorator {\n  left: -2px;\n  top: -1px;\n  height: calc(100% + 2px);\n}\na {\n  text-decoration: none;\n  color: var(--wolai-color-default);\n}\n.inline-wrap span, span.inline-wrap {\n  white-space: pre-wrap;\n  word-break: break-word;\n}\nspan>a>span{\n    border-bottom: 1px solid var(--wolai-link-node-line-color);\n}\nspan>a>span:hover {\n  border-bottom-color: var(--wolai-link-node-hover-color);\n}\ncode {\n    padding: 0.2em 0.4em;\n    font-family: var(--wolai-mono-font);\n    font-size: 85%;\n    color: var(--wolai-inline-code-color);\n    background-color: var(--wolai-inline-code-background);\n    border-radius: 4px;\n}\nspan.jill { padding: 0 0.125em }\nspan>a.wolai-bi-link>span {\n  background-color: var(--wolai-bi-link-background);\n  border-radius: 2px 2px 0 0;\n  margin: 0 2px;\n  padding: 0 2px;\n}\nspan>a.wolai-bi-link:hover>span {\n  background-color: var(--wolai-bi-link-hover-color);\n}\nspan>a.wolai-bi-link>span {\n  border-bottom: 1px dashed var(--wolai-bi-link-line-color);\n}\nspan u {\n  text-decoration: none;\n  border-bottom: 1px solid var(--wolai-color-default);\n}\n.def-color u, u.def-color {\n  border-bottom-color: var(--wolai-color-default);\n}\n.gray u, u.gray {\n  border-bottom-color: var(--wolai-color-gray);\n}\n.brown u, u.brown {\n  border-bottom-color: var(--wolai-color-brown);\n}\n.orange u, u.orange {\n  border-bottom-color: var(--wolai-color-orange);\n}\n.yellow u, u.yellow {\n  border-bottom-color: var(--wolai-color-yellow);\n}\n.green u, u.green {\n  border-bottom-color: var(--wolai-color-green);\n}\n.blue u, u.blue {\n  border-bottom-color: var(--wolai-color-blue);\n}\n.purple u, u.purple {\n  border-bottom-color: var(--wolai-color-purple);\n}\n.pink u, u.pink {\n  border-bottom-color: var(--wolai-color-pink);\n}\n.red u, u.red {\n  border-bottom-color: var(--wolai-color-red);\n}\nspan.embed-jiu {\n  width: 18px;\n  height: 20px;\n  margin-right: 1px;\n  display: inline-block;\n  background-repeat: no-repeat;\n  background-size: contain;\n  vertical-align: middle;\n}\nh1 span.embed-jiu {\n  width: 30px;\n  height: 32px;\n}\nh2 span.embed-jiu {\n  width: 24px;\n  height: 26px;\n}\nh3 span.embed-jiu {\n  width: 20px;\n  height: 22px;\n}\nspan.embed-enum {\n  text-align: center;\n  vertical-align: inherit;\n}\nspan.embed-enum::before {\n  content: '1.'\n}\nspan.embed-quote {\n  margin-left: 7px;\n  width: 11px;\n  border-left-width: 4px;\n  border-left-style: solid;\n  border-left-color: var(--wolai-quote-border-color);\n}\nspan.embed-h1 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.787 18.523c.478 0 .8-.322.8-.811v-6.263c0-.558-.343-.907-.918-.907-.333 0-.59.048-.967.306l-1.536 1.063c-.252.177-.35.36-.35.607 0 .344.243.58.57.58a.66.66 0 0 0 .43-.145l1.133-.79h.032v5.549c0 .489.328.811.806.811z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h2 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM16.8 17.91h4.291c.42 0 .672-.263.672-.644 0-.392-.253-.645-.672-.645H18.17v-.032l1.676-1.611c1.268-1.198 1.73-1.789 1.73-2.734 0-1.332-1.107-2.256-2.75-2.256-1.467 0-2.439.8-2.702 1.66-.038.112-.059.225-.059.349 0 .402.258.66.693.66.349 0 .537-.15.72-.472.279-.623.709-.935 1.332-.935.692 0 1.187.457 1.187 1.096 0 .558-.247.934-1.204 1.853l-2.31 2.207c-.327.301-.445.505-.445.811 0 .408.253.693.763.693z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h3 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM18.427 18.582c1.8 0 3.018-.935 3.018-2.342 0-1.069-.746-1.745-1.901-1.853v-.032c.913-.188 1.617-.833 1.617-1.815 0-1.241-1.107-2.052-2.745-2.052-1.37 0-2.25.634-2.594 1.39-.08.184-.118.34-.118.522 0 .392.23.655.682.655.365 0 .553-.134.73-.5.253-.547.65-.821 1.305-.821.785 0 1.204.413 1.204 1.037 0 .633-.527 1.074-1.338 1.074h-.317c-.392 0-.617.236-.617.574 0 .35.225.58.617.58h.339c.94 0 1.493.42 1.487 1.171 0 .645-.547 1.107-1.342 1.107-.806 0-1.225-.322-1.499-.865-.161-.295-.365-.424-.687-.424-.446 0-.715.263-.715.682 0 .161.038.333.124.51.365.763 1.273 1.402 2.75 1.402z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h4 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM20.011 18.523c.446 0 .774-.274.774-.79v-.746h.44c.424 0 .666-.263.666-.645 0-.381-.236-.65-.666-.65h-.44v-3.98c0-.725-.516-1.17-1.338-1.17-.655 0-1.047.268-1.584 1.09-.843 1.251-1.617 2.433-2.149 3.389-.241.424-.338.725-.338 1.058 0 .543.392.908.978.908h2.89v.746c0 .516.321.79.767.79zm-.736-2.788h-2.481v-.043c.628-1.17 1.343-2.26 2.45-3.856h.031v3.9z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h5 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM18.523 18.582c1.768 0 2.998-1.117 2.998-2.771 0-1.478-1.053-2.52-2.536-2.52-.79 0-1.423.312-1.74.812h-.032l.183-2.154h3.061c.408 0 .666-.253.666-.645s-.263-.644-.666-.644h-3.4c-.628 0-.967.263-1.02.918l-.226 2.841c-.005.027-.005.043-.005.065-.022.435.23.806.762.806.36 0 .521-.081.838-.376.274-.264.66-.462 1.123-.462.843 0 1.445.58 1.445 1.396 0 .838-.607 1.445-1.45 1.445-.699 0-1.155-.338-1.435-.897-.182-.29-.386-.403-.709-.403-.419 0-.676.247-.676.66 0 .194.048.36.129.533.386.821 1.46 1.396 2.69 1.396z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h6 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.674 18.582c1.73 0 2.986-1.144 2.986-2.75 0-1.456-1.026-2.524-2.524-2.524-1.048 0-1.81.526-2.111 1.246h-.032v-.08c.01-1.655.574-2.708 1.68-2.708.533 0 .909.199 1.263.645.236.274.43.413.752.413.424 0 .677-.28.677-.639a.954.954 0 0 0-.113-.435c-.365-.725-1.29-1.268-2.573-1.268-2.014 0-3.239 1.547-3.239 4.115 0 .902.162 1.67.457 2.272.57 1.138 1.547 1.713 2.777 1.713zm-.022-1.289a1.404 1.404 0 0 1-1.418-1.423c0-.79.613-1.365 1.434-1.365.817 0 1.413.58 1.413 1.397-.005.779-.634 1.391-1.429 1.391z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h7 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM18.025 18.523c.349 0 .548-.129.725-.473l2.874-5.548c.209-.408.306-.666.306-.956 0-.553-.403-.886-.967-.886H16.95c-.387 0-.672.252-.672.639 0 .392.285.65.672.65h3.34v.032l-2.868 5.371a.988.988 0 0 0-.14.51c0 .376.285.66.742.66z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h8 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.588 18.582c1.848 0 3.142-.924 3.142-2.267 0-1.02-.747-1.772-1.805-1.982v-.032c.908-.23 1.52-.891 1.52-1.724 0-1.214-1.176-2.09-2.857-2.09-1.681 0-2.863.882-2.863 2.085 0 .843.618 1.504 1.53 1.73v.031c-1.057.205-1.81.957-1.81 1.977 0 1.343 1.29 2.272 3.143 2.272zm0-4.77c-.736 0-1.257-.44-1.257-1.074 0-.639.521-1.08 1.257-1.08.73 0 1.257.441 1.257 1.08 0 .634-.527 1.075-1.257 1.075zm0 3.588c-.854 0-1.45-.504-1.45-1.208 0-.698.596-1.198 1.45-1.198s1.445.5 1.445 1.198c0 .704-.591 1.208-1.445 1.208z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h9 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.357 18.582c2.057 0 3.287-1.536 3.287-4.114 0-.908-.161-1.676-.457-2.272-.563-1.139-1.541-1.714-2.776-1.714-1.73 0-2.987 1.144-2.987 2.75 0 1.51 1.139 2.53 2.573 2.53 1.02 0 1.783-.51 2.063-1.257h.032v.086c-.006 1.617-.532 2.707-1.676 2.707-.585 0-.93-.21-1.289-.644-.242-.269-.424-.414-.752-.414-.43 0-.671.274-.671.634 0 .14.032.274.107.424.322.693 1.262 1.284 2.546 1.284zm.059-4.023c-.811 0-1.413-.58-1.413-1.391 0-.784.629-1.391 1.43-1.391.8 0 1.422.618 1.422 1.418 0 .79-.617 1.364-1.439 1.364z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-bullet {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Ccircle fill='%23554C4C' cx='10' cy='10' r='3'%3E%3C/circle%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-toggle {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M11.460903,7.1826499 L15.3597015,11.981171 C15.7908888,12.5118631 15.7102242,13.2916205 15.1795321,13.7228078 C14.9588408,13.9021195 14.6831527,14 14.3987984,14 L6.60120158,14 C5.91742046,14 5.36310634,13.4456859 5.36310634,12.7619048 C5.36310634,12.4775505 5.46098681,12.2018624 5.64029853,11.981171 L9.53909695,7.1826499 C9.97028428,6.65195781 10.7500416,6.57129325 11.2807337,7.00248058 C11.3468265,7.056181 11.4072026,7.11655708 11.460903,7.1826499 Z' fill='%23554C4C' transform='translate(10.500000, 10.000000) rotate(-270.000000) translate(-10.500000, -10.000000) '%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-task {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Crect stroke='%23554C4C' stroke-width='1.5' x='2.75' y='2.75' width='14.5' height='14.5' rx='2'%3E%3C/rect%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-untask {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(5.000000, 5.000000)' fill='%23554C4C' fill-rule='nonzero'%3E%3Cpath d='M3.95468589,10 C3.60453141,10 3.33676622,9.8409332 3.05870237,9.4909862 L0.24716787,5.93849417 C0.09268795,5.747614 0,5.50371156 0,5.27041357 C0,4.7826087 0.38105046,4.40084836 0.83419156,4.40084836 C1.12255407,4.40084836 1.36972194,4.5068929 1.59629248,4.82502651 L3.91349125,7.8791092 L8.3934089,0.48780488 C8.5890834,0.15906681 8.8568486,0 9.1246138,0 C9.5777549,0 10,0.30752916 10,0.80593849 C10,1.03923648 9.8867147,1.28313892 9.7528321,1.495228 L4.79917611,9.4803818 C4.58290422,9.8303287 4.29454171,10 3.95468589,10 Z'%3E%3C/path%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-callout {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M15.7166667,10.720413 C16.3609989,10.720413 16.8833333,11.2427475 16.8833333,11.8870797 L16.8833333,11.8870797 L16.8833333,15.5037464 C16.8833333,16.1480786 16.3609989,16.670413 15.7166667,16.670413 L15.7166667,16.670413 L4.28333333,16.670413 C3.63900111,16.670413 3.11666667,16.1480786 3.11666667,15.5037464 L3.11666667,15.5037464 L3.11666667,11.8870797 C3.11666667,11.2427475 3.63900111,10.720413 4.28333333,10.720413 L4.28333333,10.720413 Z M15.7166667,11.8870797 L4.28333333,11.8870797 L4.28333333,15.5037464 L15.7166667,15.5037464 L15.7166667,11.8870797 Z M16.4166667,6.87041303 C16.7388328,6.87041303 17,7.13158026 17,7.45374636 C17,7.77591246 16.7388328,8.03707969 16.4166667,8.03707969 L3.58333333,8.03707969 C3.26116723,8.03707969 3,7.77591246 3,7.45374636 C3,7.13158026 3.26116723,6.87041303 3.58333333,6.87041303 L16.4166667,6.87041303 Z M16.4166667,3 C16.7388328,3 17,3.26116723 17,3.58333333 C17,3.90549944 16.7388328,4.16666667 16.4166667,4.16666667 L3.58333333,4.16666667 C3.26116723,4.16666667 3,3.90549944 3,3.58333333 C3,3.26116723 3.26116723,3 3.58333333,3 L16.4166667,3 Z' fill='%23554C4C' fill-rule='nonzero'%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-code {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M11.6166822,3.83364946 C11.9377497,3.91967925 12.1282855,4.24969686 12.0422557,4.57076443 L9.11376613,15.5000363 C9.02773634,15.8211038 8.69771872,16.0116396 8.37665116,15.9256098 C8.0555836,15.83958 7.86504784,15.5095624 7.95107764,15.1884948 L10.8795672,4.25922298 C10.965597,3.93815542 11.2956146,3.74761966 11.6166822,3.83364946 Z M6.57038834,5.4184093 C6.80542611,5.65344707 6.80542611,6.03451858 6.57038834,6.26955635 L3.08021403,9.75873548 L6.57038834,13.2489622 C6.80542611,13.4839999 6.80542611,13.8650715 6.57038834,14.1001092 C6.33535057,14.335147 5.95427906,14.335147 5.71924129,14.1001092 L1.80396485,10.1848328 C1.56892708,9.94979502 1.56892708,9.5687235 1.80396485,9.33368573 L5.71924129,5.4184093 C5.95427906,5.18337153 6.33535057,5.18337153 6.57038834,5.4184093 Z M13.422945,5.4184093 C13.6579828,5.18337153 14.0390543,5.18337153 14.274092,5.4184093 L14.274092,5.4184093 L18.1893685,9.33368573 C18.4244062,9.5687235 18.4244062,9.94979502 18.1893685,10.1848328 L18.1893685,10.1848328 L14.274092,14.1001092 C14.0390543,14.335147 13.6579828,14.335147 13.422945,14.1001092 C13.1879072,13.8650715 13.1879072,13.4839999 13.422945,13.2489622 L13.422945,13.2489622 L16.9131193,9.75873548 L13.422945,6.26955635 C13.1879072,6.03451858 13.1879072,5.65344707 13.422945,5.4184093 Z' fill='%23554C4C'%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-simp-table {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M14.7727273,2.5 C16.2789584,2.5 17.5,3.72104159 17.5,5.22727273 L17.5,14.7727273 C17.5,16.2789584 16.2789584,17.5 14.7727273,17.5 L5.22727273,17.5 C3.72104159,17.5 2.5,16.2789584 2.5,14.7727273 L2.5,5.22727273 C2.5,3.72104159 3.72104159,2.5 5.22727273,2.5 L14.7727273,2.5 Z M3.77186238,12.4423287 L3.77272727,14.7727273 C3.77272727,15.5473604 4.37826423,16.1805629 5.14180713,16.2248035 L5.22727273,16.2272727 L7.55767127,16.2281376 C7.53307493,16.1800392 7.51564204,16.1273634 7.50675303,16.0716375 L7.5,15.9859521 L7.499,12.5 L4.01404787,12.5 C3.92645682,12.5 3.84401,12.4792232 3.77186238,12.4423287 Z M11.5,12.5 L8.499,12.5 L8.5,15.9859521 C8.5,16.0735432 8.47922323,16.15599 8.44213461,16.2281376 L11.5576713,16.2281376 C11.5330749,16.1800392 11.515642,16.1273634 11.506753,16.0716375 L11.5,15.9859521 L11.5,12.5 Z M16.2281376,12.4423287 C16.1800392,12.4669251 16.1273634,12.484358 16.0716375,12.493247 L15.9859521,12.5 L12.5,12.5 L12.5,15.9859521 C12.5,16.0735432 12.4792232,16.15599 12.4421346,16.2281376 L14.7727273,16.2272727 C15.5473604,16.2272727 16.1805629,15.6217358 16.2248035,14.8581929 L16.2272727,14.7727273 L16.2281376,12.4423287 Z M7.499,8.248 L3.772,8.249 L3.77272727,8.25 L3.77186238,11.5578654 C3.81996079,11.5331396 3.87263663,11.5156636 3.92836249,11.5067602 L4.01404787,11.5 L7.499,11.5 L7.499,8.248 Z M16.227,8.249 L12.5,8.248 L12.5,11.5 L15.9859521,11.5 C16.0735432,11.5 16.15599,11.5207768 16.2281376,11.5578654 L16.227,8.249 Z M11.5,8.248 L8.499,8.248 L8.499,11.5 L11.5,11.5 L11.5,8.248 Z M14.7727273,3.77272727 L5.22727273,3.77272727 C4.45263957,3.77272727 3.81943715,4.37826423 3.77519646,5.14180713 L3.77272727,5.22727273 L3.772,7 L16.227,7 L16.2272727,5.22727273 C16.2272727,4.45263957 15.6217358,3.81943715 14.8581929,3.77519646 L14.7727273,3.77272727 Z' fill='%23554C4C' fill-rule='nonzero'%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\n@media (prefers-color-scheme: dark) {\nspan.embed-h1 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.787 18.523c.478 0 .8-.322.8-.811v-6.263c0-.558-.343-.907-.918-.907-.333 0-.59.048-.967.306l-1.536 1.063c-.252.177-.35.36-.35.607 0 .344.243.58.57.58a.66.66 0 0 0 .43-.145l1.133-.79h.032v5.549c0 .489.328.811.806.811z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h2 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM16.8 17.91h4.291c.42 0 .672-.263.672-.644 0-.392-.253-.645-.672-.645H18.17v-.032l1.676-1.611c1.268-1.198 1.73-1.789 1.73-2.734 0-1.332-1.107-2.256-2.75-2.256-1.467 0-2.439.8-2.702 1.66-.038.112-.059.225-.059.349 0 .402.258.66.693.66.349 0 .537-.15.72-.472.279-.623.709-.935 1.332-.935.692 0 1.187.457 1.187 1.096 0 .558-.247.934-1.204 1.853l-2.31 2.207c-.327.301-.445.505-.445.811 0 .408.253.693.763.693z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h3 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM18.427 18.582c1.8 0 3.018-.935 3.018-2.342 0-1.069-.746-1.745-1.901-1.853v-.032c.913-.188 1.617-.833 1.617-1.815 0-1.241-1.107-2.052-2.745-2.052-1.37 0-2.25.634-2.594 1.39-.08.184-.118.34-.118.522 0 .392.23.655.682.655.365 0 .553-.134.73-.5.253-.547.65-.821 1.305-.821.785 0 1.204.413 1.204 1.037 0 .633-.527 1.074-1.338 1.074h-.317c-.392 0-.617.236-.617.574 0 .35.225.58.617.58h.339c.94 0 1.493.42 1.487 1.171 0 .645-.547 1.107-1.342 1.107-.806 0-1.225-.322-1.499-.865-.161-.295-.365-.424-.687-.424-.446 0-.715.263-.715.682 0 .161.038.333.124.51.365.763 1.273 1.402 2.75 1.402z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h4 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM20.011 18.523c.446 0 .774-.274.774-.79v-.746h.44c.424 0 .666-.263.666-.645 0-.381-.236-.65-.666-.65h-.44v-3.98c0-.725-.516-1.17-1.338-1.17-.655 0-1.047.268-1.584 1.09-.843 1.251-1.617 2.433-2.149 3.389-.241.424-.338.725-.338 1.058 0 .543.392.908.978.908h2.89v.746c0 .516.321.79.767.79zm-.736-2.788h-2.481v-.043c.628-1.17 1.343-2.26 2.45-3.856h.031v3.9z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h5 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM18.523 18.582c1.768 0 2.998-1.117 2.998-2.771 0-1.478-1.053-2.52-2.536-2.52-.79 0-1.423.312-1.74.812h-.032l.183-2.154h3.061c.408 0 .666-.253.666-.645s-.263-.644-.666-.644h-3.4c-.628 0-.967.263-1.02.918l-.226 2.841c-.005.027-.005.043-.005.065-.022.435.23.806.762.806.36 0 .521-.081.838-.376.274-.264.66-.462 1.123-.462.843 0 1.445.58 1.445 1.396 0 .838-.607 1.445-1.45 1.445-.699 0-1.155-.338-1.435-.897-.182-.29-.386-.403-.709-.403-.419 0-.676.247-.676.66 0 .194.048.36.129.533.386.821 1.46 1.396 2.69 1.396z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h6 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.674 18.582c1.73 0 2.986-1.144 2.986-2.75 0-1.456-1.026-2.524-2.524-2.524-1.048 0-1.81.526-2.111 1.246h-.032v-.08c.01-1.655.574-2.708 1.68-2.708.533 0 .909.199 1.263.645.236.274.43.413.752.413.424 0 .677-.28.677-.639a.954.954 0 0 0-.113-.435c-.365-.725-1.29-1.268-2.573-1.268-2.014 0-3.239 1.547-3.239 4.115 0 .902.162 1.67.457 2.272.57 1.138 1.547 1.713 2.777 1.713zm-.022-1.289a1.404 1.404 0 0 1-1.418-1.423c0-.79.613-1.365 1.434-1.365.817 0 1.413.58 1.413 1.397-.005.779-.634 1.391-1.429 1.391z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h7 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM18.025 18.523c.349 0 .548-.129.725-.473l2.874-5.548c.209-.408.306-.666.306-.956 0-.553-.403-.886-.967-.886H16.95c-.387 0-.672.252-.672.639 0 .392.285.65.672.65h3.34v.032l-2.868 5.371a.988.988 0 0 0-.14.51c0 .376.285.66.742.66z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h8 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.588 18.582c1.848 0 3.142-.924 3.142-2.267 0-1.02-.747-1.772-1.805-1.982v-.032c.908-.23 1.52-.891 1.52-1.724 0-1.214-1.176-2.09-2.857-2.09-1.681 0-2.863.882-2.863 2.085 0 .843.618 1.504 1.53 1.73v.031c-1.057.205-1.81.957-1.81 1.977 0 1.343 1.29 2.272 3.143 2.272zm0-4.77c-.736 0-1.257-.44-1.257-1.074 0-.639.521-1.08 1.257-1.08.73 0 1.257.441 1.257 1.08 0 .634-.527 1.075-1.257 1.075zm0 3.588c-.854 0-1.45-.504-1.45-1.208 0-.698.596-1.198 1.45-1.198s1.445.5 1.445 1.198c0 .704-.591 1.208-1.445 1.208z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h9 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.357 18.582c2.057 0 3.287-1.536 3.287-4.114 0-.908-.161-1.676-.457-2.272-.563-1.139-1.541-1.714-2.776-1.714-1.73 0-2.987 1.144-2.987 2.75 0 1.51 1.139 2.53 2.573 2.53 1.02 0 1.783-.51 2.063-1.257h.032v.086c-.006 1.617-.532 2.707-1.676 2.707-.585 0-.93-.21-1.289-.644-.242-.269-.424-.414-.752-.414-.43 0-.671.274-.671.634 0 .14.032.274.107.424.322.693 1.262 1.284 2.546 1.284zm.059-4.023c-.811 0-1.413-.58-1.413-1.391 0-.784.629-1.391 1.43-1.391.8 0 1.422.618 1.422 1.418 0 .79-.617 1.364-1.439 1.364z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-bullet {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Ccircle fill='%23828282' cx='10' cy='10' r='3'%3E%3C/circle%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-toggle {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M11.460903,7.1826499 L15.3597015,11.981171 C15.7908888,12.5118631 15.7102242,13.2916205 15.1795321,13.7228078 C14.9588408,13.9021195 14.6831527,14 14.3987984,14 L6.60120158,14 C5.91742046,14 5.36310634,13.4456859 5.36310634,12.7619048 C5.36310634,12.4775505 5.46098681,12.2018624 5.64029853,11.981171 L9.53909695,7.1826499 C9.97028428,6.65195781 10.7500416,6.57129325 11.2807337,7.00248058 C11.3468265,7.056181 11.4072026,7.11655708 11.460903,7.1826499 Z' fill='%23828282' transform='translate(10.500000, 10.000000) rotate(-270.000000) translate(-10.500000, -10.000000) '%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-task {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Crect stroke='%23828282' stroke-width='1.5' x='2.75' y='2.75' width='14.5' height='14.5' rx='2'%3E%3C/rect%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-untask {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(5.000000, 5.000000)' fill='%23828282' fill-rule='nonzero'%3E%3Cpath d='M3.95468589,10 C3.60453141,10 3.33676622,9.8409332 3.05870237,9.4909862 L0.24716787,5.93849417 C0.09268795,5.747614 0,5.50371156 0,5.27041357 C0,4.7826087 0.38105046,4.40084836 0.83419156,4.40084836 C1.12255407,4.40084836 1.36972194,4.5068929 1.59629248,4.82502651 L3.91349125,7.8791092 L8.3934089,0.48780488 C8.5890834,0.15906681 8.8568486,0 9.1246138,0 C9.5777549,0 10,0.30752916 10,0.80593849 C10,1.03923648 9.8867147,1.28313892 9.7528321,1.495228 L4.79917611,9.4803818 C4.58290422,9.8303287 4.29454171,10 3.95468589,10 Z'%3E%3C/path%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-callout {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M15.7166667,10.720413 C16.3609989,10.720413 16.8833333,11.2427475 16.8833333,11.8870797 L16.8833333,11.8870797 L16.8833333,15.5037464 C16.8833333,16.1480786 16.3609989,16.670413 15.7166667,16.670413 L15.7166667,16.670413 L4.28333333,16.670413 C3.63900111,16.670413 3.11666667,16.1480786 3.11666667,15.5037464 L3.11666667,15.5037464 L3.11666667,11.8870797 C3.11666667,11.2427475 3.63900111,10.720413 4.28333333,10.720413 L4.28333333,10.720413 Z M15.7166667,11.8870797 L4.28333333,11.8870797 L4.28333333,15.5037464 L15.7166667,15.5037464 L15.7166667,11.8870797 Z M16.4166667,6.87041303 C16.7388328,6.87041303 17,7.13158026 17,7.45374636 C17,7.77591246 16.7388328,8.03707969 16.4166667,8.03707969 L3.58333333,8.03707969 C3.26116723,8.03707969 3,7.77591246 3,7.45374636 C3,7.13158026 3.26116723,6.87041303 3.58333333,6.87041303 L16.4166667,6.87041303 Z M16.4166667,3 C16.7388328,3 17,3.26116723 17,3.58333333 C17,3.90549944 16.7388328,4.16666667 16.4166667,4.16666667 L3.58333333,4.16666667 C3.26116723,4.16666667 3,3.90549944 3,3.58333333 C3,3.26116723 3.26116723,3 3.58333333,3 L16.4166667,3 Z' fill='%23828282' fill-rule='nonzero'%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-code {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M11.6166822,3.83364946 C11.9377497,3.91967925 12.1282855,4.24969686 12.0422557,4.57076443 L9.11376613,15.5000363 C9.02773634,15.8211038 8.69771872,16.0116396 8.37665116,15.9256098 C8.0555836,15.83958 7.86504784,15.5095624 7.95107764,15.1884948 L10.8795672,4.25922298 C10.965597,3.93815542 11.2956146,3.74761966 11.6166822,3.83364946 Z M6.57038834,5.4184093 C6.80542611,5.65344707 6.80542611,6.03451858 6.57038834,6.26955635 L3.08021403,9.75873548 L6.57038834,13.2489622 C6.80542611,13.4839999 6.80542611,13.8650715 6.57038834,14.1001092 C6.33535057,14.335147 5.95427906,14.335147 5.71924129,14.1001092 L1.80396485,10.1848328 C1.56892708,9.94979502 1.56892708,9.5687235 1.80396485,9.33368573 L5.71924129,5.4184093 C5.95427906,5.18337153 6.33535057,5.18337153 6.57038834,5.4184093 Z M13.422945,5.4184093 C13.6579828,5.18337153 14.0390543,5.18337153 14.274092,5.4184093 L14.274092,5.4184093 L18.1893685,9.33368573 C18.4244062,9.5687235 18.4244062,9.94979502 18.1893685,10.1848328 L18.1893685,10.1848328 L14.274092,14.1001092 C14.0390543,14.335147 13.6579828,14.335147 13.422945,14.1001092 C13.1879072,13.8650715 13.1879072,13.4839999 13.422945,13.2489622 L13.422945,13.2489622 L16.9131193,9.75873548 L13.422945,6.26955635 C13.1879072,6.03451858 13.1879072,5.65344707 13.422945,5.4184093 Z' fill='%23828282'%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-simp-table {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M14.7727273,2.5 C16.2789584,2.5 17.5,3.72104159 17.5,5.22727273 L17.5,14.7727273 C17.5,16.2789584 16.2789584,17.5 14.7727273,17.5 L5.22727273,17.5 C3.72104159,17.5 2.5,16.2789584 2.5,14.7727273 L2.5,5.22727273 C2.5,3.72104159 3.72104159,2.5 5.22727273,2.5 L14.7727273,2.5 Z M3.77186238,12.4423287 L3.77272727,14.7727273 C3.77272727,15.5473604 4.37826423,16.1805629 5.14180713,16.2248035 L5.22727273,16.2272727 L7.55767127,16.2281376 C7.53307493,16.1800392 7.51564204,16.1273634 7.50675303,16.0716375 L7.5,15.9859521 L7.499,12.5 L4.01404787,12.5 C3.92645682,12.5 3.84401,12.4792232 3.77186238,12.4423287 Z M11.5,12.5 L8.499,12.5 L8.5,15.9859521 C8.5,16.0735432 8.47922323,16.15599 8.44213461,16.2281376 L11.5576713,16.2281376 C11.5330749,16.1800392 11.515642,16.1273634 11.506753,16.0716375 L11.5,15.9859521 L11.5,12.5 Z M16.2281376,12.4423287 C16.1800392,12.4669251 16.1273634,12.484358 16.0716375,12.493247 L15.9859521,12.5 L12.5,12.5 L12.5,15.9859521 C12.5,16.0735432 12.4792232,16.15599 12.4421346,16.2281376 L14.7727273,16.2272727 C15.5473604,16.2272727 16.1805629,15.6217358 16.2248035,14.8581929 L16.2272727,14.7727273 L16.2281376,12.4423287 Z M7.499,8.248 L3.772,8.249 L3.77272727,8.25 L3.77186238,11.5578654 C3.81996079,11.5331396 3.87263663,11.5156636 3.92836249,11.5067602 L4.01404787,11.5 L7.499,11.5 L7.499,8.248 Z M16.227,8.249 L12.5,8.248 L12.5,11.5 L15.9859521,11.5 C16.0735432,11.5 16.15599,11.5207768 16.2281376,11.5578654 L16.227,8.249 Z M11.5,8.248 L8.499,8.248 L8.499,11.5 L11.5,11.5 L11.5,8.248 Z M14.7727273,3.77272727 L5.22727273,3.77272727 C4.45263957,3.77272727 3.81943715,4.37826423 3.77519646,5.14180713 L3.77272727,5.22727273 L3.772,7 L16.227,7 L16.2272727,5.22727273 C16.2272727,4.45263957 15.6217358,3.81943715 14.8581929,3.77519646 L14.7727273,3.77272727 Z' fill='%23828282' fill-rule='nonzero'%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\n}\nspan>a.wolai-bi-link>span.embed-page {\n  color: var(--wolai-bi-link-text-color);\n  background-color: var(--wolai-bi-link-text-background);\n  margin: 0 2px;\n  padding: 0 2px;\n  border-radius: 3px;\n}\nspan>a.wolai-bi-link>span.embed-page:hover {\n  background-color: var(--wolai-bi-link-text-hover-background);\n}\nspan>a.wolai-bi-link>span.embed-page {\n  border-bottom: none;\n}\nspan>a.wolai-bi-link.embed-progress>span {\n  border-bottom: none;\n  border-radius: 2px;\n  display: inline-block;\n}\nspan>a.wolai-bi-link.embed-progress>span>div {\n  display: flex;\n  align-items: center;\n  margin: 2px;\n}\nspan>a.wolai-bi-link.embed-progress>span .content {\n  overflow: hidden; position: relative;\n  width: 32px;\n  height: 6px;\n  border-radius: 3px;\n}\nbody.small-font span>a.wolai-bi-link.embed-progress>span .content {\n  width: 28px;\n  height: 4px;\n  border-radius: 2px;\n}\nspan>a.wolai-bi-link.embed-progress .miu {\n  position: absolute; left: 0; top: 0; width: 0; height: 100%;\n  background: var(--wolai-theme-color);\n}\nspan>a.wolai-bi-link.embed-progress .er {\n  position: absolute; left: 0; top: 0; width: 100%; height: 100%;\n  background: var(--wolai-theme-color);\n  opacity: 0.15;\n}\nspan>a.wolai-bi-link.embed-progress .digit {\n  color: var(--wolai-desc-color);\n  margin-left: 8px;\n  line-height: 18px;\n  font-variant-numeric: tabular-nums;\n}\nbody.small-font span>a.wolai-bi-link.embed-progress .digit {\n  line-height: 14px;\n}\nspan>a.wolai-bi-link.embed-progress .digit[data-value]::before {\n  content: attr(data-value) \"%\";\n}\nheader, article, footer {\n    color: var(--wolai-color-default);\n}\narticle .def-color { color: inherit; }\narticle .gray { color: var(--wolai-color-gray); }\narticle .brown { color: var(--wolai-color-brown); }\narticle .orange { color: var(--wolai-color-orange); }\narticle .yellow { color: var(--wolai-color-yellow); }\narticle .green { color: var(--wolai-color-green); }\narticle .blue { color: var(--wolai-color-blue); }\narticle .purple { color: var(--wolai-color-purple); }\narticle .pink { color: var(--wolai-color-pink); }\narticle .red { color: var(--wolai-color-red); }\narticle .bg-default { background-color: var(--wolai-color-blank-bg);}\narticle .bg-cultured { background-color: var(--wolai-color-cultured); }\narticle .bg-lightgray { background-color: var(--wolai-color-lightgray); }\narticle .bg-apricot { background-color: var(--wolai-color-apricot); }\narticle .bg-vivid_tangerine { background-color: var(--wolai-color-vivid_tangerine); }\narticle .bg-blond { background-color: var(--wolai-color-blond); }\narticle .bg-aero_blue { background-color: var(--wolai-color-aero_blue); }\narticle .bg-uranian_blue { background-color: var(--wolai-color-uranian_blue); }\narticle .bg-lavender_blue { background-color: var(--wolai-color-lavender_blue); }\narticle .bg-pale_purple { background-color: var(--wolai-color-pale_purple); }\narticle .bg-pink_lavender { background-color: var(--wolai-color-pink_lavender); }\narticle .bg-lightpink { background-color: var(--wolai-color-lightpink); }\narticle .bg-fluorescent_yellow { background-color: var(--wolai-color-fluorescent_yellow); }\narticle .bg-fluorescent_green { background-color: var(--wolai-color-fluorescent_green); }\narticle .bg-fluorescent_green2 { background-color: var(--wolai-color-fluorescent_green2); }\narticle .bg-fluorescent_blue { background-color: var(--wolai-color-fluorescent_blue); }\narticle .bg-fluorescent_purple { background-color: var(--wolai-color-fluorescent_purple); }\narticle .bg-fluorescent_purple2 { background-color: var(--wolai-color-fluorescent_purple2); }\n\n\n    @media print {\n      span {\n        page-break-inside: avoid;\n      }\n\n      * {\n        -webkit-print-color-adjust: exact !important;\n      }\n\n      /* 链接不显示修饰线 */\n      a {\n        text-decoration: none !important;\n      }\n\n    }\n    \ndetails > summary::-webkit-details-marker {display: none;}","date":"2023-12-11T05:41:48.592Z","updated":"2023-12-11T05:41:48.592Z","path":"html/nest/css/wolai.css","layout":"false","_id":"clq0gtc9v0005zqq9b0hc10hb","title":"","comments":1,"content":":root {\n  --color-basic-50: #FFFFFF;\n  --color-basic-50-a: rgba(255, 255, 255, 0);\n  --color-basic-75: #FAFAFA;\n  --color-basic-100: #F5F5F5;\n  --color-basic-200: #EAEAEA;\n  --color-basic-300: #E1E1E1;\n  --color-basic-400: #CACACA;\n  --color-basic-500: #B3B3B3;\n  --color-basic-600: #8E8E8E;\n  --color-basic-700: #6E6E6E;\n  --color-basic-800: #4B4B4B;\n  --color-basic-900: #2C2C2C;\n  --wolai-border-color: rgba(38, 22, 22, 0.10196078431372549);\n  --wolai-bi-link-background: rgba(208, 207, 207, 0.2);\n  --wolai-bi-link-hover-color: #F1EFEF;\n  --wolai-bi-link-line-color: #BBBBBB;\n  --wolai-bi-link-text-color: rgb(207, 86, 89);\n  --wolai-bi-link-text-background: rgba(204, 112, 112, 0.10196078431372549);\n  --wolai-bi-link-text-hover-background: rgba(204, 112, 112, 0.1803921568627451);\n  --wolai-bookmark-description-color: #878683;\n  --wolai-bookmark-node-border-color: #DDDDDD;\n  --wolai-bookmark-title-color: rgb(55, 53, 47);\n  --wolai-code-node-bg: #F6F5F5;\n  --wolai-code-node-color: #333940;\n  --wolai-desc-color: #BCB3B3;\n  --wolai-caption-color: #8E8E8E;\n  --wolai-hover-bg: #EEECEC;\n  --wolai-inline-code-background: rgba(208, 187, 193, 0.2);\n  --wolai-inline-code-color: rgb(85, 142, 218);\n  --wolai-link-node-color: #544C4C;\n  --wolai-link-node-hover-color: #231E1E;\n  --wolai-link-node-line-color: #E8E6E6;\n  --wolai-modal-color: #554C4C;\n  --wolai-quote-border-color: rgba(187, 187, 187, 0.5019607843137255);\n  --wolai-scrollbar-color: #D2CFCF;\n  --wolai-scrollbar-hover-color: #6C6A6A;\n  --wolai-table-border-color: #DDDDDD;\n  --wolai-table-header-bg: #F5F5F5;\n  --wolai-theme-color: rgb(207, 86, 89);\n  --wolai-title-color: #312727;\n  --wolai-color-default: rgb(33, 37, 41);\n  --wolai-color-gray: rgb(140, 140, 140);\n  --wolai-color-brown: rgb(163, 67, 31);\n  --wolai-color-orange: rgb(240, 107, 5);\n  --wolai-color-yellow: rgb(223, 171, 1);\n  --wolai-color-green: rgb(3, 135, 1);\n  --wolai-color-blue: rgb(5, 117, 197);\n  --wolai-color-purple: rgb(136, 49, 204);\n  --wolai-color-pink: rgb(200, 21, 182);\n  --wolai-color-red: rgb(233, 30, 44);\n  --wolai-color-blank-bg: #FFFFFF;\n  --wolai-color-cultured: rgba(140, 140, 140, 0.12156862745098039);\n  --wolai-color-lightgray: rgba(92, 92, 92, 0.2);\n  --wolai-color-apricot: rgba(163, 67, 31, 0.2);\n  --wolai-color-vivid_tangerine: rgba(240, 107, 5, 0.2);\n  --wolai-color-blond: rgba(240, 200, 0, 0.2);\n  --wolai-color-aero_blue: rgba(3, 135, 102, 0.2);\n  --wolai-color-uranian_blue: rgba(5, 117, 197, 0.2);\n  --wolai-color-lavender_blue: rgba(74, 82, 199, 0.2);\n  --wolai-color-pale_purple: rgba(136, 49, 204, 0.2);\n  --wolai-color-pink_lavender: rgba(200, 21, 182, 0.2);\n  --wolai-color-lightpink: rgba(233, 30, 44, 0.2);\n  --wolai-color-fluorescent_yellow: #FFF88F;\n  --wolai-color-fluorescent_green: #D3F8B6;\n  --wolai-color-fluorescent_green2: #AFFAD1;\n  --wolai-color-fluorescent_blue: #B1FFFF;\n  --wolai-color-fluorescent_purple: #FDBFFF;\n  --wolai-color-fluorescent_purple2: #D2CBFF;\n}\n@media (prefers-color-scheme: dark) {\n  :root {\n    --color-basic-50: #252525;\n    --color-basic-50-a: rgba(37, 37, 37, 0);\n    --color-basic-75: #2F2F2F;\n    --color-basic-100: #323232;\n    --color-basic-200: #3E3E3E;\n    --color-basic-300: #4A4A4A;\n    --color-basic-400: #5A5A5A;\n    --color-basic-500: #6E6E6E;\n    --color-basic-600: #909090;\n    --color-basic-700: #B9B9B9;\n    --color-basic-800: #BDBDBD;\n    --color-basic-900: #C2C2C2;\n    --wolai-border-color: #444444;\n    --wolai-bi-link-background: rgba(208, 207, 207, 0.2);\n    --wolai-bi-link-hover-color: #686868;\n    --wolai-bi-link-line-color: #888888;\n    --wolai-bi-link-text-color: rgb(245, 132, 132);\n    --wolai-bi-link-text-background: rgba(154, 101, 101, 0.3803921568627451);\n    --wolai-bi-link-text-hover-background: rgba(154, 101, 101, 0.5019607843137255);\n    --wolai-bookmark-description-color: #7F7F81;\n    --wolai-bookmark-node-border-color: #555555;\n    --wolai-bookmark-title-color: rgb(190, 190, 191);\n    --wolai-code-node-bg: #282A36;\n    --wolai-code-node-color: #F8F8F2;\n    --wolai-desc-color: #8F8F8F;\n    --wolai-caption-color: #909090;\n    --wolai-hover-bg: #2C2C2F;\n    --wolai-inline-code-background: rgba(208, 187, 193, 0.2);\n    --wolai-inline-code-color: #84AADC;\n    --wolai-link-node-color: rgba(255, 255, 255, 0.5019607843137255);\n    --wolai-link-node-hover-color: rgba(255, 255, 255, 0.7019607843137254);\n    --wolai-link-node-line-color: rgba(255, 255, 255, 0.2);\n    --wolai-modal-color: rgba(255, 255, 255, 0.7019607843137254);\n    --wolai-quote-border-color: #404040;\n    --wolai-scrollbar-color: #545454;\n    --wolai-scrollbar-hover-color: #C0BCBC;\n    --wolai-table-border-color: #555555;\n    --wolai-table-header-bg: #3A3A3A;\n    --wolai-theme-color: rgb(207, 86, 89);\n    --wolai-title-color: rgba(255, 255, 255, 0.7019607843137254);\n    --wolai-color-default: rgba(255, 255, 255, 0.8509803921568627);\n    --wolai-color-gray: rgb(102, 102, 102);\n    --wolai-color-brown: rgb(199, 103, 67);\n    --wolai-color-orange: rgb(219, 95, 0);\n    --wolai-color-yellow: rgb(200, 148, 44);\n    --wolai-color-green: rgb(27, 167, 132);\n    --wolai-color-blue: rgb(44, 134, 252);\n    --wolai-color-purple: rgb(184, 82, 235);\n    --wolai-color-pink: rgb(218, 78, 143);\n    --wolai-color-red: rgb(226, 80, 88);\n    --wolai-color-blank-bg: #252528;\n    --wolai-color-cultured: rgba(102, 102, 102, 0.2);\n    --wolai-color-lightgray: rgba(140, 140, 140, 0.2784313725490196);\n    --wolai-color-apricot: rgba(199, 103, 67, 0.2784313725490196);\n    --wolai-color-vivid_tangerine: rgba(219, 95, 0, 0.2784313725490196);\n    --wolai-color-blond: rgba(200, 148, 44, 0.2784313725490196);\n    --wolai-color-aero_blue: rgba(27, 167, 132, 0.2784313725490196);\n    --wolai-color-uranian_blue: rgba(44, 134, 252, 0.2784313725490196);\n    --wolai-color-lavender_blue: rgba(44, 134, 252, 0.2784313725490196);\n    --wolai-color-pale_purple: rgba(184, 82, 235, 0.2784313725490196);\n    --wolai-color-pink_lavender: rgba(218, 78, 143, 0.2784313725490196);\n    --wolai-color-lightpink: rgba(226, 80, 88, 0.2784313725490196);\n    --wolai-color-fluorescent_yellow: #8D8829;\n    --wolai-color-fluorescent_green: #568B2A;\n    --wolai-color-fluorescent_green2: #34805C;\n    --wolai-color-fluorescent_blue: #329096;\n    --wolai-color-fluorescent_purple: #843473;\n    --wolai-color-fluorescent_purple2: #5B309B;\n  }\n}\n:root {\n  --wolai-normal-font: \"\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\", zh quote\", -apple-system, BlinkMacSystemFont, \"PingFang SC\", \"Noto Sans\", \"Noto Sans CJK SC\", \"Microsoft YaHei\", 微软雅黑, sans-serif, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial;\n  --wolai-mono-font: SFMono-Regular, Consolas, \"Liberation Mono\", Menlo, monospace;\n  --wolai-serif-font: \"zh question mark\", \"Times New Roman\", \"Songti SC\", STSong, NSimSun, SimSun, FangSong, \"Nanum Myeongjo\", NanumMyeongjo, Batang, serif !important;\n  --wolai-kai-font: \"zh question mark\", \"Times New Roman\", \"Kaiti SC\", STKaiti, KaiTi !important;\n}\n.wolai-block {\n  border-radius: 3px;\n  font-weight: normal;\n}\n.block-frame {\n  border-color: var(--wolai-border-color);\n}\n.wolai-block>.wolai-block {\n  margin-left: 29px;\n}\ndiv.wolai-block.wolai-text>.wolai-block {\n  margin-left: 20px;\n}\n.placeholder {\n  opacity: 0.3;\n}\nbody {\n  background-color: var(--wolai-color-blank-bg);\n  font-family: var(--wolai-normal-font);\n}\n\n.font-serif {\n  font-family: var(--wolai-serif-font);\n}\n.font-kai {\n  font-family: var(--wolai-kai-font);\n}\n\nheader>div.image {\n  height: 120px;\n}\n\nheader>div.image.has {\n  height: 30vh;\n  background-size: cover;\n  background-position: 50% 50%;\n}\n\ndiv.title>div.banner {\n  height: 36px;\n  margin-bottom: 52px;\n}\n\ndiv.title>div.banner>div.icon {\n  margin-top: -36px;\n  width: 66px;\n  height: 66px;\n  font-size: 66px;\n  background-size: cover;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: var(--wolai-normal-font);\n}\n\ndiv.title>div.banner>div.icon.icon-image {\n  border-radius: 5px;\n}\n\ndiv.title>div.banner>div.icon[data-symbol]::before {\n  content: attr(data-symbol)\n}\nheader>div.title {\n  box-sizing: content-box;\n  max-width: 100%;\n  /* padding: 0 98px; */\n  margin: 0 auto;\n}\n@media only screen and (max-width: 760px) {\n  header>div.title {\n    max-width: inherit;\n    padding: 0 72px;\n  }\n}\nbody.full-width header>div.title {\n  max-width: 100%;\n}\ndiv.main-title {\n    font-size: 40px;\n    font-weight: 600;\n    line-height: 48px;\n    margin-bottom: 20px;\n}\ndiv.main-title::before {\n    content: attr(data-title);\n}\nbody.small-font div.main-title {\n    font-size: 34px;\n    line-height: 40.8px;\n}\n.wolai-serial-number {\n    color: var(--color-basic-500);\n    padding: 0 2px;\n    marginRight: 3px;\n  }\nfooter {\n  height: 80px;\n  padding: 20px 0 0 60px;\n}\n::-webkit-scrollbar {\n  width: 8px;\n  height: 8px;\n}\n::-webkit-scrollbar-thumb {\n  background-color: var(--wolai-scrollbar-color);\n  border-radius: 4px;\n}\n::-webkit-scrollbar-thumb:hover {\n  background-color: var(--wolai-scrollbar-hover-color);\n}\n::-webkit-scrollbar-track {\n  background-color: transparent;\n}\narticle {\n  box-sizing: content-box;\n  max-width: 100%;\n  /* padding: 0 98px; */\n  margin: 0 auto;\n}\nbody.full-width article {\n  max-width: 100%;\n}\n@media only screen and (max-width: 760px) {\n  article {\n    padding: 0 72px;\n  }\n}\n.wolai-block:first-child {\n  margin-top: 0 !important;\n}\n.wolai-block:last-child {\n  margin-bottom: 0 !important;\n}\nspan.katex-display {\n  font-size: 16px;\n  line-height: 24px;\n}\nbody.small-font span.katex-display {\n  font-size: 14px;\n  line-height: 21px;\n}\nh1 {\n  font-size: 30px;\n  line-height: 39px;\n  min-height: 36px;\n}\nbody.small-font h1 {\n  font-size: 26px;\n  line-height: 34px;\n  min-height: 22px;\n}\nh2 {\n  font-size: 24px;\n  line-height: 31px;\n  min-height: 28.8px;\n}\nbody.small-font h2 {\n  font-size: 22px;\n  line-height: 27px;\n  min-height: 22px;\n}\nh3 {\n  font-size: 20px;\n  line-height: 24px;\n  min-height: 24px;\n}\nbody.small-font h3 {\n  font-size: 18px;\n  line-height: 22px;\n  min-height: 22px;\n}\nh4 {\n  font-size: 18px;\n  line-height: 21.6px;\n  min-height: 21.6px;\n}\nbody.small-font h4 {\n  font-size: 16px;\n  line-height: 22px;\n  min-height: 22px;\n}\nh5 {\n  font-size: 16px;\n  line-height: 21.6px;\n  min-height: 21.6px;\n}\nbody.small-font h5 {\n  font-size: 14px;\n  line-height: 22px;\n  min-height: 22px;\n}\nh1{\n  margin-top: 36px;\n  margin-bottom: 13px;\n}\nbody.less-lead h1{\n  margin-top: 34px;\n  margin-bottom: 11px;\n}\nbody.more-lead h1{\n  margin-top: 38px;\n  margin-bottom: 15px;\n}\nh2{\n  margin-top: 26px;\n  margin-bottom: 9px;\n}\nbody.less-lead h2{\n  margin-top: 24px;\n  margin-bottom: 7px;\n}\nbody.more-lead h2{\n  margin-top: 28px;\n  margin-bottom: 11px;\n}\nh3{\n  margin-top: 16px;\n  margin-bottom: 9px;\n}\nbody.less-lead h3{\n  margin-top: 14px;\n  margin-bottom: 7px;\n}\nbody.more-lead h3{\n  margin-top: 18px;\n  margin-bottom: 11px;\n}\nh4{\n  margin-top: 13px;\n  margin-bottom: 9px;\n}\nbody.less-lead h4{\n  margin-top: 11px;\n  margin-bottom: 7px;\n}\nbody.more-lead h4{\n  margin-top: 15px;\n  margin-bottom: 11px;\n}\nh5{\n  margin-top: 13px;\n  margin-bottom: 9px;\n}\nbody.less-lead h5{\n  margin-top: 11px;\n  margin-bottom: 7px;\n}\nbody.more-lead h5{\n  margin-top: 15px;\n  margin-bottom: 11px;\n}\nh1, h2, h3, h4, h5 {\n  padding: 3px 2px;\n}\nh1.wolai-block, h2.wolai-block, h3.wolai-block, h4.wolai-block, h5.wolai-block {\n  font-weight: bold;\n}\nh1.wolai-block>.wolai-block,\nh2.wolai-block>.wolai-block,\nh3.wolai-block>.wolai-block,\nh4.wolai-block>.wolai-block,\nh5.wolai-block>.wolai-block{\n  margin-left: 20px;\n}\np { margin: 0; }\ndiv.wolai-text {\n}\ndiv.wolai-text {\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font div.wolai-text {\n  font-size: 14px;\n  line-height: 20px;\n  min-height: 20px;\n}\ndiv.wolai-text{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead div.wolai-text{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead div.wolai-text{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\ndiv.wolai-text { padding: 3px 2px; }\nfigure { margin: 0; }\n.wolai-center { display: flex;\njustify-content: center;\n}\n.wolai-left { display: flex;\njustify-content: flex-start;\n}\n.wolai-right { display: flex;\njustify-content: flex-end;\n}\nfigure{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead figure{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead figure{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\nfigure>img { display: block; max-width: 100%;\n  border-radius: 5px;\n}\nfigure>figcaption{\n  padding: 10px 5px;\n  text-align: inherit;\n  color: var(--wolai-caption-color);\n}\nfigure>figcaption{\n  font-size: 14px;\n  line-height: 26px;\n}\nbody.small-font figure>figcaption{\n  font-size: 12px;\n  line-height: 22px;\n}\nbody.less-lead figure>figcaption{\n  line-height: 24px;\n}\nbody.small-font.less-lead figure>figcaption{\n  line-height: 20px;\n}\nbody.more-lead figure>figcaption{\n  line-height: 29px;\n}\nbody.small-font.more-lead figure>figcaption{\n  line-height: 25px;\n}\ntable>caption{\n  padding: 10px 5px;\n  text-align: inherit;\n  color: var(--wolai-caption-color);\n}\ntable>caption{\n  font-size: 14px;\n  line-height: 26px;\n}\nbody.small-font table>caption{\n  font-size: 12px;\n  line-height: 22px;\n}\nbody.less-lead table>caption{\n  line-height: 24px;\n}\nbody.small-font.less-lead table>caption{\n  line-height: 20px;\n}\nbody.more-lead table>caption{\n  line-height: 29px;\n}\nbody.small-font.more-lead table>caption{\n  line-height: 25px;\n}\ncode-block>figcaption{\n  padding: 10px 5px;\n  text-align: inherit;\n  color: var(--wolai-caption-color);\n}\ncode-block>figcaption{\n  font-size: 14px;\n  line-height: 26px;\n}\nbody.small-font code-block>figcaption{\n  font-size: 12px;\n  line-height: 22px;\n}\nbody.less-lead code-block>figcaption{\n  line-height: 24px;\n}\nbody.small-font.less-lead code-block>figcaption{\n  line-height: 20px;\n}\nbody.more-lead code-block>figcaption{\n  line-height: 29px;\n}\nbody.small-font.more-lead code-block>figcaption{\n  line-height: 25px;\n}\nvideo {\n  max-width: 100%;\n  border-radius: 5px;\n}\naudio {\n  width: 100%;\n  border-radius: 5px;\n}\nfigure.stretch {\n  align-self: stretch;\n}\ndiv.wolai-pre {\n  background-color: var(--wolai-code-node-bg);\n  position: relative;\n}\ndiv.wolai-pre{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead div.wolai-pre{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead div.wolai-pre{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\ndiv.wolai-pre>pre {\n  font-family: var(--wolai-mono-font);\n  color: var(--wolai-code-node-color);\n  padding: 20px 10px;\n  overflow-x: auto;\n}\ndiv.wolai-pre>pre{\n  font-size: 14px;\n  line-height: 21px;\n}\nbody.small-font div.wolai-pre>pre{\n  font-size: 12px;\n  line-height: 18px;\n}\nbody.less-lead div.wolai-pre>pre{\n  line-height: 19px;\n}\nbody.small-font.less-lead div.wolai-pre>pre{\n  line-height: 16px;\n}\nbody.more-lead div.wolai-pre>pre{\n  line-height: 23px;\n}\nbody.small-font.more-lead div.wolai-pre>pre{\n  line-height: 20px;\n}\ndiv.wolai-pre>div.marker {\n  position: absolute;\n  right: 25px;\n  bottom: 12px;\n  font-size: 12px;\n  color: var(--wolai-modal-color);\n}\ndiv.wolai-pre>div.marker::before {\n  content: attr(data-lang);\n}\nblockquote {\n  position: relative; margin: 0;\n}\nblockquote {\n  padding: 8px 0 8px 20px;\n}\nblockquote{\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font blockquote{\n  font-size: 14px;\n  line-height: 22px;\n  min-height: 22px;\n}\nbody.less-lead blockquote{\n  line-height: 24px;\n  min-height: 24px;\n}\nbody.small-font.less-lead blockquote{\n  line-height: 20px;\n  min-height: 20px;\n}\nbody.more-lead blockquote{\n  line-height: 29px;\n  min-height: 29px;\n}\nbody.small-font.more-lead blockquote{\n  line-height: 25px;\n  min-height: 25px;\n}\nblockquote{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead blockquote{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead blockquote{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\nblockquote::before {\n  content: '';\n  position: absolute;\n  top: 5px;\n  left: 2px;\n  height: calc(100% - 5px - 5px);\n  width: 4px;\n  background: var(--wolai-quote-border-color);\n  border-radius: 1.5px;\n}\ndiv.wolai-row { display: flex; }\ndiv.wolai-row{\n  padding-top: 6px;\n  padding-bottom: 6px;\n}\nbody.less-lead div.wolai-row{\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\nbody.more-lead div.wolai-row{\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\ndiv.wolai-row>div.wolai-col {\n  margin-left: 40px;\n  flex-grow: 0.5; flex-basis: 0;\n}\ndiv.wolai-row>div.wolai-col:first-child {\n  margin-left: 0;\n}\ndiv.wolai-row>div.wolai-col{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.less-lead div.wolai-row>div.wolai-col{\n  margin-top: 1px;\n  margin-bottom: 1px;\n}\nbody.more-lead div.wolai-row>div.wolai-col{\n  margin-top: 3px;\n  margin-bottom: 3px;\n}\n@media only screen and (max-width: 768px) {\n  div.wolai-row {\n    flex-direction: column;\n  }\n  div.wolai-row>div.wolai-col {\n    margin-left: 0;\n  }\n}\naside {\n  position: relative;\n}\naside {\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font aside {\n  font-size: 14px;\n  line-height: 22px;\n  min-height: 22px;\n}\naside{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead aside{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead aside{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\naside>div.icon::before {\n  content: \"📌\";\n}\naside>div.icon[data-symbol]::before {\n  content: attr(data-symbol);\n}\naside>div.icon.icon-image{\n  border-radius: 3px;\n  background-size: contain;\n}\naside>div.icon.icon-image::before {\n  content: none;\n}\naside {\n  padding-left: 51px;\n  padding-top: 15px;\n  padding-right: 15px;\n  padding-bottom: 15px;\n}\naside>div.icon {\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 24px;\n  width: 26px;\n  height: 26px;\n  top: 15px;\n  left: 15px;\n}\nbody.small-font aside {\n  padding-left: 47px;\n}\nbody.small-font aside>div.icon {\n  font-size: 20px;\n  width: 22px;\n  height: 22px;\n}\nul { padding-left: 0; margin: 0; }\nul>li, ol>li { list-style: none; position: relative; }\nul>li, ol>li { border-radius: 3px; }\ndiv.wolai-block.wolai-task-block>input[type=\"checkbox\"] { display: none; }\ndiv.wolai-block.wolai-task-block>* {\n  margin-left: 0;\n}\ndiv.wolai-block.wolai-task-block{ margin-left: 0; position: relative; }\ndetails>summary::marker { content: ''}\nli{\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font li{\n  font-size: 14px;\n  line-height: 22px;\n  min-height: 22px;\n}\nbody.less-lead li{\n  line-height: 24px;\n  min-height: 24px;\n}\nbody.small-font.less-lead li{\n  line-height: 20px;\n  min-height: 20px;\n}\nbody.more-lead li{\n  line-height: 29px;\n  min-height: 29px;\n}\nbody.small-font.more-lead li{\n  line-height: 25px;\n  min-height: 25px;\n}\ndiv.wolai-block.wolai-task-block{\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font div.wolai-block.wolai-task-block{\n  font-size: 14px;\n  line-height: 22px;\n  min-height: 22px;\n}\nbody.less-lead div.wolai-block.wolai-task-block{\n  line-height: 24px;\n  min-height: 24px;\n}\nbody.small-font.less-lead div.wolai-block.wolai-task-block{\n  line-height: 20px;\n  min-height: 20px;\n}\nbody.more-lead div.wolai-block.wolai-task-block{\n  line-height: 29px;\n  min-height: 29px;\n}\nbody.small-font.more-lead div.wolai-block.wolai-task-block{\n  line-height: 25px;\n  min-height: 25px;\n}\ndetails{\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font details{\n  font-size: 14px;\n  line-height: 22px;\n  min-height: 22px;\n}\nbody.less-lead details{\n  line-height: 24px;\n  min-height: 24px;\n}\nbody.small-font.less-lead details{\n  line-height: 20px;\n  min-height: 20px;\n}\nbody.more-lead details{\n  line-height: 29px;\n  min-height: 29px;\n}\nbody.small-font.more-lead details{\n  line-height: 25px;\n  min-height: 25px;\n}\nul{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead ul{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead ul{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\nol{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead ol{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead ol{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\nul>li+li{\n  margin-top: 4px;\n}\nbody.less-lead ul>li+li{\n  margin-top: 2px;\n}\nbody.more-lead ul>li+li{\n  margin-top: 6px;\n}\nol>li+li{\n  margin-top: 4px;\n}\nbody.less-lead ol>li+li{\n  margin-top: 2px;\n}\nbody.more-lead ol>li+li{\n  margin-top: 6px;\n}\ndiv.wolai-block.wolai-task-block{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead div.wolai-block.wolai-task-block{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead div.wolai-block.wolai-task-block{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\ndetails{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead details{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead details{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\nol>li>div.marker {\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  text-align: center;\n}\nol { padding-left: 0; counter-reset: arabicCounter; }\nol>li>div.marker::before {\n  counter-increment: arabicCounter;\n  content: counter(arabicCounter) \".\";\n}\nul>li>div.marker,\ndiv.wolai-block.wolai-task-block>div.marker {\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  background-repeat: no-repeat;\n  background-position: center;\n}\ndetails>summary>div.marker {\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n  background-repeat: no-repeat;\n  background-position: center;\n}\nol>li>div.marker{\n  left: 3px;\n  top: 3px;\n}\nbody.small-font ol>li>div.marker{\n  top: 3px;\n}\nbody.less-lead ol>li>div.marker{\n  top: 3px;\n}\nbody.small-font.less-lead ol>li>div.marker{\n  top: 3px;\n}\nbody.more-lead ol>li>div.marker{\n  top: 3px;\n}\nbody.small-font.more-lead ol>li>div.marker{\n  top: 3px;\n}\nul>li>div.marker{\n  left: 3px;\n  top: 4px;\n}\nbody.small-font ul>li>div.marker{\n  top: 2px;\n}\nbody.less-lead ul>li>div.marker{\n  top: 3px;\n}\nbody.small-font.less-lead ul>li>div.marker{\n  top: 1px;\n}\nbody.more-lead ul>li>div.marker{\n  top: 5px;\n}\nbody.small-font.more-lead ul>li>div.marker{\n  top: 3.5px;\n}\ndiv.wolai-block.wolai-task-block>div.marker{\n  left: 3px;\n  top: 4px;\n}\nbody.small-font div.wolai-block.wolai-task-block>div.marker{\n  top: 2px;\n}\nbody.less-lead div.wolai-block.wolai-task-block>div.marker{\n  top: 3px;\n}\nbody.small-font.less-lead div.wolai-block.wolai-task-block>div.marker{\n  top: 1px;\n}\nbody.more-lead div.wolai-block.wolai-task-block>div.marker{\n  top: 5px;\n}\nbody.small-font.more-lead div.wolai-block.wolai-task-block>div.marker{\n  top: 3.5px;\n}\ndetails>summary>div.marker{\n  left: 1px;\n  top: 1px;\n}\nbody.small-font details>summary>div.marker{\n  top: -1px;\n}\nbody.less-lead details>summary>div.marker{\n  top: 0;\n}\nbody.small-font.less-lead details>summary>div.marker{\n  top: -2px;\n}\nbody.more-lead details>summary>div.marker{\n  top: 2px;\n}\nbody.small-font.more-lead details>summary>div.marker{\n  top: 1px;\n}\nul>li, ol>li, div.wolai-block.wolai-task-block {\n  padding: 3px 2px 3px 29px;\n}\ndetails {\n  padding: 3px 2px;\n}\ndetails>.wolai-block {\n  margin-left: 29px !important;\n}\ndetails>summary {\n  padding-left: 27px;\n}\ndetails>summary { position: relative; }\ndiv.wolai-block.wolai-task-block.checked {\n  opacity: 0.5;\n}\ndiv.wolai-block.wolai-task-block.checked>.wrapper {\n  text-decoration: line-through;\n}\ndetails>summary>div.marker {\n    height:100%;\n    align-items: center;\n    justify-content: center;\n  }\ndetails>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(33, 37, 41); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(33, 37, 41); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.def-color>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(33, 37, 41); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.def-color[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(33, 37, 41); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.gray>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(140, 140, 140); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.gray[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(140, 140, 140); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.brown>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(163, 67, 31); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.brown[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(163, 67, 31); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.orange>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(240, 107, 5); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.orange[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(240, 107, 5); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.yellow>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(223, 171, 1); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.yellow[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(223, 171, 1); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.green>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(3, 135, 1); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.green[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(3, 135, 1); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.blue>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(5, 117, 197); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.blue[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(5, 117, 197); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.purple>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(136, 49, 204); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.purple[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(136, 49, 204); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.pink>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(200, 21, 182); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.pink[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(200, 21, 182); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.red>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(233, 30, 44); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.red[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(233, 30, 44); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\n@media (prefers-color-scheme: dark) {\ndetails>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgba(255, 255, 255, 0.8509803921568627); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgba(255, 255, 255, 0.8509803921568627); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.def-color>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgba(255, 255, 255, 0.8509803921568627); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.def-color[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgba(255, 255, 255, 0.8509803921568627); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.gray>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(102, 102, 102); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.gray[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(102, 102, 102); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.brown>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(199, 103, 67); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.brown[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(199, 103, 67); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.orange>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(219, 95, 0); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.orange[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(219, 95, 0); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.yellow>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(200, 148, 44); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.yellow[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(200, 148, 44); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.green>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(27, 167, 132); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.green[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(27, 167, 132); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.blue>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(44, 134, 252); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.blue[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(44, 134, 252); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.purple>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(184, 82, 235); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.purple[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(184, 82, 235); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.pink>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(218, 78, 143); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.pink[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(218, 78, 143); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.red>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(226, 80, 88); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.red[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(226, 80, 88); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\n}\nhr {\n  display: block;\n  border-top-color: transparent;\n  border-left-color: transparent;\n  border-right-color: transparent;\n  border-bottom: 1px solid var(--wolai-border-color) !important;\n}\nhr{\n  margin-top: 10.5px;\n  margin-bottom: 10.5px;\n}\nbody.less-lead hr{\n  margin-top: 8.5px;\n  margin-bottom: 8.5px;\n}\nbody.more-lead hr{\n  margin-top: 12.5px;\n  margin-bottom: 12.5px;\n}\ndiv.wolai-block.wolai-simple-table{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead div.wolai-block.wolai-simple-table{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead div.wolai-block.wolai-simple-table{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\ndiv.wolai-block.wolai-simple-table {\n  display: flex;\n}\ntable {\n  border-collapse: separate;\n  border: 0 solid transparent;\n  border-spacing: 0;\n  padding: 0;\n  margin: 6px;\n  border-radius: 3px;\n  box-shadow: 0 0 0 1px var(--wolai-table-border-color);\n}\ntable>caption {\n  caption-side: bottom;\n}\ntable>thead {\n  background: var(--wolai-table-header-bg);\n  border-radius: 3px;\n}\ntable td, table th {\n  font-weight: inherit;\n  text-align: inherit;\n  padding: 5px 10px;\n  width: 100px;\n}\ntable td {\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font table td {\n  font-size: 14px;\n  line-height: 20px;\n  min-height: 20px;\n}\ntable th {\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font table th {\n  font-size: 14px;\n  line-height: 20px;\n  min-height: 20px;\n}\ntr>td, tr>th {\n  border: 0 solid transparent;\n  border-left: 1px solid var(--wolai-table-border-color);\n  border-top: 1px solid var(--wolai-table-border-color);\n}\ntr>td:first-child,\ntr>th:first-child {\n  border-left: 0 transparent;\n}\ntable tr:first-child>td, table tr:first-child>th {\n  border-top: 0 transparent;\n}\ntable>thead+tbody>tr:first-child>td {\n  border-top: 1px solid var(--wolai-table-border-color);\n}\ntable tr:first-child>td:first-child,\ntable tr:first-child>th:first-child {\n  border-top-left-radius: 3px;\n}\ntable tr:first-child>td:last-child,\ntable tr:first-child>th:last-child {\n  border-top-right-radius: 3px;\n}\ntable>thead+tbody>tr:first-child>td:first-child,\ntable>thead+tbody>tr:first-child>td:last-child {\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n}\ntable tr:last-child>td:first-child,\ntable tr:only-child>th:first-child {\n  border-bottom-left-radius: 3px;\n}\ntable tr:last-child>td:last-child,\ntable tr:only-child>th:last-child {\n  border-bottom-right-radius: 3px;\n}\nprogress {\n  appearance: none; -webkit-appearance: none; width: 100%;\n}\ndiv.wolai-block.wolai-progress>progress {\n  display: none;\n}\ndiv.wolai-block.wolai-progress>div.display {\n  display: flex; align-items: center;\n  height: 34px;\n}\nbody.small-font div.wolai-block.wolai-progress>div.display {\n  height: 30px;\n}\ndiv.wolai-block.wolai-progress>div.display>div.marker {\n  display: flex; justify-content: center; align-items: center;\n  flex-shrink: 0;\n  width: 26px;\n  margin-left: 2px;\n  margin-right: 0;\n  padding-left: 0;\n  padding-right: 0;\n}\ndiv.wolai-block.wolai-progress>div.display>.content {\n  overflow: hidden; position: relative; flex: 1;\n  height: 10px;\n  border-radius: 5px;\n}\nbody.small-font div.wolai-block.wolai-progress>div.display>.content {\n  height: 8px;\n  border-radius: 4px;\n}\ndiv.wolai-block.wolai-progress>div.display>.content>.miu {\n  position: absolute; left: 0; top: 0; width: 0; height: 100%;\n  background: var(--wolai-theme-color);\n}\ndiv.wolai-block.wolai-progress>div.display>.content>.er {\n  position: absolute; left: 0; top: 0; width: 100%; height: 100%;\n  background: var(--wolai-theme-color);\n  opacity: 0.15;\n}\ndiv.wolai-block.wolai-progress>div.display>.digit {\n  color: var(--wolai-desc-color);\n  text-align: left;\n  margin-left: 8px;\n  margin-right: 2px;\n  width: 44px;\n  font-variant-numeric: tabular-nums;\n}\nbody.small-font div.wolai-block.wolai-progress>div.display>.digit {\n  font-size: 14px;\n  line-height: 14px;\n}\ndiv.wolai-block.wolai-progress>div.display>.digit[data-value]::before {\n  content: attr(data-value) \"%\";\n}\ndiv.wolai-block.wolai-bookmark {\n  position: relative;\n  border: 1px solid var(--wolai-bookmark-node-border-color);\n  border-radius: 4px;\n  overflow: hidden;\n}\n@media (prefers-color-scheme: dark) {\n  div.wolai-block.wolai-bookmark {\n    background-color: var(--wolai-color-cultured);\n  }\n}\ndiv.wolai-block.wolai-bookmark{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead div.wolai-block.wolai-bookmark{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead div.wolai-block.wolai-bookmark{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\ndiv.wolai-block.wolai-bookmark>a {\n  position: absolute;\n  width: 100%; height: 100%;\n  color: transparent;\n  user-select: none;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box {\n  display: flex;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane {\n  padding: 16px;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane {\n  flex: 0.7;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane div[data-title] {\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 19px;\n  max-height: 19px;\n  margin-bottom: 3px;\n  color: var(--wolai-bookmark-title-color);\n  overflow: hidden;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane div[data-title]::before {\n  content: attr(data-title);\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane div[data-desc] {\n  font-size: 12px;\n  line-height: 19px;\n  max-height: 38px;\n  color: var(--wolai-bookmark-description-color);\n  overflow: hidden;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane div[data-desc]::before {\n  content: attr(data-desc);\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane>div.icon-host {\n  display: flex;\n  align-items: center;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane>div.icon-host>div.icon {\n  width: 14px;\n  height: 14px;\n  margin-right: 8px;\n  background-size: cover;\n  background-position: 50% 50%;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane>div.icon-host div[data-hostname] {\n  font-size: 12px;\n  line-height: 16px;\n  max-height: 16px;\n  color: var(--wolai-bookmark-title-color);\n  overflow: hidden;\n  flex-grow: 1;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane>div.icon-host div[data-hostname]::before {\n  content: attr(data-hostname);\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.preview-pane {\n  flex: 0.3;\n  background-size: cover;\n  background-position: 50% 50%;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.preview-pane[data-image] {\n  background-image: attr(data-image)\n}\ndiv.wolai-file-block.wolai-block,\ndiv.wolai-sub-page.wolai-block {\n  position: relative;\n}\ndiv.wolai-file-block.wolai-block {\n  padding: 3px 2px 3px 30px;\n}\ndiv.wolai-sub-page.wolai-block {\n  padding: 3px 2px 3px 30px;\n}\ndiv.wolai-file-block.wolai-block {\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font div.wolai-file-block.wolai-block {\n  font-size: 14px;\n  line-height: 20px;\n  min-height: 20px;\n}\ndiv.wolai-file-block.wolai-block{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead div.wolai-file-block.wolai-block{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead div.wolai-file-block.wolai-block{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\ndiv.wolai-sub-page.wolai-block {\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font div.wolai-sub-page.wolai-block {\n  font-size: 14px;\n  line-height: 20px;\n  min-height: 20px;\n}\ndiv.wolai-sub-page.wolai-block{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead div.wolai-sub-page.wolai-block{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead div.wolai-sub-page.wolai-block{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\ndiv.wolai-file-block.wolai-block:hover,\ndiv.wolai-sub-page.wolai-block:hover {\n  background-color: var(--wolai-hover-bg);\n}\ndiv.wolai-file-block.wolai-block a,\ndiv.wolai-sub-page.wolai-block a {\n  color: var(--wolai-title-color);\n  display: block;\n  text-decoration: none;\n}\ndiv.wolai-sub-page.wolai-block a {\n  font-weight: bold;\n}\ndiv.wolai-sub-page.wolai-block a>span {\n  display: inline-block;\n  line-height: 1.5;\n  border-bottom: 1px solid var(--wolai-border-color);\n}\ndiv.wolai-file-block.wolai-block a>.file-size {\n  font-size: 12px;\n  margin-left: 4px;\n  color: var(--wolai-title-color);\n  opacity: 0.65;\n}\nbody.small-font div.wolai-file-block.wolai-block a>.file-size {\n  font-size: 12px;\n}\ndiv.wolai-file-block.wolai-block a>.file-size::before {\n  content: attr(data-size);\n}\ndiv.wolai-file-block.wolai-block>div.file-icon {\n  position: absolute;\n  left: 3px;\n  top: 4px;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E%3Cpath d='M12.157 2.2a2.8 2.8 0 011.856.703l.148.142 4.843 4.965a2.8 2.8 0 01.789 1.756l.007.199V19a2.8 2.8 0 01-2.63 2.795L17 21.8H7a2.8 2.8 0 01-2.795-2.63L4.2 19V5a2.8 2.8 0 012.63-2.795L7 2.2h5.157zM11.2 3.8H7a1.2 1.2 0 00-1.194 1.077L5.8 5v14a1.2 1.2 0 001.077 1.194L7 20.2h10a1.2 1.2 0 001.194-1.077L18.2 19v-8.2H13a1.8 1.8 0 01-1.794-1.652L11.2 9V3.8zm1.816.362a1.2 1.2 0 00-.215-.175L12.8 9a.2.2 0 00.147.193L13 9.2h4.923l-.064-.073-4.843-4.965z' fill='none' style='fill: rgb(33, 37, 41);' fill-rule='evenodd'%3E%3C/path%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: center;\n}\n@media (prefers-color-scheme: dark) {\n  div.wolai-file-block.wolai-block>div.file-icon {\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E%3Cpath d='M12.157 2.2a2.8 2.8 0 011.856.703l.148.142 4.843 4.965a2.8 2.8 0 01.789 1.756l.007.199V19a2.8 2.8 0 01-2.63 2.795L17 21.8H7a2.8 2.8 0 01-2.795-2.63L4.2 19V5a2.8 2.8 0 012.63-2.795L7 2.2h5.157zM11.2 3.8H7a1.2 1.2 0 00-1.194 1.077L5.8 5v14a1.2 1.2 0 001.077 1.194L7 20.2h10a1.2 1.2 0 001.194-1.077L18.2 19v-8.2H13a1.8 1.8 0 01-1.794-1.652L11.2 9V3.8zm1.816.362a1.2 1.2 0 00-.215-.175L12.8 9a.2.2 0 00.147.193L13 9.2h4.923l-.064-.073-4.843-4.965z' fill='none' style='fill: rgba(255, 255, 255, 0.7);' fill-rule='evenodd'%3E%3C/path%3E%3C/svg%3E\");\n  }\n}\ndiv.wolai-sub-page.wolai-block>div.page-icon {\n  position: absolute;\n  left: 5px;\n  top: 7px;\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 20 20'%3E%3Cpath d='M14.202 18c1.32 0 1.8-.138 2.282-.396a2.692 2.692 0 001.12-1.12l.046-.088c.229-.456.35-.954.35-2.194V5.798l-.002-.23c-.015-1.148-.151-1.599-.394-2.052a2.692 2.692 0 00-1.12-1.12l-.088-.046c-.456-.229-.954-.35-2.194-.35H5.798l-.23.002c-1.148.015-1.599.151-2.052.394a2.692 2.692 0 00-1.12 1.12l-.046.088c-.221.441-.342.922-.35 2.077v8.52c0 1.321.138 1.8.396 2.283.258.483.637.862 1.12 1.12l.088.046c.441.221.922.342 2.077.35h8.52zm.094-1.778H5.704l-.256-.003c-.655-.012-.873-.064-1.094-.182a.916.916 0 01-.39-.391c-.133-.247-.183-.491-.186-1.35V5.704l.003-.256c.012-.655.064-.873.182-1.094a.916.916 0 01.391-.39c.247-.133.491-.183 1.35-.186h8.498c.935 0 1.188.049 1.444.185a.916.916 0 01.39.391c.133.247.183.491.186 1.35v8.498c0 .935-.049 1.188-.185 1.444a.916.916 0 01-.391.39c-.247.133-.491.183-1.35.186zm-2.413-7.555V6.889H5.556v1.778h6.327zm2.505 4.44v-1.779H5.556v1.778h8.832z' fill='rgb(33, 37, 41)' fill-rule='nonzero'%3E%3C/path%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: contain;\n  border-radius: 3px;\n}\n@media (prefers-color-scheme: dark) {\n  div.wolai-sub-page.wolai-block>div.page-icon {\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 20 20'%3E%3Cpath d='M14.202 18c1.32 0 1.8-.138 2.282-.396a2.692 2.692 0 001.12-1.12l.046-.088c.229-.456.35-.954.35-2.194V5.798l-.002-.23c-.015-1.148-.151-1.599-.394-2.052a2.692 2.692 0 00-1.12-1.12l-.088-.046c-.456-.229-.954-.35-2.194-.35H5.798l-.23.002c-1.148.015-1.599.151-2.052.394a2.692 2.692 0 00-1.12 1.12l-.046.088c-.221.441-.342.922-.35 2.077v8.52c0 1.321.138 1.8.396 2.283.258.483.637.862 1.12 1.12l.088.046c.441.221.922.342 2.077.35h8.52zm.094-1.778H5.704l-.256-.003c-.655-.012-.873-.064-1.094-.182a.916.916 0 01-.39-.391c-.133-.247-.183-.491-.186-1.35V5.704l.003-.256c.012-.655.064-.873.182-1.094a.916.916 0 01.391-.39c.247-.133.491-.183 1.35-.186h8.498c.935 0 1.188.049 1.444.185a.916.916 0 01.39.391c.133.247.183.491.186 1.35v8.498c0 .935-.049 1.188-.185 1.444a.916.916 0 01-.391.39c-.247.133-.491.183-1.35.186zm-2.413-7.555V6.889H5.556v1.778h6.327zm2.505 4.44v-1.779H5.556v1.778h8.832z' fill='rgb(255, 255, 255, 0.7)' fill-rule='nonzero'%3E%3C/path%3E%3C/svg%3E\");\n  }\n}\ndiv.wolai-sub-page.wolai-block>div.page-icon[data-symbol] {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-image: none;\n  font-size: 18px;\n}\ndiv.wolai-sub-page.wolai-block>div.page-icon[data-symbol]::before {\n  content: attr(data-symbol);\n}\n.wolai-block:not(ul, ol, div.wolai-task-block, div.wolai-text)>.block-ref:not(li) {\n  margin-left: 29px;\n}\ndiv.wolai-block.wolai-text>.block-ref {\n  margin-left: 20px;\n}\n.block-ref {\n  position: relative;\n}\n.block-ref>div.decorator {\n  position: absolute;\n  width: 1px;\n  height: 100%;\n  left: -2px;\n  top: 0;\n  border-left: 1px dashed var(--wolai-bi-link-line-color);\n}\nli.block-ref>div.decorator {\n  left: -2px;\n  top: -1px;\n  height: calc(100% + 2px);\n}\na {\n  text-decoration: none;\n  color: var(--wolai-color-default);\n}\n.inline-wrap span, span.inline-wrap {\n  white-space: pre-wrap;\n  word-break: break-word;\n}\nspan>a>span{\n    border-bottom: 1px solid var(--wolai-link-node-line-color);\n}\nspan>a>span:hover {\n  border-bottom-color: var(--wolai-link-node-hover-color);\n}\ncode {\n    padding: 0.2em 0.4em;\n    font-family: var(--wolai-mono-font);\n    font-size: 85%;\n    color: var(--wolai-inline-code-color);\n    background-color: var(--wolai-inline-code-background);\n    border-radius: 4px;\n}\nspan.jill { padding: 0 0.125em }\nspan>a.wolai-bi-link>span {\n  background-color: var(--wolai-bi-link-background);\n  border-radius: 2px 2px 0 0;\n  margin: 0 2px;\n  padding: 0 2px;\n}\nspan>a.wolai-bi-link:hover>span {\n  background-color: var(--wolai-bi-link-hover-color);\n}\nspan>a.wolai-bi-link>span {\n  border-bottom: 1px dashed var(--wolai-bi-link-line-color);\n}\nspan u {\n  text-decoration: none;\n  border-bottom: 1px solid var(--wolai-color-default);\n}\n.def-color u, u.def-color {\n  border-bottom-color: var(--wolai-color-default);\n}\n.gray u, u.gray {\n  border-bottom-color: var(--wolai-color-gray);\n}\n.brown u, u.brown {\n  border-bottom-color: var(--wolai-color-brown);\n}\n.orange u, u.orange {\n  border-bottom-color: var(--wolai-color-orange);\n}\n.yellow u, u.yellow {\n  border-bottom-color: var(--wolai-color-yellow);\n}\n.green u, u.green {\n  border-bottom-color: var(--wolai-color-green);\n}\n.blue u, u.blue {\n  border-bottom-color: var(--wolai-color-blue);\n}\n.purple u, u.purple {\n  border-bottom-color: var(--wolai-color-purple);\n}\n.pink u, u.pink {\n  border-bottom-color: var(--wolai-color-pink);\n}\n.red u, u.red {\n  border-bottom-color: var(--wolai-color-red);\n}\nspan.embed-jiu {\n  width: 18px;\n  height: 20px;\n  margin-right: 1px;\n  display: inline-block;\n  background-repeat: no-repeat;\n  background-size: contain;\n  vertical-align: middle;\n}\nh1 span.embed-jiu {\n  width: 30px;\n  height: 32px;\n}\nh2 span.embed-jiu {\n  width: 24px;\n  height: 26px;\n}\nh3 span.embed-jiu {\n  width: 20px;\n  height: 22px;\n}\nspan.embed-enum {\n  text-align: center;\n  vertical-align: inherit;\n}\nspan.embed-enum::before {\n  content: '1.'\n}\nspan.embed-quote {\n  margin-left: 7px;\n  width: 11px;\n  border-left-width: 4px;\n  border-left-style: solid;\n  border-left-color: var(--wolai-quote-border-color);\n}\nspan.embed-h1 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.787 18.523c.478 0 .8-.322.8-.811v-6.263c0-.558-.343-.907-.918-.907-.333 0-.59.048-.967.306l-1.536 1.063c-.252.177-.35.36-.35.607 0 .344.243.58.57.58a.66.66 0 0 0 .43-.145l1.133-.79h.032v5.549c0 .489.328.811.806.811z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h2 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM16.8 17.91h4.291c.42 0 .672-.263.672-.644 0-.392-.253-.645-.672-.645H18.17v-.032l1.676-1.611c1.268-1.198 1.73-1.789 1.73-2.734 0-1.332-1.107-2.256-2.75-2.256-1.467 0-2.439.8-2.702 1.66-.038.112-.059.225-.059.349 0 .402.258.66.693.66.349 0 .537-.15.72-.472.279-.623.709-.935 1.332-.935.692 0 1.187.457 1.187 1.096 0 .558-.247.934-1.204 1.853l-2.31 2.207c-.327.301-.445.505-.445.811 0 .408.253.693.763.693z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h3 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM18.427 18.582c1.8 0 3.018-.935 3.018-2.342 0-1.069-.746-1.745-1.901-1.853v-.032c.913-.188 1.617-.833 1.617-1.815 0-1.241-1.107-2.052-2.745-2.052-1.37 0-2.25.634-2.594 1.39-.08.184-.118.34-.118.522 0 .392.23.655.682.655.365 0 .553-.134.73-.5.253-.547.65-.821 1.305-.821.785 0 1.204.413 1.204 1.037 0 .633-.527 1.074-1.338 1.074h-.317c-.392 0-.617.236-.617.574 0 .35.225.58.617.58h.339c.94 0 1.493.42 1.487 1.171 0 .645-.547 1.107-1.342 1.107-.806 0-1.225-.322-1.499-.865-.161-.295-.365-.424-.687-.424-.446 0-.715.263-.715.682 0 .161.038.333.124.51.365.763 1.273 1.402 2.75 1.402z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h4 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM20.011 18.523c.446 0 .774-.274.774-.79v-.746h.44c.424 0 .666-.263.666-.645 0-.381-.236-.65-.666-.65h-.44v-3.98c0-.725-.516-1.17-1.338-1.17-.655 0-1.047.268-1.584 1.09-.843 1.251-1.617 2.433-2.149 3.389-.241.424-.338.725-.338 1.058 0 .543.392.908.978.908h2.89v.746c0 .516.321.79.767.79zm-.736-2.788h-2.481v-.043c.628-1.17 1.343-2.26 2.45-3.856h.031v3.9z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h5 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM18.523 18.582c1.768 0 2.998-1.117 2.998-2.771 0-1.478-1.053-2.52-2.536-2.52-.79 0-1.423.312-1.74.812h-.032l.183-2.154h3.061c.408 0 .666-.253.666-.645s-.263-.644-.666-.644h-3.4c-.628 0-.967.263-1.02.918l-.226 2.841c-.005.027-.005.043-.005.065-.022.435.23.806.762.806.36 0 .521-.081.838-.376.274-.264.66-.462 1.123-.462.843 0 1.445.58 1.445 1.396 0 .838-.607 1.445-1.45 1.445-.699 0-1.155-.338-1.435-.897-.182-.29-.386-.403-.709-.403-.419 0-.676.247-.676.66 0 .194.048.36.129.533.386.821 1.46 1.396 2.69 1.396z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h6 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.674 18.582c1.73 0 2.986-1.144 2.986-2.75 0-1.456-1.026-2.524-2.524-2.524-1.048 0-1.81.526-2.111 1.246h-.032v-.08c.01-1.655.574-2.708 1.68-2.708.533 0 .909.199 1.263.645.236.274.43.413.752.413.424 0 .677-.28.677-.639a.954.954 0 0 0-.113-.435c-.365-.725-1.29-1.268-2.573-1.268-2.014 0-3.239 1.547-3.239 4.115 0 .902.162 1.67.457 2.272.57 1.138 1.547 1.713 2.777 1.713zm-.022-1.289a1.404 1.404 0 0 1-1.418-1.423c0-.79.613-1.365 1.434-1.365.817 0 1.413.58 1.413 1.397-.005.779-.634 1.391-1.429 1.391z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h7 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM18.025 18.523c.349 0 .548-.129.725-.473l2.874-5.548c.209-.408.306-.666.306-.956 0-.553-.403-.886-.967-.886H16.95c-.387 0-.672.252-.672.639 0 .392.285.65.672.65h3.34v.032l-2.868 5.371a.988.988 0 0 0-.14.51c0 .376.285.66.742.66z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h8 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.588 18.582c1.848 0 3.142-.924 3.142-2.267 0-1.02-.747-1.772-1.805-1.982v-.032c.908-.23 1.52-.891 1.52-1.724 0-1.214-1.176-2.09-2.857-2.09-1.681 0-2.863.882-2.863 2.085 0 .843.618 1.504 1.53 1.73v.031c-1.057.205-1.81.957-1.81 1.977 0 1.343 1.29 2.272 3.143 2.272zm0-4.77c-.736 0-1.257-.44-1.257-1.074 0-.639.521-1.08 1.257-1.08.73 0 1.257.441 1.257 1.08 0 .634-.527 1.075-1.257 1.075zm0 3.588c-.854 0-1.45-.504-1.45-1.208 0-.698.596-1.198 1.45-1.198s1.445.5 1.445 1.198c0 .704-.591 1.208-1.445 1.208z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h9 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.357 18.582c2.057 0 3.287-1.536 3.287-4.114 0-.908-.161-1.676-.457-2.272-.563-1.139-1.541-1.714-2.776-1.714-1.73 0-2.987 1.144-2.987 2.75 0 1.51 1.139 2.53 2.573 2.53 1.02 0 1.783-.51 2.063-1.257h.032v.086c-.006 1.617-.532 2.707-1.676 2.707-.585 0-.93-.21-1.289-.644-.242-.269-.424-.414-.752-.414-.43 0-.671.274-.671.634 0 .14.032.274.107.424.322.693 1.262 1.284 2.546 1.284zm.059-4.023c-.811 0-1.413-.58-1.413-1.391 0-.784.629-1.391 1.43-1.391.8 0 1.422.618 1.422 1.418 0 .79-.617 1.364-1.439 1.364z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-bullet {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Ccircle fill='%23554C4C' cx='10' cy='10' r='3'%3E%3C/circle%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-toggle {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M11.460903,7.1826499 L15.3597015,11.981171 C15.7908888,12.5118631 15.7102242,13.2916205 15.1795321,13.7228078 C14.9588408,13.9021195 14.6831527,14 14.3987984,14 L6.60120158,14 C5.91742046,14 5.36310634,13.4456859 5.36310634,12.7619048 C5.36310634,12.4775505 5.46098681,12.2018624 5.64029853,11.981171 L9.53909695,7.1826499 C9.97028428,6.65195781 10.7500416,6.57129325 11.2807337,7.00248058 C11.3468265,7.056181 11.4072026,7.11655708 11.460903,7.1826499 Z' fill='%23554C4C' transform='translate(10.500000, 10.000000) rotate(-270.000000) translate(-10.500000, -10.000000) '%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-task {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Crect stroke='%23554C4C' stroke-width='1.5' x='2.75' y='2.75' width='14.5' height='14.5' rx='2'%3E%3C/rect%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-untask {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(5.000000, 5.000000)' fill='%23554C4C' fill-rule='nonzero'%3E%3Cpath d='M3.95468589,10 C3.60453141,10 3.33676622,9.8409332 3.05870237,9.4909862 L0.24716787,5.93849417 C0.09268795,5.747614 0,5.50371156 0,5.27041357 C0,4.7826087 0.38105046,4.40084836 0.83419156,4.40084836 C1.12255407,4.40084836 1.36972194,4.5068929 1.59629248,4.82502651 L3.91349125,7.8791092 L8.3934089,0.48780488 C8.5890834,0.15906681 8.8568486,0 9.1246138,0 C9.5777549,0 10,0.30752916 10,0.80593849 C10,1.03923648 9.8867147,1.28313892 9.7528321,1.495228 L4.79917611,9.4803818 C4.58290422,9.8303287 4.29454171,10 3.95468589,10 Z'%3E%3C/path%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-callout {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M15.7166667,10.720413 C16.3609989,10.720413 16.8833333,11.2427475 16.8833333,11.8870797 L16.8833333,11.8870797 L16.8833333,15.5037464 C16.8833333,16.1480786 16.3609989,16.670413 15.7166667,16.670413 L15.7166667,16.670413 L4.28333333,16.670413 C3.63900111,16.670413 3.11666667,16.1480786 3.11666667,15.5037464 L3.11666667,15.5037464 L3.11666667,11.8870797 C3.11666667,11.2427475 3.63900111,10.720413 4.28333333,10.720413 L4.28333333,10.720413 Z M15.7166667,11.8870797 L4.28333333,11.8870797 L4.28333333,15.5037464 L15.7166667,15.5037464 L15.7166667,11.8870797 Z M16.4166667,6.87041303 C16.7388328,6.87041303 17,7.13158026 17,7.45374636 C17,7.77591246 16.7388328,8.03707969 16.4166667,8.03707969 L3.58333333,8.03707969 C3.26116723,8.03707969 3,7.77591246 3,7.45374636 C3,7.13158026 3.26116723,6.87041303 3.58333333,6.87041303 L16.4166667,6.87041303 Z M16.4166667,3 C16.7388328,3 17,3.26116723 17,3.58333333 C17,3.90549944 16.7388328,4.16666667 16.4166667,4.16666667 L3.58333333,4.16666667 C3.26116723,4.16666667 3,3.90549944 3,3.58333333 C3,3.26116723 3.26116723,3 3.58333333,3 L16.4166667,3 Z' fill='%23554C4C' fill-rule='nonzero'%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-code {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M11.6166822,3.83364946 C11.9377497,3.91967925 12.1282855,4.24969686 12.0422557,4.57076443 L9.11376613,15.5000363 C9.02773634,15.8211038 8.69771872,16.0116396 8.37665116,15.9256098 C8.0555836,15.83958 7.86504784,15.5095624 7.95107764,15.1884948 L10.8795672,4.25922298 C10.965597,3.93815542 11.2956146,3.74761966 11.6166822,3.83364946 Z M6.57038834,5.4184093 C6.80542611,5.65344707 6.80542611,6.03451858 6.57038834,6.26955635 L3.08021403,9.75873548 L6.57038834,13.2489622 C6.80542611,13.4839999 6.80542611,13.8650715 6.57038834,14.1001092 C6.33535057,14.335147 5.95427906,14.335147 5.71924129,14.1001092 L1.80396485,10.1848328 C1.56892708,9.94979502 1.56892708,9.5687235 1.80396485,9.33368573 L5.71924129,5.4184093 C5.95427906,5.18337153 6.33535057,5.18337153 6.57038834,5.4184093 Z M13.422945,5.4184093 C13.6579828,5.18337153 14.0390543,5.18337153 14.274092,5.4184093 L14.274092,5.4184093 L18.1893685,9.33368573 C18.4244062,9.5687235 18.4244062,9.94979502 18.1893685,10.1848328 L18.1893685,10.1848328 L14.274092,14.1001092 C14.0390543,14.335147 13.6579828,14.335147 13.422945,14.1001092 C13.1879072,13.8650715 13.1879072,13.4839999 13.422945,13.2489622 L13.422945,13.2489622 L16.9131193,9.75873548 L13.422945,6.26955635 C13.1879072,6.03451858 13.1879072,5.65344707 13.422945,5.4184093 Z' fill='%23554C4C'%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-simp-table {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M14.7727273,2.5 C16.2789584,2.5 17.5,3.72104159 17.5,5.22727273 L17.5,14.7727273 C17.5,16.2789584 16.2789584,17.5 14.7727273,17.5 L5.22727273,17.5 C3.72104159,17.5 2.5,16.2789584 2.5,14.7727273 L2.5,5.22727273 C2.5,3.72104159 3.72104159,2.5 5.22727273,2.5 L14.7727273,2.5 Z M3.77186238,12.4423287 L3.77272727,14.7727273 C3.77272727,15.5473604 4.37826423,16.1805629 5.14180713,16.2248035 L5.22727273,16.2272727 L7.55767127,16.2281376 C7.53307493,16.1800392 7.51564204,16.1273634 7.50675303,16.0716375 L7.5,15.9859521 L7.499,12.5 L4.01404787,12.5 C3.92645682,12.5 3.84401,12.4792232 3.77186238,12.4423287 Z M11.5,12.5 L8.499,12.5 L8.5,15.9859521 C8.5,16.0735432 8.47922323,16.15599 8.44213461,16.2281376 L11.5576713,16.2281376 C11.5330749,16.1800392 11.515642,16.1273634 11.506753,16.0716375 L11.5,15.9859521 L11.5,12.5 Z M16.2281376,12.4423287 C16.1800392,12.4669251 16.1273634,12.484358 16.0716375,12.493247 L15.9859521,12.5 L12.5,12.5 L12.5,15.9859521 C12.5,16.0735432 12.4792232,16.15599 12.4421346,16.2281376 L14.7727273,16.2272727 C15.5473604,16.2272727 16.1805629,15.6217358 16.2248035,14.8581929 L16.2272727,14.7727273 L16.2281376,12.4423287 Z M7.499,8.248 L3.772,8.249 L3.77272727,8.25 L3.77186238,11.5578654 C3.81996079,11.5331396 3.87263663,11.5156636 3.92836249,11.5067602 L4.01404787,11.5 L7.499,11.5 L7.499,8.248 Z M16.227,8.249 L12.5,8.248 L12.5,11.5 L15.9859521,11.5 C16.0735432,11.5 16.15599,11.5207768 16.2281376,11.5578654 L16.227,8.249 Z M11.5,8.248 L8.499,8.248 L8.499,11.5 L11.5,11.5 L11.5,8.248 Z M14.7727273,3.77272727 L5.22727273,3.77272727 C4.45263957,3.77272727 3.81943715,4.37826423 3.77519646,5.14180713 L3.77272727,5.22727273 L3.772,7 L16.227,7 L16.2272727,5.22727273 C16.2272727,4.45263957 15.6217358,3.81943715 14.8581929,3.77519646 L14.7727273,3.77272727 Z' fill='%23554C4C' fill-rule='nonzero'%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\n@media (prefers-color-scheme: dark) {\nspan.embed-h1 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.787 18.523c.478 0 .8-.322.8-.811v-6.263c0-.558-.343-.907-.918-.907-.333 0-.59.048-.967.306l-1.536 1.063c-.252.177-.35.36-.35.607 0 .344.243.58.57.58a.66.66 0 0 0 .43-.145l1.133-.79h.032v5.549c0 .489.328.811.806.811z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h2 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM16.8 17.91h4.291c.42 0 .672-.263.672-.644 0-.392-.253-.645-.672-.645H18.17v-.032l1.676-1.611c1.268-1.198 1.73-1.789 1.73-2.734 0-1.332-1.107-2.256-2.75-2.256-1.467 0-2.439.8-2.702 1.66-.038.112-.059.225-.059.349 0 .402.258.66.693.66.349 0 .537-.15.72-.472.279-.623.709-.935 1.332-.935.692 0 1.187.457 1.187 1.096 0 .558-.247.934-1.204 1.853l-2.31 2.207c-.327.301-.445.505-.445.811 0 .408.253.693.763.693z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h3 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM18.427 18.582c1.8 0 3.018-.935 3.018-2.342 0-1.069-.746-1.745-1.901-1.853v-.032c.913-.188 1.617-.833 1.617-1.815 0-1.241-1.107-2.052-2.745-2.052-1.37 0-2.25.634-2.594 1.39-.08.184-.118.34-.118.522 0 .392.23.655.682.655.365 0 .553-.134.73-.5.253-.547.65-.821 1.305-.821.785 0 1.204.413 1.204 1.037 0 .633-.527 1.074-1.338 1.074h-.317c-.392 0-.617.236-.617.574 0 .35.225.58.617.58h.339c.94 0 1.493.42 1.487 1.171 0 .645-.547 1.107-1.342 1.107-.806 0-1.225-.322-1.499-.865-.161-.295-.365-.424-.687-.424-.446 0-.715.263-.715.682 0 .161.038.333.124.51.365.763 1.273 1.402 2.75 1.402z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h4 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM20.011 18.523c.446 0 .774-.274.774-.79v-.746h.44c.424 0 .666-.263.666-.645 0-.381-.236-.65-.666-.65h-.44v-3.98c0-.725-.516-1.17-1.338-1.17-.655 0-1.047.268-1.584 1.09-.843 1.251-1.617 2.433-2.149 3.389-.241.424-.338.725-.338 1.058 0 .543.392.908.978.908h2.89v.746c0 .516.321.79.767.79zm-.736-2.788h-2.481v-.043c.628-1.17 1.343-2.26 2.45-3.856h.031v3.9z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h5 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM18.523 18.582c1.768 0 2.998-1.117 2.998-2.771 0-1.478-1.053-2.52-2.536-2.52-.79 0-1.423.312-1.74.812h-.032l.183-2.154h3.061c.408 0 .666-.253.666-.645s-.263-.644-.666-.644h-3.4c-.628 0-.967.263-1.02.918l-.226 2.841c-.005.027-.005.043-.005.065-.022.435.23.806.762.806.36 0 .521-.081.838-.376.274-.264.66-.462 1.123-.462.843 0 1.445.58 1.445 1.396 0 .838-.607 1.445-1.45 1.445-.699 0-1.155-.338-1.435-.897-.182-.29-.386-.403-.709-.403-.419 0-.676.247-.676.66 0 .194.048.36.129.533.386.821 1.46 1.396 2.69 1.396z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h6 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.674 18.582c1.73 0 2.986-1.144 2.986-2.75 0-1.456-1.026-2.524-2.524-2.524-1.048 0-1.81.526-2.111 1.246h-.032v-.08c.01-1.655.574-2.708 1.68-2.708.533 0 .909.199 1.263.645.236.274.43.413.752.413.424 0 .677-.28.677-.639a.954.954 0 0 0-.113-.435c-.365-.725-1.29-1.268-2.573-1.268-2.014 0-3.239 1.547-3.239 4.115 0 .902.162 1.67.457 2.272.57 1.138 1.547 1.713 2.777 1.713zm-.022-1.289a1.404 1.404 0 0 1-1.418-1.423c0-.79.613-1.365 1.434-1.365.817 0 1.413.58 1.413 1.397-.005.779-.634 1.391-1.429 1.391z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h7 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM18.025 18.523c.349 0 .548-.129.725-.473l2.874-5.548c.209-.408.306-.666.306-.956 0-.553-.403-.886-.967-.886H16.95c-.387 0-.672.252-.672.639 0 .392.285.65.672.65h3.34v.032l-2.868 5.371a.988.988 0 0 0-.14.51c0 .376.285.66.742.66z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h8 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.588 18.582c1.848 0 3.142-.924 3.142-2.267 0-1.02-.747-1.772-1.805-1.982v-.032c.908-.23 1.52-.891 1.52-1.724 0-1.214-1.176-2.09-2.857-2.09-1.681 0-2.863.882-2.863 2.085 0 .843.618 1.504 1.53 1.73v.031c-1.057.205-1.81.957-1.81 1.977 0 1.343 1.29 2.272 3.143 2.272zm0-4.77c-.736 0-1.257-.44-1.257-1.074 0-.639.521-1.08 1.257-1.08.73 0 1.257.441 1.257 1.08 0 .634-.527 1.075-1.257 1.075zm0 3.588c-.854 0-1.45-.504-1.45-1.208 0-.698.596-1.198 1.45-1.198s1.445.5 1.445 1.198c0 .704-.591 1.208-1.445 1.208z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h9 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.357 18.582c2.057 0 3.287-1.536 3.287-4.114 0-.908-.161-1.676-.457-2.272-.563-1.139-1.541-1.714-2.776-1.714-1.73 0-2.987 1.144-2.987 2.75 0 1.51 1.139 2.53 2.573 2.53 1.02 0 1.783-.51 2.063-1.257h.032v.086c-.006 1.617-.532 2.707-1.676 2.707-.585 0-.93-.21-1.289-.644-.242-.269-.424-.414-.752-.414-.43 0-.671.274-.671.634 0 .14.032.274.107.424.322.693 1.262 1.284 2.546 1.284zm.059-4.023c-.811 0-1.413-.58-1.413-1.391 0-.784.629-1.391 1.43-1.391.8 0 1.422.618 1.422 1.418 0 .79-.617 1.364-1.439 1.364z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-bullet {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Ccircle fill='%23828282' cx='10' cy='10' r='3'%3E%3C/circle%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-toggle {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M11.460903,7.1826499 L15.3597015,11.981171 C15.7908888,12.5118631 15.7102242,13.2916205 15.1795321,13.7228078 C14.9588408,13.9021195 14.6831527,14 14.3987984,14 L6.60120158,14 C5.91742046,14 5.36310634,13.4456859 5.36310634,12.7619048 C5.36310634,12.4775505 5.46098681,12.2018624 5.64029853,11.981171 L9.53909695,7.1826499 C9.97028428,6.65195781 10.7500416,6.57129325 11.2807337,7.00248058 C11.3468265,7.056181 11.4072026,7.11655708 11.460903,7.1826499 Z' fill='%23828282' transform='translate(10.500000, 10.000000) rotate(-270.000000) translate(-10.500000, -10.000000) '%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-task {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Crect stroke='%23828282' stroke-width='1.5' x='2.75' y='2.75' width='14.5' height='14.5' rx='2'%3E%3C/rect%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-untask {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(5.000000, 5.000000)' fill='%23828282' fill-rule='nonzero'%3E%3Cpath d='M3.95468589,10 C3.60453141,10 3.33676622,9.8409332 3.05870237,9.4909862 L0.24716787,5.93849417 C0.09268795,5.747614 0,5.50371156 0,5.27041357 C0,4.7826087 0.38105046,4.40084836 0.83419156,4.40084836 C1.12255407,4.40084836 1.36972194,4.5068929 1.59629248,4.82502651 L3.91349125,7.8791092 L8.3934089,0.48780488 C8.5890834,0.15906681 8.8568486,0 9.1246138,0 C9.5777549,0 10,0.30752916 10,0.80593849 C10,1.03923648 9.8867147,1.28313892 9.7528321,1.495228 L4.79917611,9.4803818 C4.58290422,9.8303287 4.29454171,10 3.95468589,10 Z'%3E%3C/path%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-callout {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M15.7166667,10.720413 C16.3609989,10.720413 16.8833333,11.2427475 16.8833333,11.8870797 L16.8833333,11.8870797 L16.8833333,15.5037464 C16.8833333,16.1480786 16.3609989,16.670413 15.7166667,16.670413 L15.7166667,16.670413 L4.28333333,16.670413 C3.63900111,16.670413 3.11666667,16.1480786 3.11666667,15.5037464 L3.11666667,15.5037464 L3.11666667,11.8870797 C3.11666667,11.2427475 3.63900111,10.720413 4.28333333,10.720413 L4.28333333,10.720413 Z M15.7166667,11.8870797 L4.28333333,11.8870797 L4.28333333,15.5037464 L15.7166667,15.5037464 L15.7166667,11.8870797 Z M16.4166667,6.87041303 C16.7388328,6.87041303 17,7.13158026 17,7.45374636 C17,7.77591246 16.7388328,8.03707969 16.4166667,8.03707969 L3.58333333,8.03707969 C3.26116723,8.03707969 3,7.77591246 3,7.45374636 C3,7.13158026 3.26116723,6.87041303 3.58333333,6.87041303 L16.4166667,6.87041303 Z M16.4166667,3 C16.7388328,3 17,3.26116723 17,3.58333333 C17,3.90549944 16.7388328,4.16666667 16.4166667,4.16666667 L3.58333333,4.16666667 C3.26116723,4.16666667 3,3.90549944 3,3.58333333 C3,3.26116723 3.26116723,3 3.58333333,3 L16.4166667,3 Z' fill='%23828282' fill-rule='nonzero'%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-code {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M11.6166822,3.83364946 C11.9377497,3.91967925 12.1282855,4.24969686 12.0422557,4.57076443 L9.11376613,15.5000363 C9.02773634,15.8211038 8.69771872,16.0116396 8.37665116,15.9256098 C8.0555836,15.83958 7.86504784,15.5095624 7.95107764,15.1884948 L10.8795672,4.25922298 C10.965597,3.93815542 11.2956146,3.74761966 11.6166822,3.83364946 Z M6.57038834,5.4184093 C6.80542611,5.65344707 6.80542611,6.03451858 6.57038834,6.26955635 L3.08021403,9.75873548 L6.57038834,13.2489622 C6.80542611,13.4839999 6.80542611,13.8650715 6.57038834,14.1001092 C6.33535057,14.335147 5.95427906,14.335147 5.71924129,14.1001092 L1.80396485,10.1848328 C1.56892708,9.94979502 1.56892708,9.5687235 1.80396485,9.33368573 L5.71924129,5.4184093 C5.95427906,5.18337153 6.33535057,5.18337153 6.57038834,5.4184093 Z M13.422945,5.4184093 C13.6579828,5.18337153 14.0390543,5.18337153 14.274092,5.4184093 L14.274092,5.4184093 L18.1893685,9.33368573 C18.4244062,9.5687235 18.4244062,9.94979502 18.1893685,10.1848328 L18.1893685,10.1848328 L14.274092,14.1001092 C14.0390543,14.335147 13.6579828,14.335147 13.422945,14.1001092 C13.1879072,13.8650715 13.1879072,13.4839999 13.422945,13.2489622 L13.422945,13.2489622 L16.9131193,9.75873548 L13.422945,6.26955635 C13.1879072,6.03451858 13.1879072,5.65344707 13.422945,5.4184093 Z' fill='%23828282'%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-simp-table {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M14.7727273,2.5 C16.2789584,2.5 17.5,3.72104159 17.5,5.22727273 L17.5,14.7727273 C17.5,16.2789584 16.2789584,17.5 14.7727273,17.5 L5.22727273,17.5 C3.72104159,17.5 2.5,16.2789584 2.5,14.7727273 L2.5,5.22727273 C2.5,3.72104159 3.72104159,2.5 5.22727273,2.5 L14.7727273,2.5 Z M3.77186238,12.4423287 L3.77272727,14.7727273 C3.77272727,15.5473604 4.37826423,16.1805629 5.14180713,16.2248035 L5.22727273,16.2272727 L7.55767127,16.2281376 C7.53307493,16.1800392 7.51564204,16.1273634 7.50675303,16.0716375 L7.5,15.9859521 L7.499,12.5 L4.01404787,12.5 C3.92645682,12.5 3.84401,12.4792232 3.77186238,12.4423287 Z M11.5,12.5 L8.499,12.5 L8.5,15.9859521 C8.5,16.0735432 8.47922323,16.15599 8.44213461,16.2281376 L11.5576713,16.2281376 C11.5330749,16.1800392 11.515642,16.1273634 11.506753,16.0716375 L11.5,15.9859521 L11.5,12.5 Z M16.2281376,12.4423287 C16.1800392,12.4669251 16.1273634,12.484358 16.0716375,12.493247 L15.9859521,12.5 L12.5,12.5 L12.5,15.9859521 C12.5,16.0735432 12.4792232,16.15599 12.4421346,16.2281376 L14.7727273,16.2272727 C15.5473604,16.2272727 16.1805629,15.6217358 16.2248035,14.8581929 L16.2272727,14.7727273 L16.2281376,12.4423287 Z M7.499,8.248 L3.772,8.249 L3.77272727,8.25 L3.77186238,11.5578654 C3.81996079,11.5331396 3.87263663,11.5156636 3.92836249,11.5067602 L4.01404787,11.5 L7.499,11.5 L7.499,8.248 Z M16.227,8.249 L12.5,8.248 L12.5,11.5 L15.9859521,11.5 C16.0735432,11.5 16.15599,11.5207768 16.2281376,11.5578654 L16.227,8.249 Z M11.5,8.248 L8.499,8.248 L8.499,11.5 L11.5,11.5 L11.5,8.248 Z M14.7727273,3.77272727 L5.22727273,3.77272727 C4.45263957,3.77272727 3.81943715,4.37826423 3.77519646,5.14180713 L3.77272727,5.22727273 L3.772,7 L16.227,7 L16.2272727,5.22727273 C16.2272727,4.45263957 15.6217358,3.81943715 14.8581929,3.77519646 L14.7727273,3.77272727 Z' fill='%23828282' fill-rule='nonzero'%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\n}\nspan>a.wolai-bi-link>span.embed-page {\n  color: var(--wolai-bi-link-text-color);\n  background-color: var(--wolai-bi-link-text-background);\n  margin: 0 2px;\n  padding: 0 2px;\n  border-radius: 3px;\n}\nspan>a.wolai-bi-link>span.embed-page:hover {\n  background-color: var(--wolai-bi-link-text-hover-background);\n}\nspan>a.wolai-bi-link>span.embed-page {\n  border-bottom: none;\n}\nspan>a.wolai-bi-link.embed-progress>span {\n  border-bottom: none;\n  border-radius: 2px;\n  display: inline-block;\n}\nspan>a.wolai-bi-link.embed-progress>span>div {\n  display: flex;\n  align-items: center;\n  margin: 2px;\n}\nspan>a.wolai-bi-link.embed-progress>span .content {\n  overflow: hidden; position: relative;\n  width: 32px;\n  height: 6px;\n  border-radius: 3px;\n}\nbody.small-font span>a.wolai-bi-link.embed-progress>span .content {\n  width: 28px;\n  height: 4px;\n  border-radius: 2px;\n}\nspan>a.wolai-bi-link.embed-progress .miu {\n  position: absolute; left: 0; top: 0; width: 0; height: 100%;\n  background: var(--wolai-theme-color);\n}\nspan>a.wolai-bi-link.embed-progress .er {\n  position: absolute; left: 0; top: 0; width: 100%; height: 100%;\n  background: var(--wolai-theme-color);\n  opacity: 0.15;\n}\nspan>a.wolai-bi-link.embed-progress .digit {\n  color: var(--wolai-desc-color);\n  margin-left: 8px;\n  line-height: 18px;\n  font-variant-numeric: tabular-nums;\n}\nbody.small-font span>a.wolai-bi-link.embed-progress .digit {\n  line-height: 14px;\n}\nspan>a.wolai-bi-link.embed-progress .digit[data-value]::before {\n  content: attr(data-value) \"%\";\n}\nheader, article, footer {\n    color: var(--wolai-color-default);\n}\narticle .def-color { color: inherit; }\narticle .gray { color: var(--wolai-color-gray); }\narticle .brown { color: var(--wolai-color-brown); }\narticle .orange { color: var(--wolai-color-orange); }\narticle .yellow { color: var(--wolai-color-yellow); }\narticle .green { color: var(--wolai-color-green); }\narticle .blue { color: var(--wolai-color-blue); }\narticle .purple { color: var(--wolai-color-purple); }\narticle .pink { color: var(--wolai-color-pink); }\narticle .red { color: var(--wolai-color-red); }\narticle .bg-default { background-color: var(--wolai-color-blank-bg);}\narticle .bg-cultured { background-color: var(--wolai-color-cultured); }\narticle .bg-lightgray { background-color: var(--wolai-color-lightgray); }\narticle .bg-apricot { background-color: var(--wolai-color-apricot); }\narticle .bg-vivid_tangerine { background-color: var(--wolai-color-vivid_tangerine); }\narticle .bg-blond { background-color: var(--wolai-color-blond); }\narticle .bg-aero_blue { background-color: var(--wolai-color-aero_blue); }\narticle .bg-uranian_blue { background-color: var(--wolai-color-uranian_blue); }\narticle .bg-lavender_blue { background-color: var(--wolai-color-lavender_blue); }\narticle .bg-pale_purple { background-color: var(--wolai-color-pale_purple); }\narticle .bg-pink_lavender { background-color: var(--wolai-color-pink_lavender); }\narticle .bg-lightpink { background-color: var(--wolai-color-lightpink); }\narticle .bg-fluorescent_yellow { background-color: var(--wolai-color-fluorescent_yellow); }\narticle .bg-fluorescent_green { background-color: var(--wolai-color-fluorescent_green); }\narticle .bg-fluorescent_green2 { background-color: var(--wolai-color-fluorescent_green2); }\narticle .bg-fluorescent_blue { background-color: var(--wolai-color-fluorescent_blue); }\narticle .bg-fluorescent_purple { background-color: var(--wolai-color-fluorescent_purple); }\narticle .bg-fluorescent_purple2 { background-color: var(--wolai-color-fluorescent_purple2); }\n\n\n    @media print {\n      span {\n        page-break-inside: avoid;\n      }\n\n      * {\n        -webkit-print-color-adjust: exact !important;\n      }\n\n      /* 链接不显示修饰线 */\n      a {\n        text-decoration: none !important;\n      }\n\n    }\n    \ndetails > summary::-webkit-details-marker {display: none;}","site":{"data":{}},"length":13093,"excerpt":"","more":":root {\n  --color-basic-50: #FFFFFF;\n  --color-basic-50-a: rgba(255, 255, 255, 0);\n  --color-basic-75: #FAFAFA;\n  --color-basic-100: #F5F5F5;\n  --color-basic-200: #EAEAEA;\n  --color-basic-300: #E1E1E1;\n  --color-basic-400: #CACACA;\n  --color-basic-500: #B3B3B3;\n  --color-basic-600: #8E8E8E;\n  --color-basic-700: #6E6E6E;\n  --color-basic-800: #4B4B4B;\n  --color-basic-900: #2C2C2C;\n  --wolai-border-color: rgba(38, 22, 22, 0.10196078431372549);\n  --wolai-bi-link-background: rgba(208, 207, 207, 0.2);\n  --wolai-bi-link-hover-color: #F1EFEF;\n  --wolai-bi-link-line-color: #BBBBBB;\n  --wolai-bi-link-text-color: rgb(207, 86, 89);\n  --wolai-bi-link-text-background: rgba(204, 112, 112, 0.10196078431372549);\n  --wolai-bi-link-text-hover-background: rgba(204, 112, 112, 0.1803921568627451);\n  --wolai-bookmark-description-color: #878683;\n  --wolai-bookmark-node-border-color: #DDDDDD;\n  --wolai-bookmark-title-color: rgb(55, 53, 47);\n  --wolai-code-node-bg: #F6F5F5;\n  --wolai-code-node-color: #333940;\n  --wolai-desc-color: #BCB3B3;\n  --wolai-caption-color: #8E8E8E;\n  --wolai-hover-bg: #EEECEC;\n  --wolai-inline-code-background: rgba(208, 187, 193, 0.2);\n  --wolai-inline-code-color: rgb(85, 142, 218);\n  --wolai-link-node-color: #544C4C;\n  --wolai-link-node-hover-color: #231E1E;\n  --wolai-link-node-line-color: #E8E6E6;\n  --wolai-modal-color: #554C4C;\n  --wolai-quote-border-color: rgba(187, 187, 187, 0.5019607843137255);\n  --wolai-scrollbar-color: #D2CFCF;\n  --wolai-scrollbar-hover-color: #6C6A6A;\n  --wolai-table-border-color: #DDDDDD;\n  --wolai-table-header-bg: #F5F5F5;\n  --wolai-theme-color: rgb(207, 86, 89);\n  --wolai-title-color: #312727;\n  --wolai-color-default: rgb(33, 37, 41);\n  --wolai-color-gray: rgb(140, 140, 140);\n  --wolai-color-brown: rgb(163, 67, 31);\n  --wolai-color-orange: rgb(240, 107, 5);\n  --wolai-color-yellow: rgb(223, 171, 1);\n  --wolai-color-green: rgb(3, 135, 1);\n  --wolai-color-blue: rgb(5, 117, 197);\n  --wolai-color-purple: rgb(136, 49, 204);\n  --wolai-color-pink: rgb(200, 21, 182);\n  --wolai-color-red: rgb(233, 30, 44);\n  --wolai-color-blank-bg: #FFFFFF;\n  --wolai-color-cultured: rgba(140, 140, 140, 0.12156862745098039);\n  --wolai-color-lightgray: rgba(92, 92, 92, 0.2);\n  --wolai-color-apricot: rgba(163, 67, 31, 0.2);\n  --wolai-color-vivid_tangerine: rgba(240, 107, 5, 0.2);\n  --wolai-color-blond: rgba(240, 200, 0, 0.2);\n  --wolai-color-aero_blue: rgba(3, 135, 102, 0.2);\n  --wolai-color-uranian_blue: rgba(5, 117, 197, 0.2);\n  --wolai-color-lavender_blue: rgba(74, 82, 199, 0.2);\n  --wolai-color-pale_purple: rgba(136, 49, 204, 0.2);\n  --wolai-color-pink_lavender: rgba(200, 21, 182, 0.2);\n  --wolai-color-lightpink: rgba(233, 30, 44, 0.2);\n  --wolai-color-fluorescent_yellow: #FFF88F;\n  --wolai-color-fluorescent_green: #D3F8B6;\n  --wolai-color-fluorescent_green2: #AFFAD1;\n  --wolai-color-fluorescent_blue: #B1FFFF;\n  --wolai-color-fluorescent_purple: #FDBFFF;\n  --wolai-color-fluorescent_purple2: #D2CBFF;\n}\n@media (prefers-color-scheme: dark) {\n  :root {\n    --color-basic-50: #252525;\n    --color-basic-50-a: rgba(37, 37, 37, 0);\n    --color-basic-75: #2F2F2F;\n    --color-basic-100: #323232;\n    --color-basic-200: #3E3E3E;\n    --color-basic-300: #4A4A4A;\n    --color-basic-400: #5A5A5A;\n    --color-basic-500: #6E6E6E;\n    --color-basic-600: #909090;\n    --color-basic-700: #B9B9B9;\n    --color-basic-800: #BDBDBD;\n    --color-basic-900: #C2C2C2;\n    --wolai-border-color: #444444;\n    --wolai-bi-link-background: rgba(208, 207, 207, 0.2);\n    --wolai-bi-link-hover-color: #686868;\n    --wolai-bi-link-line-color: #888888;\n    --wolai-bi-link-text-color: rgb(245, 132, 132);\n    --wolai-bi-link-text-background: rgba(154, 101, 101, 0.3803921568627451);\n    --wolai-bi-link-text-hover-background: rgba(154, 101, 101, 0.5019607843137255);\n    --wolai-bookmark-description-color: #7F7F81;\n    --wolai-bookmark-node-border-color: #555555;\n    --wolai-bookmark-title-color: rgb(190, 190, 191);\n    --wolai-code-node-bg: #282A36;\n    --wolai-code-node-color: #F8F8F2;\n    --wolai-desc-color: #8F8F8F;\n    --wolai-caption-color: #909090;\n    --wolai-hover-bg: #2C2C2F;\n    --wolai-inline-code-background: rgba(208, 187, 193, 0.2);\n    --wolai-inline-code-color: #84AADC;\n    --wolai-link-node-color: rgba(255, 255, 255, 0.5019607843137255);\n    --wolai-link-node-hover-color: rgba(255, 255, 255, 0.7019607843137254);\n    --wolai-link-node-line-color: rgba(255, 255, 255, 0.2);\n    --wolai-modal-color: rgba(255, 255, 255, 0.7019607843137254);\n    --wolai-quote-border-color: #404040;\n    --wolai-scrollbar-color: #545454;\n    --wolai-scrollbar-hover-color: #C0BCBC;\n    --wolai-table-border-color: #555555;\n    --wolai-table-header-bg: #3A3A3A;\n    --wolai-theme-color: rgb(207, 86, 89);\n    --wolai-title-color: rgba(255, 255, 255, 0.7019607843137254);\n    --wolai-color-default: rgba(255, 255, 255, 0.8509803921568627);\n    --wolai-color-gray: rgb(102, 102, 102);\n    --wolai-color-brown: rgb(199, 103, 67);\n    --wolai-color-orange: rgb(219, 95, 0);\n    --wolai-color-yellow: rgb(200, 148, 44);\n    --wolai-color-green: rgb(27, 167, 132);\n    --wolai-color-blue: rgb(44, 134, 252);\n    --wolai-color-purple: rgb(184, 82, 235);\n    --wolai-color-pink: rgb(218, 78, 143);\n    --wolai-color-red: rgb(226, 80, 88);\n    --wolai-color-blank-bg: #252528;\n    --wolai-color-cultured: rgba(102, 102, 102, 0.2);\n    --wolai-color-lightgray: rgba(140, 140, 140, 0.2784313725490196);\n    --wolai-color-apricot: rgba(199, 103, 67, 0.2784313725490196);\n    --wolai-color-vivid_tangerine: rgba(219, 95, 0, 0.2784313725490196);\n    --wolai-color-blond: rgba(200, 148, 44, 0.2784313725490196);\n    --wolai-color-aero_blue: rgba(27, 167, 132, 0.2784313725490196);\n    --wolai-color-uranian_blue: rgba(44, 134, 252, 0.2784313725490196);\n    --wolai-color-lavender_blue: rgba(44, 134, 252, 0.2784313725490196);\n    --wolai-color-pale_purple: rgba(184, 82, 235, 0.2784313725490196);\n    --wolai-color-pink_lavender: rgba(218, 78, 143, 0.2784313725490196);\n    --wolai-color-lightpink: rgba(226, 80, 88, 0.2784313725490196);\n    --wolai-color-fluorescent_yellow: #8D8829;\n    --wolai-color-fluorescent_green: #568B2A;\n    --wolai-color-fluorescent_green2: #34805C;\n    --wolai-color-fluorescent_blue: #329096;\n    --wolai-color-fluorescent_purple: #843473;\n    --wolai-color-fluorescent_purple2: #5B309B;\n  }\n}\n:root {\n  --wolai-normal-font: \"\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\", zh quote\", -apple-system, BlinkMacSystemFont, \"PingFang SC\", \"Noto Sans\", \"Noto Sans CJK SC\", \"Microsoft YaHei\", 微软雅黑, sans-serif, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial;\n  --wolai-mono-font: SFMono-Regular, Consolas, \"Liberation Mono\", Menlo, monospace;\n  --wolai-serif-font: \"zh question mark\", \"Times New Roman\", \"Songti SC\", STSong, NSimSun, SimSun, FangSong, \"Nanum Myeongjo\", NanumMyeongjo, Batang, serif !important;\n  --wolai-kai-font: \"zh question mark\", \"Times New Roman\", \"Kaiti SC\", STKaiti, KaiTi !important;\n}\n.wolai-block {\n  border-radius: 3px;\n  font-weight: normal;\n}\n.block-frame {\n  border-color: var(--wolai-border-color);\n}\n.wolai-block>.wolai-block {\n  margin-left: 29px;\n}\ndiv.wolai-block.wolai-text>.wolai-block {\n  margin-left: 20px;\n}\n.placeholder {\n  opacity: 0.3;\n}\nbody {\n  background-color: var(--wolai-color-blank-bg);\n  font-family: var(--wolai-normal-font);\n}\n\n.font-serif {\n  font-family: var(--wolai-serif-font);\n}\n.font-kai {\n  font-family: var(--wolai-kai-font);\n}\n\nheader>div.image {\n  height: 120px;\n}\n\nheader>div.image.has {\n  height: 30vh;\n  background-size: cover;\n  background-position: 50% 50%;\n}\n\ndiv.title>div.banner {\n  height: 36px;\n  margin-bottom: 52px;\n}\n\ndiv.title>div.banner>div.icon {\n  margin-top: -36px;\n  width: 66px;\n  height: 66px;\n  font-size: 66px;\n  background-size: cover;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: var(--wolai-normal-font);\n}\n\ndiv.title>div.banner>div.icon.icon-image {\n  border-radius: 5px;\n}\n\ndiv.title>div.banner>div.icon[data-symbol]::before {\n  content: attr(data-symbol)\n}\nheader>div.title {\n  box-sizing: content-box;\n  max-width: 100%;\n  /* padding: 0 98px; */\n  margin: 0 auto;\n}\n@media only screen and (max-width: 760px) {\n  header>div.title {\n    max-width: inherit;\n    padding: 0 72px;\n  }\n}\nbody.full-width header>div.title {\n  max-width: 100%;\n}\ndiv.main-title {\n    font-size: 40px;\n    font-weight: 600;\n    line-height: 48px;\n    margin-bottom: 20px;\n}\ndiv.main-title::before {\n    content: attr(data-title);\n}\nbody.small-font div.main-title {\n    font-size: 34px;\n    line-height: 40.8px;\n}\n.wolai-serial-number {\n    color: var(--color-basic-500);\n    padding: 0 2px;\n    marginRight: 3px;\n  }\nfooter {\n  height: 80px;\n  padding: 20px 0 0 60px;\n}\n::-webkit-scrollbar {\n  width: 8px;\n  height: 8px;\n}\n::-webkit-scrollbar-thumb {\n  background-color: var(--wolai-scrollbar-color);\n  border-radius: 4px;\n}\n::-webkit-scrollbar-thumb:hover {\n  background-color: var(--wolai-scrollbar-hover-color);\n}\n::-webkit-scrollbar-track {\n  background-color: transparent;\n}\narticle {\n  box-sizing: content-box;\n  max-width: 100%;\n  /* padding: 0 98px; */\n  margin: 0 auto;\n}\nbody.full-width article {\n  max-width: 100%;\n}\n@media only screen and (max-width: 760px) {\n  article {\n    padding: 0 72px;\n  }\n}\n.wolai-block:first-child {\n  margin-top: 0 !important;\n}\n.wolai-block:last-child {\n  margin-bottom: 0 !important;\n}\nspan.katex-display {\n  font-size: 16px;\n  line-height: 24px;\n}\nbody.small-font span.katex-display {\n  font-size: 14px;\n  line-height: 21px;\n}\nh1 {\n  font-size: 30px;\n  line-height: 39px;\n  min-height: 36px;\n}\nbody.small-font h1 {\n  font-size: 26px;\n  line-height: 34px;\n  min-height: 22px;\n}\nh2 {\n  font-size: 24px;\n  line-height: 31px;\n  min-height: 28.8px;\n}\nbody.small-font h2 {\n  font-size: 22px;\n  line-height: 27px;\n  min-height: 22px;\n}\nh3 {\n  font-size: 20px;\n  line-height: 24px;\n  min-height: 24px;\n}\nbody.small-font h3 {\n  font-size: 18px;\n  line-height: 22px;\n  min-height: 22px;\n}\nh4 {\n  font-size: 18px;\n  line-height: 21.6px;\n  min-height: 21.6px;\n}\nbody.small-font h4 {\n  font-size: 16px;\n  line-height: 22px;\n  min-height: 22px;\n}\nh5 {\n  font-size: 16px;\n  line-height: 21.6px;\n  min-height: 21.6px;\n}\nbody.small-font h5 {\n  font-size: 14px;\n  line-height: 22px;\n  min-height: 22px;\n}\nh1{\n  margin-top: 36px;\n  margin-bottom: 13px;\n}\nbody.less-lead h1{\n  margin-top: 34px;\n  margin-bottom: 11px;\n}\nbody.more-lead h1{\n  margin-top: 38px;\n  margin-bottom: 15px;\n}\nh2{\n  margin-top: 26px;\n  margin-bottom: 9px;\n}\nbody.less-lead h2{\n  margin-top: 24px;\n  margin-bottom: 7px;\n}\nbody.more-lead h2{\n  margin-top: 28px;\n  margin-bottom: 11px;\n}\nh3{\n  margin-top: 16px;\n  margin-bottom: 9px;\n}\nbody.less-lead h3{\n  margin-top: 14px;\n  margin-bottom: 7px;\n}\nbody.more-lead h3{\n  margin-top: 18px;\n  margin-bottom: 11px;\n}\nh4{\n  margin-top: 13px;\n  margin-bottom: 9px;\n}\nbody.less-lead h4{\n  margin-top: 11px;\n  margin-bottom: 7px;\n}\nbody.more-lead h4{\n  margin-top: 15px;\n  margin-bottom: 11px;\n}\nh5{\n  margin-top: 13px;\n  margin-bottom: 9px;\n}\nbody.less-lead h5{\n  margin-top: 11px;\n  margin-bottom: 7px;\n}\nbody.more-lead h5{\n  margin-top: 15px;\n  margin-bottom: 11px;\n}\nh1, h2, h3, h4, h5 {\n  padding: 3px 2px;\n}\nh1.wolai-block, h2.wolai-block, h3.wolai-block, h4.wolai-block, h5.wolai-block {\n  font-weight: bold;\n}\nh1.wolai-block>.wolai-block,\nh2.wolai-block>.wolai-block,\nh3.wolai-block>.wolai-block,\nh4.wolai-block>.wolai-block,\nh5.wolai-block>.wolai-block{\n  margin-left: 20px;\n}\np { margin: 0; }\ndiv.wolai-text {\n}\ndiv.wolai-text {\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font div.wolai-text {\n  font-size: 14px;\n  line-height: 20px;\n  min-height: 20px;\n}\ndiv.wolai-text{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead div.wolai-text{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead div.wolai-text{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\ndiv.wolai-text { padding: 3px 2px; }\nfigure { margin: 0; }\n.wolai-center { display: flex;\njustify-content: center;\n}\n.wolai-left { display: flex;\njustify-content: flex-start;\n}\n.wolai-right { display: flex;\njustify-content: flex-end;\n}\nfigure{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead figure{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead figure{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\nfigure>img { display: block; max-width: 100%;\n  border-radius: 5px;\n}\nfigure>figcaption{\n  padding: 10px 5px;\n  text-align: inherit;\n  color: var(--wolai-caption-color);\n}\nfigure>figcaption{\n  font-size: 14px;\n  line-height: 26px;\n}\nbody.small-font figure>figcaption{\n  font-size: 12px;\n  line-height: 22px;\n}\nbody.less-lead figure>figcaption{\n  line-height: 24px;\n}\nbody.small-font.less-lead figure>figcaption{\n  line-height: 20px;\n}\nbody.more-lead figure>figcaption{\n  line-height: 29px;\n}\nbody.small-font.more-lead figure>figcaption{\n  line-height: 25px;\n}\ntable>caption{\n  padding: 10px 5px;\n  text-align: inherit;\n  color: var(--wolai-caption-color);\n}\ntable>caption{\n  font-size: 14px;\n  line-height: 26px;\n}\nbody.small-font table>caption{\n  font-size: 12px;\n  line-height: 22px;\n}\nbody.less-lead table>caption{\n  line-height: 24px;\n}\nbody.small-font.less-lead table>caption{\n  line-height: 20px;\n}\nbody.more-lead table>caption{\n  line-height: 29px;\n}\nbody.small-font.more-lead table>caption{\n  line-height: 25px;\n}\ncode-block>figcaption{\n  padding: 10px 5px;\n  text-align: inherit;\n  color: var(--wolai-caption-color);\n}\ncode-block>figcaption{\n  font-size: 14px;\n  line-height: 26px;\n}\nbody.small-font code-block>figcaption{\n  font-size: 12px;\n  line-height: 22px;\n}\nbody.less-lead code-block>figcaption{\n  line-height: 24px;\n}\nbody.small-font.less-lead code-block>figcaption{\n  line-height: 20px;\n}\nbody.more-lead code-block>figcaption{\n  line-height: 29px;\n}\nbody.small-font.more-lead code-block>figcaption{\n  line-height: 25px;\n}\nvideo {\n  max-width: 100%;\n  border-radius: 5px;\n}\naudio {\n  width: 100%;\n  border-radius: 5px;\n}\nfigure.stretch {\n  align-self: stretch;\n}\ndiv.wolai-pre {\n  background-color: var(--wolai-code-node-bg);\n  position: relative;\n}\ndiv.wolai-pre{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead div.wolai-pre{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead div.wolai-pre{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\ndiv.wolai-pre>pre {\n  font-family: var(--wolai-mono-font);\n  color: var(--wolai-code-node-color);\n  padding: 20px 10px;\n  overflow-x: auto;\n}\ndiv.wolai-pre>pre{\n  font-size: 14px;\n  line-height: 21px;\n}\nbody.small-font div.wolai-pre>pre{\n  font-size: 12px;\n  line-height: 18px;\n}\nbody.less-lead div.wolai-pre>pre{\n  line-height: 19px;\n}\nbody.small-font.less-lead div.wolai-pre>pre{\n  line-height: 16px;\n}\nbody.more-lead div.wolai-pre>pre{\n  line-height: 23px;\n}\nbody.small-font.more-lead div.wolai-pre>pre{\n  line-height: 20px;\n}\ndiv.wolai-pre>div.marker {\n  position: absolute;\n  right: 25px;\n  bottom: 12px;\n  font-size: 12px;\n  color: var(--wolai-modal-color);\n}\ndiv.wolai-pre>div.marker::before {\n  content: attr(data-lang);\n}\nblockquote {\n  position: relative; margin: 0;\n}\nblockquote {\n  padding: 8px 0 8px 20px;\n}\nblockquote{\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font blockquote{\n  font-size: 14px;\n  line-height: 22px;\n  min-height: 22px;\n}\nbody.less-lead blockquote{\n  line-height: 24px;\n  min-height: 24px;\n}\nbody.small-font.less-lead blockquote{\n  line-height: 20px;\n  min-height: 20px;\n}\nbody.more-lead blockquote{\n  line-height: 29px;\n  min-height: 29px;\n}\nbody.small-font.more-lead blockquote{\n  line-height: 25px;\n  min-height: 25px;\n}\nblockquote{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead blockquote{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead blockquote{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\nblockquote::before {\n  content: '';\n  position: absolute;\n  top: 5px;\n  left: 2px;\n  height: calc(100% - 5px - 5px);\n  width: 4px;\n  background: var(--wolai-quote-border-color);\n  border-radius: 1.5px;\n}\ndiv.wolai-row { display: flex; }\ndiv.wolai-row{\n  padding-top: 6px;\n  padding-bottom: 6px;\n}\nbody.less-lead div.wolai-row{\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\nbody.more-lead div.wolai-row{\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\ndiv.wolai-row>div.wolai-col {\n  margin-left: 40px;\n  flex-grow: 0.5; flex-basis: 0;\n}\ndiv.wolai-row>div.wolai-col:first-child {\n  margin-left: 0;\n}\ndiv.wolai-row>div.wolai-col{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.less-lead div.wolai-row>div.wolai-col{\n  margin-top: 1px;\n  margin-bottom: 1px;\n}\nbody.more-lead div.wolai-row>div.wolai-col{\n  margin-top: 3px;\n  margin-bottom: 3px;\n}\n@media only screen and (max-width: 768px) {\n  div.wolai-row {\n    flex-direction: column;\n  }\n  div.wolai-row>div.wolai-col {\n    margin-left: 0;\n  }\n}\naside {\n  position: relative;\n}\naside {\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font aside {\n  font-size: 14px;\n  line-height: 22px;\n  min-height: 22px;\n}\naside{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead aside{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead aside{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\naside>div.icon::before {\n  content: \"📌\";\n}\naside>div.icon[data-symbol]::before {\n  content: attr(data-symbol);\n}\naside>div.icon.icon-image{\n  border-radius: 3px;\n  background-size: contain;\n}\naside>div.icon.icon-image::before {\n  content: none;\n}\naside {\n  padding-left: 51px;\n  padding-top: 15px;\n  padding-right: 15px;\n  padding-bottom: 15px;\n}\naside>div.icon {\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 24px;\n  width: 26px;\n  height: 26px;\n  top: 15px;\n  left: 15px;\n}\nbody.small-font aside {\n  padding-left: 47px;\n}\nbody.small-font aside>div.icon {\n  font-size: 20px;\n  width: 22px;\n  height: 22px;\n}\nul { padding-left: 0; margin: 0; }\nul>li, ol>li { list-style: none; position: relative; }\nul>li, ol>li { border-radius: 3px; }\ndiv.wolai-block.wolai-task-block>input[type=\"checkbox\"] { display: none; }\ndiv.wolai-block.wolai-task-block>* {\n  margin-left: 0;\n}\ndiv.wolai-block.wolai-task-block{ margin-left: 0; position: relative; }\ndetails>summary::marker { content: ''}\nli{\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font li{\n  font-size: 14px;\n  line-height: 22px;\n  min-height: 22px;\n}\nbody.less-lead li{\n  line-height: 24px;\n  min-height: 24px;\n}\nbody.small-font.less-lead li{\n  line-height: 20px;\n  min-height: 20px;\n}\nbody.more-lead li{\n  line-height: 29px;\n  min-height: 29px;\n}\nbody.small-font.more-lead li{\n  line-height: 25px;\n  min-height: 25px;\n}\ndiv.wolai-block.wolai-task-block{\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font div.wolai-block.wolai-task-block{\n  font-size: 14px;\n  line-height: 22px;\n  min-height: 22px;\n}\nbody.less-lead div.wolai-block.wolai-task-block{\n  line-height: 24px;\n  min-height: 24px;\n}\nbody.small-font.less-lead div.wolai-block.wolai-task-block{\n  line-height: 20px;\n  min-height: 20px;\n}\nbody.more-lead div.wolai-block.wolai-task-block{\n  line-height: 29px;\n  min-height: 29px;\n}\nbody.small-font.more-lead div.wolai-block.wolai-task-block{\n  line-height: 25px;\n  min-height: 25px;\n}\ndetails{\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font details{\n  font-size: 14px;\n  line-height: 22px;\n  min-height: 22px;\n}\nbody.less-lead details{\n  line-height: 24px;\n  min-height: 24px;\n}\nbody.small-font.less-lead details{\n  line-height: 20px;\n  min-height: 20px;\n}\nbody.more-lead details{\n  line-height: 29px;\n  min-height: 29px;\n}\nbody.small-font.more-lead details{\n  line-height: 25px;\n  min-height: 25px;\n}\nul{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead ul{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead ul{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\nol{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead ol{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead ol{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\nul>li+li{\n  margin-top: 4px;\n}\nbody.less-lead ul>li+li{\n  margin-top: 2px;\n}\nbody.more-lead ul>li+li{\n  margin-top: 6px;\n}\nol>li+li{\n  margin-top: 4px;\n}\nbody.less-lead ol>li+li{\n  margin-top: 2px;\n}\nbody.more-lead ol>li+li{\n  margin-top: 6px;\n}\ndiv.wolai-block.wolai-task-block{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead div.wolai-block.wolai-task-block{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead div.wolai-block.wolai-task-block{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\ndetails{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead details{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead details{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\nol>li>div.marker {\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  text-align: center;\n}\nol { padding-left: 0; counter-reset: arabicCounter; }\nol>li>div.marker::before {\n  counter-increment: arabicCounter;\n  content: counter(arabicCounter) \".\";\n}\nul>li>div.marker,\ndiv.wolai-block.wolai-task-block>div.marker {\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  background-repeat: no-repeat;\n  background-position: center;\n}\ndetails>summary>div.marker {\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n  background-repeat: no-repeat;\n  background-position: center;\n}\nol>li>div.marker{\n  left: 3px;\n  top: 3px;\n}\nbody.small-font ol>li>div.marker{\n  top: 3px;\n}\nbody.less-lead ol>li>div.marker{\n  top: 3px;\n}\nbody.small-font.less-lead ol>li>div.marker{\n  top: 3px;\n}\nbody.more-lead ol>li>div.marker{\n  top: 3px;\n}\nbody.small-font.more-lead ol>li>div.marker{\n  top: 3px;\n}\nul>li>div.marker{\n  left: 3px;\n  top: 4px;\n}\nbody.small-font ul>li>div.marker{\n  top: 2px;\n}\nbody.less-lead ul>li>div.marker{\n  top: 3px;\n}\nbody.small-font.less-lead ul>li>div.marker{\n  top: 1px;\n}\nbody.more-lead ul>li>div.marker{\n  top: 5px;\n}\nbody.small-font.more-lead ul>li>div.marker{\n  top: 3.5px;\n}\ndiv.wolai-block.wolai-task-block>div.marker{\n  left: 3px;\n  top: 4px;\n}\nbody.small-font div.wolai-block.wolai-task-block>div.marker{\n  top: 2px;\n}\nbody.less-lead div.wolai-block.wolai-task-block>div.marker{\n  top: 3px;\n}\nbody.small-font.less-lead div.wolai-block.wolai-task-block>div.marker{\n  top: 1px;\n}\nbody.more-lead div.wolai-block.wolai-task-block>div.marker{\n  top: 5px;\n}\nbody.small-font.more-lead div.wolai-block.wolai-task-block>div.marker{\n  top: 3.5px;\n}\ndetails>summary>div.marker{\n  left: 1px;\n  top: 1px;\n}\nbody.small-font details>summary>div.marker{\n  top: -1px;\n}\nbody.less-lead details>summary>div.marker{\n  top: 0;\n}\nbody.small-font.less-lead details>summary>div.marker{\n  top: -2px;\n}\nbody.more-lead details>summary>div.marker{\n  top: 2px;\n}\nbody.small-font.more-lead details>summary>div.marker{\n  top: 1px;\n}\nul>li, ol>li, div.wolai-block.wolai-task-block {\n  padding: 3px 2px 3px 29px;\n}\ndetails {\n  padding: 3px 2px;\n}\ndetails>.wolai-block {\n  margin-left: 29px !important;\n}\ndetails>summary {\n  padding-left: 27px;\n}\ndetails>summary { position: relative; }\ndiv.wolai-block.wolai-task-block.checked {\n  opacity: 0.5;\n}\ndiv.wolai-block.wolai-task-block.checked>.wrapper {\n  text-decoration: line-through;\n}\ndetails>summary>div.marker {\n    height:100%;\n    align-items: center;\n    justify-content: center;\n  }\ndetails>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(33, 37, 41); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(33, 37, 41); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.def-color>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(33, 37, 41); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.def-color[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(33, 37, 41); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.gray>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(140, 140, 140); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.gray[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(140, 140, 140); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.brown>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(163, 67, 31); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.brown[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(163, 67, 31); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.orange>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(240, 107, 5); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.orange[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(240, 107, 5); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.yellow>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(223, 171, 1); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.yellow[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(223, 171, 1); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.green>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(3, 135, 1); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.green[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(3, 135, 1); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.blue>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(5, 117, 197); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.blue[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(5, 117, 197); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.purple>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(136, 49, 204); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.purple[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(136, 49, 204); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.pink>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(200, 21, 182); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.pink[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(200, 21, 182); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.red>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(233, 30, 44); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.red[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(233, 30, 44); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\n@media (prefers-color-scheme: dark) {\ndetails>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgba(255, 255, 255, 0.8509803921568627); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgba(255, 255, 255, 0.8509803921568627); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.def-color>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgba(255, 255, 255, 0.8509803921568627); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.def-color[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgba(255, 255, 255, 0.8509803921568627); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.gray>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(102, 102, 102); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.gray[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(102, 102, 102); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.brown>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(199, 103, 67); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.brown[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(199, 103, 67); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.orange>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(219, 95, 0); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.orange[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(219, 95, 0); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.yellow>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(200, 148, 44); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.yellow[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(200, 148, 44); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.green>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(27, 167, 132); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.green[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(27, 167, 132); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.blue>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(44, 134, 252); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.blue[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(44, 134, 252); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.purple>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(184, 82, 235); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.purple[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(184, 82, 235); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.pink>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(218, 78, 143); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.pink[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(218, 78, 143); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.red>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(226, 80, 88); fill-rule: evenodd; opacity: 1;'%3E%3Cpath d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\ndetails.red[open]>summary>div.marker {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' style='fill: rgb(226, 80, 88); fill-rule: evenodd; opacity: 1;'%3E%3Cpath transform='rotate(90 12 12)' d='M15.388 10.968a1.2 1.2 0 010 2.064l-4.7 2.789a1.2 1.2 0 01-1.813-1.032V9.21a1.2 1.2 0 011.813-1.032l4.7 2.789z'%3E%3C/path%3E%3C/svg%3E\");\n}\n}\nhr {\n  display: block;\n  border-top-color: transparent;\n  border-left-color: transparent;\n  border-right-color: transparent;\n  border-bottom: 1px solid var(--wolai-border-color) !important;\n}\nhr{\n  margin-top: 10.5px;\n  margin-bottom: 10.5px;\n}\nbody.less-lead hr{\n  margin-top: 8.5px;\n  margin-bottom: 8.5px;\n}\nbody.more-lead hr{\n  margin-top: 12.5px;\n  margin-bottom: 12.5px;\n}\ndiv.wolai-block.wolai-simple-table{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead div.wolai-block.wolai-simple-table{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead div.wolai-block.wolai-simple-table{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\ndiv.wolai-block.wolai-simple-table {\n  display: flex;\n}\ntable {\n  border-collapse: separate;\n  border: 0 solid transparent;\n  border-spacing: 0;\n  padding: 0;\n  margin: 6px;\n  border-radius: 3px;\n  box-shadow: 0 0 0 1px var(--wolai-table-border-color);\n}\ntable>caption {\n  caption-side: bottom;\n}\ntable>thead {\n  background: var(--wolai-table-header-bg);\n  border-radius: 3px;\n}\ntable td, table th {\n  font-weight: inherit;\n  text-align: inherit;\n  padding: 5px 10px;\n  width: 100px;\n}\ntable td {\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font table td {\n  font-size: 14px;\n  line-height: 20px;\n  min-height: 20px;\n}\ntable th {\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font table th {\n  font-size: 14px;\n  line-height: 20px;\n  min-height: 20px;\n}\ntr>td, tr>th {\n  border: 0 solid transparent;\n  border-left: 1px solid var(--wolai-table-border-color);\n  border-top: 1px solid var(--wolai-table-border-color);\n}\ntr>td:first-child,\ntr>th:first-child {\n  border-left: 0 transparent;\n}\ntable tr:first-child>td, table tr:first-child>th {\n  border-top: 0 transparent;\n}\ntable>thead+tbody>tr:first-child>td {\n  border-top: 1px solid var(--wolai-table-border-color);\n}\ntable tr:first-child>td:first-child,\ntable tr:first-child>th:first-child {\n  border-top-left-radius: 3px;\n}\ntable tr:first-child>td:last-child,\ntable tr:first-child>th:last-child {\n  border-top-right-radius: 3px;\n}\ntable>thead+tbody>tr:first-child>td:first-child,\ntable>thead+tbody>tr:first-child>td:last-child {\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n}\ntable tr:last-child>td:first-child,\ntable tr:only-child>th:first-child {\n  border-bottom-left-radius: 3px;\n}\ntable tr:last-child>td:last-child,\ntable tr:only-child>th:last-child {\n  border-bottom-right-radius: 3px;\n}\nprogress {\n  appearance: none; -webkit-appearance: none; width: 100%;\n}\ndiv.wolai-block.wolai-progress>progress {\n  display: none;\n}\ndiv.wolai-block.wolai-progress>div.display {\n  display: flex; align-items: center;\n  height: 34px;\n}\nbody.small-font div.wolai-block.wolai-progress>div.display {\n  height: 30px;\n}\ndiv.wolai-block.wolai-progress>div.display>div.marker {\n  display: flex; justify-content: center; align-items: center;\n  flex-shrink: 0;\n  width: 26px;\n  margin-left: 2px;\n  margin-right: 0;\n  padding-left: 0;\n  padding-right: 0;\n}\ndiv.wolai-block.wolai-progress>div.display>.content {\n  overflow: hidden; position: relative; flex: 1;\n  height: 10px;\n  border-radius: 5px;\n}\nbody.small-font div.wolai-block.wolai-progress>div.display>.content {\n  height: 8px;\n  border-radius: 4px;\n}\ndiv.wolai-block.wolai-progress>div.display>.content>.miu {\n  position: absolute; left: 0; top: 0; width: 0; height: 100%;\n  background: var(--wolai-theme-color);\n}\ndiv.wolai-block.wolai-progress>div.display>.content>.er {\n  position: absolute; left: 0; top: 0; width: 100%; height: 100%;\n  background: var(--wolai-theme-color);\n  opacity: 0.15;\n}\ndiv.wolai-block.wolai-progress>div.display>.digit {\n  color: var(--wolai-desc-color);\n  text-align: left;\n  margin-left: 8px;\n  margin-right: 2px;\n  width: 44px;\n  font-variant-numeric: tabular-nums;\n}\nbody.small-font div.wolai-block.wolai-progress>div.display>.digit {\n  font-size: 14px;\n  line-height: 14px;\n}\ndiv.wolai-block.wolai-progress>div.display>.digit[data-value]::before {\n  content: attr(data-value) \"%\";\n}\ndiv.wolai-block.wolai-bookmark {\n  position: relative;\n  border: 1px solid var(--wolai-bookmark-node-border-color);\n  border-radius: 4px;\n  overflow: hidden;\n}\n@media (prefers-color-scheme: dark) {\n  div.wolai-block.wolai-bookmark {\n    background-color: var(--wolai-color-cultured);\n  }\n}\ndiv.wolai-block.wolai-bookmark{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead div.wolai-block.wolai-bookmark{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead div.wolai-block.wolai-bookmark{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\ndiv.wolai-block.wolai-bookmark>a {\n  position: absolute;\n  width: 100%; height: 100%;\n  color: transparent;\n  user-select: none;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box {\n  display: flex;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane {\n  padding: 16px;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane {\n  flex: 0.7;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane div[data-title] {\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 19px;\n  max-height: 19px;\n  margin-bottom: 3px;\n  color: var(--wolai-bookmark-title-color);\n  overflow: hidden;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane div[data-title]::before {\n  content: attr(data-title);\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane div[data-desc] {\n  font-size: 12px;\n  line-height: 19px;\n  max-height: 38px;\n  color: var(--wolai-bookmark-description-color);\n  overflow: hidden;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane div[data-desc]::before {\n  content: attr(data-desc);\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane>div.icon-host {\n  display: flex;\n  align-items: center;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane>div.icon-host>div.icon {\n  width: 14px;\n  height: 14px;\n  margin-right: 8px;\n  background-size: cover;\n  background-position: 50% 50%;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane>div.icon-host div[data-hostname] {\n  font-size: 12px;\n  line-height: 16px;\n  max-height: 16px;\n  color: var(--wolai-bookmark-title-color);\n  overflow: hidden;\n  flex-grow: 1;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.text-pane>div.icon-host div[data-hostname]::before {\n  content: attr(data-hostname);\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.preview-pane {\n  flex: 0.3;\n  background-size: cover;\n  background-position: 50% 50%;\n}\ndiv.wolai-block.wolai-bookmark>div.info-box>div.preview-pane[data-image] {\n  background-image: attr(data-image)\n}\ndiv.wolai-file-block.wolai-block,\ndiv.wolai-sub-page.wolai-block {\n  position: relative;\n}\ndiv.wolai-file-block.wolai-block {\n  padding: 3px 2px 3px 30px;\n}\ndiv.wolai-sub-page.wolai-block {\n  padding: 3px 2px 3px 30px;\n}\ndiv.wolai-file-block.wolai-block {\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font div.wolai-file-block.wolai-block {\n  font-size: 14px;\n  line-height: 20px;\n  min-height: 20px;\n}\ndiv.wolai-file-block.wolai-block{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead div.wolai-file-block.wolai-block{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead div.wolai-file-block.wolai-block{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\ndiv.wolai-sub-page.wolai-block {\n  font-size: 16px;\n  line-height: 26px;\n  min-height: 26px;\n}\nbody.small-font div.wolai-sub-page.wolai-block {\n  font-size: 14px;\n  line-height: 20px;\n  min-height: 20px;\n}\ndiv.wolai-sub-page.wolai-block{\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\nbody.less-lead div.wolai-sub-page.wolai-block{\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\nbody.more-lead div.wolai-sub-page.wolai-block{\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\ndiv.wolai-file-block.wolai-block:hover,\ndiv.wolai-sub-page.wolai-block:hover {\n  background-color: var(--wolai-hover-bg);\n}\ndiv.wolai-file-block.wolai-block a,\ndiv.wolai-sub-page.wolai-block a {\n  color: var(--wolai-title-color);\n  display: block;\n  text-decoration: none;\n}\ndiv.wolai-sub-page.wolai-block a {\n  font-weight: bold;\n}\ndiv.wolai-sub-page.wolai-block a>span {\n  display: inline-block;\n  line-height: 1.5;\n  border-bottom: 1px solid var(--wolai-border-color);\n}\ndiv.wolai-file-block.wolai-block a>.file-size {\n  font-size: 12px;\n  margin-left: 4px;\n  color: var(--wolai-title-color);\n  opacity: 0.65;\n}\nbody.small-font div.wolai-file-block.wolai-block a>.file-size {\n  font-size: 12px;\n}\ndiv.wolai-file-block.wolai-block a>.file-size::before {\n  content: attr(data-size);\n}\ndiv.wolai-file-block.wolai-block>div.file-icon {\n  position: absolute;\n  left: 3px;\n  top: 4px;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E%3Cpath d='M12.157 2.2a2.8 2.8 0 011.856.703l.148.142 4.843 4.965a2.8 2.8 0 01.789 1.756l.007.199V19a2.8 2.8 0 01-2.63 2.795L17 21.8H7a2.8 2.8 0 01-2.795-2.63L4.2 19V5a2.8 2.8 0 012.63-2.795L7 2.2h5.157zM11.2 3.8H7a1.2 1.2 0 00-1.194 1.077L5.8 5v14a1.2 1.2 0 001.077 1.194L7 20.2h10a1.2 1.2 0 001.194-1.077L18.2 19v-8.2H13a1.8 1.8 0 01-1.794-1.652L11.2 9V3.8zm1.816.362a1.2 1.2 0 00-.215-.175L12.8 9a.2.2 0 00.147.193L13 9.2h4.923l-.064-.073-4.843-4.965z' fill='none' style='fill: rgb(33, 37, 41);' fill-rule='evenodd'%3E%3C/path%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: center;\n}\n@media (prefers-color-scheme: dark) {\n  div.wolai-file-block.wolai-block>div.file-icon {\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E%3Cpath d='M12.157 2.2a2.8 2.8 0 011.856.703l.148.142 4.843 4.965a2.8 2.8 0 01.789 1.756l.007.199V19a2.8 2.8 0 01-2.63 2.795L17 21.8H7a2.8 2.8 0 01-2.795-2.63L4.2 19V5a2.8 2.8 0 012.63-2.795L7 2.2h5.157zM11.2 3.8H7a1.2 1.2 0 00-1.194 1.077L5.8 5v14a1.2 1.2 0 001.077 1.194L7 20.2h10a1.2 1.2 0 001.194-1.077L18.2 19v-8.2H13a1.8 1.8 0 01-1.794-1.652L11.2 9V3.8zm1.816.362a1.2 1.2 0 00-.215-.175L12.8 9a.2.2 0 00.147.193L13 9.2h4.923l-.064-.073-4.843-4.965z' fill='none' style='fill: rgba(255, 255, 255, 0.7);' fill-rule='evenodd'%3E%3C/path%3E%3C/svg%3E\");\n  }\n}\ndiv.wolai-sub-page.wolai-block>div.page-icon {\n  position: absolute;\n  left: 5px;\n  top: 7px;\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 20 20'%3E%3Cpath d='M14.202 18c1.32 0 1.8-.138 2.282-.396a2.692 2.692 0 001.12-1.12l.046-.088c.229-.456.35-.954.35-2.194V5.798l-.002-.23c-.015-1.148-.151-1.599-.394-2.052a2.692 2.692 0 00-1.12-1.12l-.088-.046c-.456-.229-.954-.35-2.194-.35H5.798l-.23.002c-1.148.015-1.599.151-2.052.394a2.692 2.692 0 00-1.12 1.12l-.046.088c-.221.441-.342.922-.35 2.077v8.52c0 1.321.138 1.8.396 2.283.258.483.637.862 1.12 1.12l.088.046c.441.221.922.342 2.077.35h8.52zm.094-1.778H5.704l-.256-.003c-.655-.012-.873-.064-1.094-.182a.916.916 0 01-.39-.391c-.133-.247-.183-.491-.186-1.35V5.704l.003-.256c.012-.655.064-.873.182-1.094a.916.916 0 01.391-.39c.247-.133.491-.183 1.35-.186h8.498c.935 0 1.188.049 1.444.185a.916.916 0 01.39.391c.133.247.183.491.186 1.35v8.498c0 .935-.049 1.188-.185 1.444a.916.916 0 01-.391.39c-.247.133-.491.183-1.35.186zm-2.413-7.555V6.889H5.556v1.778h6.327zm2.505 4.44v-1.779H5.556v1.778h8.832z' fill='rgb(33, 37, 41)' fill-rule='nonzero'%3E%3C/path%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: contain;\n  border-radius: 3px;\n}\n@media (prefers-color-scheme: dark) {\n  div.wolai-sub-page.wolai-block>div.page-icon {\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 20 20'%3E%3Cpath d='M14.202 18c1.32 0 1.8-.138 2.282-.396a2.692 2.692 0 001.12-1.12l.046-.088c.229-.456.35-.954.35-2.194V5.798l-.002-.23c-.015-1.148-.151-1.599-.394-2.052a2.692 2.692 0 00-1.12-1.12l-.088-.046c-.456-.229-.954-.35-2.194-.35H5.798l-.23.002c-1.148.015-1.599.151-2.052.394a2.692 2.692 0 00-1.12 1.12l-.046.088c-.221.441-.342.922-.35 2.077v8.52c0 1.321.138 1.8.396 2.283.258.483.637.862 1.12 1.12l.088.046c.441.221.922.342 2.077.35h8.52zm.094-1.778H5.704l-.256-.003c-.655-.012-.873-.064-1.094-.182a.916.916 0 01-.39-.391c-.133-.247-.183-.491-.186-1.35V5.704l.003-.256c.012-.655.064-.873.182-1.094a.916.916 0 01.391-.39c.247-.133.491-.183 1.35-.186h8.498c.935 0 1.188.049 1.444.185a.916.916 0 01.39.391c.133.247.183.491.186 1.35v8.498c0 .935-.049 1.188-.185 1.444a.916.916 0 01-.391.39c-.247.133-.491.183-1.35.186zm-2.413-7.555V6.889H5.556v1.778h6.327zm2.505 4.44v-1.779H5.556v1.778h8.832z' fill='rgb(255, 255, 255, 0.7)' fill-rule='nonzero'%3E%3C/path%3E%3C/svg%3E\");\n  }\n}\ndiv.wolai-sub-page.wolai-block>div.page-icon[data-symbol] {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-image: none;\n  font-size: 18px;\n}\ndiv.wolai-sub-page.wolai-block>div.page-icon[data-symbol]::before {\n  content: attr(data-symbol);\n}\n.wolai-block:not(ul, ol, div.wolai-task-block, div.wolai-text)>.block-ref:not(li) {\n  margin-left: 29px;\n}\ndiv.wolai-block.wolai-text>.block-ref {\n  margin-left: 20px;\n}\n.block-ref {\n  position: relative;\n}\n.block-ref>div.decorator {\n  position: absolute;\n  width: 1px;\n  height: 100%;\n  left: -2px;\n  top: 0;\n  border-left: 1px dashed var(--wolai-bi-link-line-color);\n}\nli.block-ref>div.decorator {\n  left: -2px;\n  top: -1px;\n  height: calc(100% + 2px);\n}\na {\n  text-decoration: none;\n  color: var(--wolai-color-default);\n}\n.inline-wrap span, span.inline-wrap {\n  white-space: pre-wrap;\n  word-break: break-word;\n}\nspan>a>span{\n    border-bottom: 1px solid var(--wolai-link-node-line-color);\n}\nspan>a>span:hover {\n  border-bottom-color: var(--wolai-link-node-hover-color);\n}\ncode {\n    padding: 0.2em 0.4em;\n    font-family: var(--wolai-mono-font);\n    font-size: 85%;\n    color: var(--wolai-inline-code-color);\n    background-color: var(--wolai-inline-code-background);\n    border-radius: 4px;\n}\nspan.jill { padding: 0 0.125em }\nspan>a.wolai-bi-link>span {\n  background-color: var(--wolai-bi-link-background);\n  border-radius: 2px 2px 0 0;\n  margin: 0 2px;\n  padding: 0 2px;\n}\nspan>a.wolai-bi-link:hover>span {\n  background-color: var(--wolai-bi-link-hover-color);\n}\nspan>a.wolai-bi-link>span {\n  border-bottom: 1px dashed var(--wolai-bi-link-line-color);\n}\nspan u {\n  text-decoration: none;\n  border-bottom: 1px solid var(--wolai-color-default);\n}\n.def-color u, u.def-color {\n  border-bottom-color: var(--wolai-color-default);\n}\n.gray u, u.gray {\n  border-bottom-color: var(--wolai-color-gray);\n}\n.brown u, u.brown {\n  border-bottom-color: var(--wolai-color-brown);\n}\n.orange u, u.orange {\n  border-bottom-color: var(--wolai-color-orange);\n}\n.yellow u, u.yellow {\n  border-bottom-color: var(--wolai-color-yellow);\n}\n.green u, u.green {\n  border-bottom-color: var(--wolai-color-green);\n}\n.blue u, u.blue {\n  border-bottom-color: var(--wolai-color-blue);\n}\n.purple u, u.purple {\n  border-bottom-color: var(--wolai-color-purple);\n}\n.pink u, u.pink {\n  border-bottom-color: var(--wolai-color-pink);\n}\n.red u, u.red {\n  border-bottom-color: var(--wolai-color-red);\n}\nspan.embed-jiu {\n  width: 18px;\n  height: 20px;\n  margin-right: 1px;\n  display: inline-block;\n  background-repeat: no-repeat;\n  background-size: contain;\n  vertical-align: middle;\n}\nh1 span.embed-jiu {\n  width: 30px;\n  height: 32px;\n}\nh2 span.embed-jiu {\n  width: 24px;\n  height: 26px;\n}\nh3 span.embed-jiu {\n  width: 20px;\n  height: 22px;\n}\nspan.embed-enum {\n  text-align: center;\n  vertical-align: inherit;\n}\nspan.embed-enum::before {\n  content: '1.'\n}\nspan.embed-quote {\n  margin-left: 7px;\n  width: 11px;\n  border-left-width: 4px;\n  border-left-style: solid;\n  border-left-color: var(--wolai-quote-border-color);\n}\nspan.embed-h1 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.787 18.523c.478 0 .8-.322.8-.811v-6.263c0-.558-.343-.907-.918-.907-.333 0-.59.048-.967.306l-1.536 1.063c-.252.177-.35.36-.35.607 0 .344.243.58.57.58a.66.66 0 0 0 .43-.145l1.133-.79h.032v5.549c0 .489.328.811.806.811z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h2 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM16.8 17.91h4.291c.42 0 .672-.263.672-.644 0-.392-.253-.645-.672-.645H18.17v-.032l1.676-1.611c1.268-1.198 1.73-1.789 1.73-2.734 0-1.332-1.107-2.256-2.75-2.256-1.467 0-2.439.8-2.702 1.66-.038.112-.059.225-.059.349 0 .402.258.66.693.66.349 0 .537-.15.72-.472.279-.623.709-.935 1.332-.935.692 0 1.187.457 1.187 1.096 0 .558-.247.934-1.204 1.853l-2.31 2.207c-.327.301-.445.505-.445.811 0 .408.253.693.763.693z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h3 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM18.427 18.582c1.8 0 3.018-.935 3.018-2.342 0-1.069-.746-1.745-1.901-1.853v-.032c.913-.188 1.617-.833 1.617-1.815 0-1.241-1.107-2.052-2.745-2.052-1.37 0-2.25.634-2.594 1.39-.08.184-.118.34-.118.522 0 .392.23.655.682.655.365 0 .553-.134.73-.5.253-.547.65-.821 1.305-.821.785 0 1.204.413 1.204 1.037 0 .633-.527 1.074-1.338 1.074h-.317c-.392 0-.617.236-.617.574 0 .35.225.58.617.58h.339c.94 0 1.493.42 1.487 1.171 0 .645-.547 1.107-1.342 1.107-.806 0-1.225-.322-1.499-.865-.161-.295-.365-.424-.687-.424-.446 0-.715.263-.715.682 0 .161.038.333.124.51.365.763 1.273 1.402 2.75 1.402z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h4 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM20.011 18.523c.446 0 .774-.274.774-.79v-.746h.44c.424 0 .666-.263.666-.645 0-.381-.236-.65-.666-.65h-.44v-3.98c0-.725-.516-1.17-1.338-1.17-.655 0-1.047.268-1.584 1.09-.843 1.251-1.617 2.433-2.149 3.389-.241.424-.338.725-.338 1.058 0 .543.392.908.978.908h2.89v.746c0 .516.321.79.767.79zm-.736-2.788h-2.481v-.043c.628-1.17 1.343-2.26 2.45-3.856h.031v3.9z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h5 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM18.523 18.582c1.768 0 2.998-1.117 2.998-2.771 0-1.478-1.053-2.52-2.536-2.52-.79 0-1.423.312-1.74.812h-.032l.183-2.154h3.061c.408 0 .666-.253.666-.645s-.263-.644-.666-.644h-3.4c-.628 0-.967.263-1.02.918l-.226 2.841c-.005.027-.005.043-.005.065-.022.435.23.806.762.806.36 0 .521-.081.838-.376.274-.264.66-.462 1.123-.462.843 0 1.445.58 1.445 1.396 0 .838-.607 1.445-1.45 1.445-.699 0-1.155-.338-1.435-.897-.182-.29-.386-.403-.709-.403-.419 0-.676.247-.676.66 0 .194.048.36.129.533.386.821 1.46 1.396 2.69 1.396z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h6 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.674 18.582c1.73 0 2.986-1.144 2.986-2.75 0-1.456-1.026-2.524-2.524-2.524-1.048 0-1.81.526-2.111 1.246h-.032v-.08c.01-1.655.574-2.708 1.68-2.708.533 0 .909.199 1.263.645.236.274.43.413.752.413.424 0 .677-.28.677-.639a.954.954 0 0 0-.113-.435c-.365-.725-1.29-1.268-2.573-1.268-2.014 0-3.239 1.547-3.239 4.115 0 .902.162 1.67.457 2.272.57 1.138 1.547 1.713 2.777 1.713zm-.022-1.289a1.404 1.404 0 0 1-1.418-1.423c0-.79.613-1.365 1.434-1.365.817 0 1.413.58 1.413 1.397-.005.779-.634 1.391-1.429 1.391z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h7 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM18.025 18.523c.349 0 .548-.129.725-.473l2.874-5.548c.209-.408.306-.666.306-.956 0-.553-.403-.886-.967-.886H16.95c-.387 0-.672.252-.672.639 0 .392.285.65.672.65h3.34v.032l-2.868 5.371a.988.988 0 0 0-.14.51c0 .376.285.66.742.66z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h8 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.588 18.582c1.848 0 3.142-.924 3.142-2.267 0-1.02-.747-1.772-1.805-1.982v-.032c.908-.23 1.52-.891 1.52-1.724 0-1.214-1.176-2.09-2.857-2.09-1.681 0-2.863.882-2.863 2.085 0 .843.618 1.504 1.53 1.73v.031c-1.057.205-1.81.957-1.81 1.977 0 1.343 1.29 2.272 3.143 2.272zm0-4.77c-.736 0-1.257-.44-1.257-1.074 0-.639.521-1.08 1.257-1.08.73 0 1.257.441 1.257 1.08 0 .634-.527 1.075-1.257 1.075zm0 3.588c-.854 0-1.45-.504-1.45-1.208 0-.698.596-1.198 1.45-1.198s1.445.5 1.445 1.198c0 .704-.591 1.208-1.445 1.208z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h9 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.357 18.582c2.057 0 3.287-1.536 3.287-4.114 0-.908-.161-1.676-.457-2.272-.563-1.139-1.541-1.714-2.776-1.714-1.73 0-2.987 1.144-2.987 2.75 0 1.51 1.139 2.53 2.573 2.53 1.02 0 1.783-.51 2.063-1.257h.032v.086c-.006 1.617-.532 2.707-1.676 2.707-.585 0-.93-.21-1.289-.644-.242-.269-.424-.414-.752-.414-.43 0-.671.274-.671.634 0 .14.032.274.107.424.322.693 1.262 1.284 2.546 1.284zm.059-4.023c-.811 0-1.413-.58-1.413-1.391 0-.784.629-1.391 1.43-1.391.8 0 1.422.618 1.422 1.418 0 .79-.617 1.364-1.439 1.364z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-bullet {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Ccircle fill='%23554C4C' cx='10' cy='10' r='3'%3E%3C/circle%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-toggle {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M11.460903,7.1826499 L15.3597015,11.981171 C15.7908888,12.5118631 15.7102242,13.2916205 15.1795321,13.7228078 C14.9588408,13.9021195 14.6831527,14 14.3987984,14 L6.60120158,14 C5.91742046,14 5.36310634,13.4456859 5.36310634,12.7619048 C5.36310634,12.4775505 5.46098681,12.2018624 5.64029853,11.981171 L9.53909695,7.1826499 C9.97028428,6.65195781 10.7500416,6.57129325 11.2807337,7.00248058 C11.3468265,7.056181 11.4072026,7.11655708 11.460903,7.1826499 Z' fill='%23554C4C' transform='translate(10.500000, 10.000000) rotate(-270.000000) translate(-10.500000, -10.000000) '%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-task {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Crect stroke='%23554C4C' stroke-width='1.5' x='2.75' y='2.75' width='14.5' height='14.5' rx='2'%3E%3C/rect%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-untask {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(5.000000, 5.000000)' fill='%23554C4C' fill-rule='nonzero'%3E%3Cpath d='M3.95468589,10 C3.60453141,10 3.33676622,9.8409332 3.05870237,9.4909862 L0.24716787,5.93849417 C0.09268795,5.747614 0,5.50371156 0,5.27041357 C0,4.7826087 0.38105046,4.40084836 0.83419156,4.40084836 C1.12255407,4.40084836 1.36972194,4.5068929 1.59629248,4.82502651 L3.91349125,7.8791092 L8.3934089,0.48780488 C8.5890834,0.15906681 8.8568486,0 9.1246138,0 C9.5777549,0 10,0.30752916 10,0.80593849 C10,1.03923648 9.8867147,1.28313892 9.7528321,1.495228 L4.79917611,9.4803818 C4.58290422,9.8303287 4.29454171,10 3.95468589,10 Z'%3E%3C/path%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-callout {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M15.7166667,10.720413 C16.3609989,10.720413 16.8833333,11.2427475 16.8833333,11.8870797 L16.8833333,11.8870797 L16.8833333,15.5037464 C16.8833333,16.1480786 16.3609989,16.670413 15.7166667,16.670413 L15.7166667,16.670413 L4.28333333,16.670413 C3.63900111,16.670413 3.11666667,16.1480786 3.11666667,15.5037464 L3.11666667,15.5037464 L3.11666667,11.8870797 C3.11666667,11.2427475 3.63900111,10.720413 4.28333333,10.720413 L4.28333333,10.720413 Z M15.7166667,11.8870797 L4.28333333,11.8870797 L4.28333333,15.5037464 L15.7166667,15.5037464 L15.7166667,11.8870797 Z M16.4166667,6.87041303 C16.7388328,6.87041303 17,7.13158026 17,7.45374636 C17,7.77591246 16.7388328,8.03707969 16.4166667,8.03707969 L3.58333333,8.03707969 C3.26116723,8.03707969 3,7.77591246 3,7.45374636 C3,7.13158026 3.26116723,6.87041303 3.58333333,6.87041303 L16.4166667,6.87041303 Z M16.4166667,3 C16.7388328,3 17,3.26116723 17,3.58333333 C17,3.90549944 16.7388328,4.16666667 16.4166667,4.16666667 L3.58333333,4.16666667 C3.26116723,4.16666667 3,3.90549944 3,3.58333333 C3,3.26116723 3.26116723,3 3.58333333,3 L16.4166667,3 Z' fill='%23554C4C' fill-rule='nonzero'%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-code {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M11.6166822,3.83364946 C11.9377497,3.91967925 12.1282855,4.24969686 12.0422557,4.57076443 L9.11376613,15.5000363 C9.02773634,15.8211038 8.69771872,16.0116396 8.37665116,15.9256098 C8.0555836,15.83958 7.86504784,15.5095624 7.95107764,15.1884948 L10.8795672,4.25922298 C10.965597,3.93815542 11.2956146,3.74761966 11.6166822,3.83364946 Z M6.57038834,5.4184093 C6.80542611,5.65344707 6.80542611,6.03451858 6.57038834,6.26955635 L3.08021403,9.75873548 L6.57038834,13.2489622 C6.80542611,13.4839999 6.80542611,13.8650715 6.57038834,14.1001092 C6.33535057,14.335147 5.95427906,14.335147 5.71924129,14.1001092 L1.80396485,10.1848328 C1.56892708,9.94979502 1.56892708,9.5687235 1.80396485,9.33368573 L5.71924129,5.4184093 C5.95427906,5.18337153 6.33535057,5.18337153 6.57038834,5.4184093 Z M13.422945,5.4184093 C13.6579828,5.18337153 14.0390543,5.18337153 14.274092,5.4184093 L14.274092,5.4184093 L18.1893685,9.33368573 C18.4244062,9.5687235 18.4244062,9.94979502 18.1893685,10.1848328 L18.1893685,10.1848328 L14.274092,14.1001092 C14.0390543,14.335147 13.6579828,14.335147 13.422945,14.1001092 C13.1879072,13.8650715 13.1879072,13.4839999 13.422945,13.2489622 L13.422945,13.2489622 L16.9131193,9.75873548 L13.422945,6.26955635 C13.1879072,6.03451858 13.1879072,5.65344707 13.422945,5.4184093 Z' fill='%23554C4C'%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-simp-table {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M14.7727273,2.5 C16.2789584,2.5 17.5,3.72104159 17.5,5.22727273 L17.5,14.7727273 C17.5,16.2789584 16.2789584,17.5 14.7727273,17.5 L5.22727273,17.5 C3.72104159,17.5 2.5,16.2789584 2.5,14.7727273 L2.5,5.22727273 C2.5,3.72104159 3.72104159,2.5 5.22727273,2.5 L14.7727273,2.5 Z M3.77186238,12.4423287 L3.77272727,14.7727273 C3.77272727,15.5473604 4.37826423,16.1805629 5.14180713,16.2248035 L5.22727273,16.2272727 L7.55767127,16.2281376 C7.53307493,16.1800392 7.51564204,16.1273634 7.50675303,16.0716375 L7.5,15.9859521 L7.499,12.5 L4.01404787,12.5 C3.92645682,12.5 3.84401,12.4792232 3.77186238,12.4423287 Z M11.5,12.5 L8.499,12.5 L8.5,15.9859521 C8.5,16.0735432 8.47922323,16.15599 8.44213461,16.2281376 L11.5576713,16.2281376 C11.5330749,16.1800392 11.515642,16.1273634 11.506753,16.0716375 L11.5,15.9859521 L11.5,12.5 Z M16.2281376,12.4423287 C16.1800392,12.4669251 16.1273634,12.484358 16.0716375,12.493247 L15.9859521,12.5 L12.5,12.5 L12.5,15.9859521 C12.5,16.0735432 12.4792232,16.15599 12.4421346,16.2281376 L14.7727273,16.2272727 C15.5473604,16.2272727 16.1805629,15.6217358 16.2248035,14.8581929 L16.2272727,14.7727273 L16.2281376,12.4423287 Z M7.499,8.248 L3.772,8.249 L3.77272727,8.25 L3.77186238,11.5578654 C3.81996079,11.5331396 3.87263663,11.5156636 3.92836249,11.5067602 L4.01404787,11.5 L7.499,11.5 L7.499,8.248 Z M16.227,8.249 L12.5,8.248 L12.5,11.5 L15.9859521,11.5 C16.0735432,11.5 16.15599,11.5207768 16.2281376,11.5578654 L16.227,8.249 Z M11.5,8.248 L8.499,8.248 L8.499,11.5 L11.5,11.5 L11.5,8.248 Z M14.7727273,3.77272727 L5.22727273,3.77272727 C4.45263957,3.77272727 3.81943715,4.37826423 3.77519646,5.14180713 L3.77272727,5.22727273 L3.772,7 L16.227,7 L16.2272727,5.22727273 C16.2272727,4.45263957 15.6217358,3.81943715 14.8581929,3.77519646 L14.7727273,3.77272727 Z' fill='%23554C4C' fill-rule='nonzero'%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\n@media (prefers-color-scheme: dark) {\nspan.embed-h1 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.787 18.523c.478 0 .8-.322.8-.811v-6.263c0-.558-.343-.907-.918-.907-.333 0-.59.048-.967.306l-1.536 1.063c-.252.177-.35.36-.35.607 0 .344.243.58.57.58a.66.66 0 0 0 .43-.145l1.133-.79h.032v5.549c0 .489.328.811.806.811z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h2 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM16.8 17.91h4.291c.42 0 .672-.263.672-.644 0-.392-.253-.645-.672-.645H18.17v-.032l1.676-1.611c1.268-1.198 1.73-1.789 1.73-2.734 0-1.332-1.107-2.256-2.75-2.256-1.467 0-2.439.8-2.702 1.66-.038.112-.059.225-.059.349 0 .402.258.66.693.66.349 0 .537-.15.72-.472.279-.623.709-.935 1.332-.935.692 0 1.187.457 1.187 1.096 0 .558-.247.934-1.204 1.853l-2.31 2.207c-.327.301-.445.505-.445.811 0 .408.253.693.763.693z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h3 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM18.427 18.582c1.8 0 3.018-.935 3.018-2.342 0-1.069-.746-1.745-1.901-1.853v-.032c.913-.188 1.617-.833 1.617-1.815 0-1.241-1.107-2.052-2.745-2.052-1.37 0-2.25.634-2.594 1.39-.08.184-.118.34-.118.522 0 .392.23.655.682.655.365 0 .553-.134.73-.5.253-.547.65-.821 1.305-.821.785 0 1.204.413 1.204 1.037 0 .633-.527 1.074-1.338 1.074h-.317c-.392 0-.617.236-.617.574 0 .35.225.58.617.58h.339c.94 0 1.493.42 1.487 1.171 0 .645-.547 1.107-1.342 1.107-.806 0-1.225-.322-1.499-.865-.161-.295-.365-.424-.687-.424-.446 0-.715.263-.715.682 0 .161.038.333.124.51.365.763 1.273 1.402 2.75 1.402z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h4 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM20.011 18.523c.446 0 .774-.274.774-.79v-.746h.44c.424 0 .666-.263.666-.645 0-.381-.236-.65-.666-.65h-.44v-3.98c0-.725-.516-1.17-1.338-1.17-.655 0-1.047.268-1.584 1.09-.843 1.251-1.617 2.433-2.149 3.389-.241.424-.338.725-.338 1.058 0 .543.392.908.978.908h2.89v.746c0 .516.321.79.767.79zm-.736-2.788h-2.481v-.043c.628-1.17 1.343-2.26 2.45-3.856h.031v3.9z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h5 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM18.523 18.582c1.768 0 2.998-1.117 2.998-2.771 0-1.478-1.053-2.52-2.536-2.52-.79 0-1.423.312-1.74.812h-.032l.183-2.154h3.061c.408 0 .666-.253.666-.645s-.263-.644-.666-.644h-3.4c-.628 0-.967.263-1.02.918l-.226 2.841c-.005.027-.005.043-.005.065-.022.435.23.806.762.806.36 0 .521-.081.838-.376.274-.264.66-.462 1.123-.462.843 0 1.445.58 1.445 1.396 0 .838-.607 1.445-1.45 1.445-.699 0-1.155-.338-1.435-.897-.182-.29-.386-.403-.709-.403-.419 0-.676.247-.676.66 0 .194.048.36.129.533.386.821 1.46 1.396 2.69 1.396z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h6 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.674 18.582c1.73 0 2.986-1.144 2.986-2.75 0-1.456-1.026-2.524-2.524-2.524-1.048 0-1.81.526-2.111 1.246h-.032v-.08c.01-1.655.574-2.708 1.68-2.708.533 0 .909.199 1.263.645.236.274.43.413.752.413.424 0 .677-.28.677-.639a.954.954 0 0 0-.113-.435c-.365-.725-1.29-1.268-2.573-1.268-2.014 0-3.239 1.547-3.239 4.115 0 .902.162 1.67.457 2.272.57 1.138 1.547 1.713 2.777 1.713zm-.022-1.289a1.404 1.404 0 0 1-1.418-1.423c0-.79.613-1.365 1.434-1.365.817 0 1.413.58 1.413 1.397-.005.779-.634 1.391-1.429 1.391z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h7 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM18.025 18.523c.349 0 .548-.129.725-.473l2.874-5.548c.209-.408.306-.666.306-.956 0-.553-.403-.886-.967-.886H16.95c-.387 0-.672.252-.672.639 0 .392.285.65.672.65h3.34v.032l-2.868 5.371a.988.988 0 0 0-.14.51c0 .376.285.66.742.66z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h8 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.588 18.582c1.848 0 3.142-.924 3.142-2.267 0-1.02-.747-1.772-1.805-1.982v-.032c.908-.23 1.52-.891 1.52-1.724 0-1.214-1.176-2.09-2.857-2.09-1.681 0-2.863.882-2.863 2.085 0 .843.618 1.504 1.53 1.73v.031c-1.057.205-1.81.957-1.81 1.977 0 1.343 1.29 2.272 3.143 2.272zm0-4.77c-.736 0-1.257-.44-1.257-1.074 0-.639.521-1.08 1.257-1.08.73 0 1.257.441 1.257 1.08 0 .634-.527 1.075-1.257 1.075zm0 3.588c-.854 0-1.45-.504-1.45-1.208 0-.698.596-1.198 1.45-1.198s1.445.5 1.445 1.198c0 .704-.591 1.208-1.445 1.208z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-h9 {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' width='24' height='24' viewBox='0 0 24 24'%3E%3Cdefs%3E%3CclipPath id='a'%3E%3Crect width='24' height='24' rx='0'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M3.77 19.13c.51 0 .835-.334.835-.863v-5.362h7.348v5.362c0 .529.325.863.835.863s.835-.334.835-.863V6.346c0-.53-.325-.863-.835-.863s-.835.334-.835.863v5.056H4.605V6.346c0-.53-.324-.863-.834-.863s-.835.334-.835.863v11.921c0 .529.324.863.835.863zM19.357 18.582c2.057 0 3.287-1.536 3.287-4.114 0-.908-.161-1.676-.457-2.272-.563-1.139-1.541-1.714-2.776-1.714-1.73 0-2.987 1.144-2.987 2.75 0 1.51 1.139 2.53 2.573 2.53 1.02 0 1.783-.51 2.063-1.257h.032v.086c-.006 1.617-.532 2.707-1.676 2.707-.585 0-.93-.21-1.289-.644-.242-.269-.424-.414-.752-.414-.43 0-.671.274-.671.634 0 .14.032.274.107.424.322.693 1.262 1.284 2.546 1.284zm.059-4.023c-.811 0-1.413-.58-1.413-1.391 0-.784.629-1.391 1.43-1.391.8 0 1.422.618 1.422 1.418 0 .79-.617 1.364-1.439 1.364z' fill='%232C2C2C'/%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-bullet {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Ccircle fill='%23828282' cx='10' cy='10' r='3'%3E%3C/circle%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-toggle {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M11.460903,7.1826499 L15.3597015,11.981171 C15.7908888,12.5118631 15.7102242,13.2916205 15.1795321,13.7228078 C14.9588408,13.9021195 14.6831527,14 14.3987984,14 L6.60120158,14 C5.91742046,14 5.36310634,13.4456859 5.36310634,12.7619048 C5.36310634,12.4775505 5.46098681,12.2018624 5.64029853,11.981171 L9.53909695,7.1826499 C9.97028428,6.65195781 10.7500416,6.57129325 11.2807337,7.00248058 C11.3468265,7.056181 11.4072026,7.11655708 11.460903,7.1826499 Z' fill='%23828282' transform='translate(10.500000, 10.000000) rotate(-270.000000) translate(-10.500000, -10.000000) '%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-task {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Crect stroke='%23828282' stroke-width='1.5' x='2.75' y='2.75' width='14.5' height='14.5' rx='2'%3E%3C/rect%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-untask {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(5.000000, 5.000000)' fill='%23828282' fill-rule='nonzero'%3E%3Cpath d='M3.95468589,10 C3.60453141,10 3.33676622,9.8409332 3.05870237,9.4909862 L0.24716787,5.93849417 C0.09268795,5.747614 0,5.50371156 0,5.27041357 C0,4.7826087 0.38105046,4.40084836 0.83419156,4.40084836 C1.12255407,4.40084836 1.36972194,4.5068929 1.59629248,4.82502651 L3.91349125,7.8791092 L8.3934089,0.48780488 C8.5890834,0.15906681 8.8568486,0 9.1246138,0 C9.5777549,0 10,0.30752916 10,0.80593849 C10,1.03923648 9.8867147,1.28313892 9.7528321,1.495228 L4.79917611,9.4803818 C4.58290422,9.8303287 4.29454171,10 3.95468589,10 Z'%3E%3C/path%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-callout {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M15.7166667,10.720413 C16.3609989,10.720413 16.8833333,11.2427475 16.8833333,11.8870797 L16.8833333,11.8870797 L16.8833333,15.5037464 C16.8833333,16.1480786 16.3609989,16.670413 15.7166667,16.670413 L15.7166667,16.670413 L4.28333333,16.670413 C3.63900111,16.670413 3.11666667,16.1480786 3.11666667,15.5037464 L3.11666667,15.5037464 L3.11666667,11.8870797 C3.11666667,11.2427475 3.63900111,10.720413 4.28333333,10.720413 L4.28333333,10.720413 Z M15.7166667,11.8870797 L4.28333333,11.8870797 L4.28333333,15.5037464 L15.7166667,15.5037464 L15.7166667,11.8870797 Z M16.4166667,6.87041303 C16.7388328,6.87041303 17,7.13158026 17,7.45374636 C17,7.77591246 16.7388328,8.03707969 16.4166667,8.03707969 L3.58333333,8.03707969 C3.26116723,8.03707969 3,7.77591246 3,7.45374636 C3,7.13158026 3.26116723,6.87041303 3.58333333,6.87041303 L16.4166667,6.87041303 Z M16.4166667,3 C16.7388328,3 17,3.26116723 17,3.58333333 C17,3.90549944 16.7388328,4.16666667 16.4166667,4.16666667 L3.58333333,4.16666667 C3.26116723,4.16666667 3,3.90549944 3,3.58333333 C3,3.26116723 3.26116723,3 3.58333333,3 L16.4166667,3 Z' fill='%23828282' fill-rule='nonzero'%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-code {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M11.6166822,3.83364946 C11.9377497,3.91967925 12.1282855,4.24969686 12.0422557,4.57076443 L9.11376613,15.5000363 C9.02773634,15.8211038 8.69771872,16.0116396 8.37665116,15.9256098 C8.0555836,15.83958 7.86504784,15.5095624 7.95107764,15.1884948 L10.8795672,4.25922298 C10.965597,3.93815542 11.2956146,3.74761966 11.6166822,3.83364946 Z M6.57038834,5.4184093 C6.80542611,5.65344707 6.80542611,6.03451858 6.57038834,6.26955635 L3.08021403,9.75873548 L6.57038834,13.2489622 C6.80542611,13.4839999 6.80542611,13.8650715 6.57038834,14.1001092 C6.33535057,14.335147 5.95427906,14.335147 5.71924129,14.1001092 L1.80396485,10.1848328 C1.56892708,9.94979502 1.56892708,9.5687235 1.80396485,9.33368573 L5.71924129,5.4184093 C5.95427906,5.18337153 6.33535057,5.18337153 6.57038834,5.4184093 Z M13.422945,5.4184093 C13.6579828,5.18337153 14.0390543,5.18337153 14.274092,5.4184093 L14.274092,5.4184093 L18.1893685,9.33368573 C18.4244062,9.5687235 18.4244062,9.94979502 18.1893685,10.1848328 L18.1893685,10.1848328 L14.274092,14.1001092 C14.0390543,14.335147 13.6579828,14.335147 13.422945,14.1001092 C13.1879072,13.8650715 13.1879072,13.4839999 13.422945,13.2489622 L13.422945,13.2489622 L16.9131193,9.75873548 L13.422945,6.26955635 C13.1879072,6.03451858 13.1879072,5.65344707 13.422945,5.4184093 Z' fill='%23828282'%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\nspan.embed-simp-table {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cpath d='M14.7727273,2.5 C16.2789584,2.5 17.5,3.72104159 17.5,5.22727273 L17.5,14.7727273 C17.5,16.2789584 16.2789584,17.5 14.7727273,17.5 L5.22727273,17.5 C3.72104159,17.5 2.5,16.2789584 2.5,14.7727273 L2.5,5.22727273 C2.5,3.72104159 3.72104159,2.5 5.22727273,2.5 L14.7727273,2.5 Z M3.77186238,12.4423287 L3.77272727,14.7727273 C3.77272727,15.5473604 4.37826423,16.1805629 5.14180713,16.2248035 L5.22727273,16.2272727 L7.55767127,16.2281376 C7.53307493,16.1800392 7.51564204,16.1273634 7.50675303,16.0716375 L7.5,15.9859521 L7.499,12.5 L4.01404787,12.5 C3.92645682,12.5 3.84401,12.4792232 3.77186238,12.4423287 Z M11.5,12.5 L8.499,12.5 L8.5,15.9859521 C8.5,16.0735432 8.47922323,16.15599 8.44213461,16.2281376 L11.5576713,16.2281376 C11.5330749,16.1800392 11.515642,16.1273634 11.506753,16.0716375 L11.5,15.9859521 L11.5,12.5 Z M16.2281376,12.4423287 C16.1800392,12.4669251 16.1273634,12.484358 16.0716375,12.493247 L15.9859521,12.5 L12.5,12.5 L12.5,15.9859521 C12.5,16.0735432 12.4792232,16.15599 12.4421346,16.2281376 L14.7727273,16.2272727 C15.5473604,16.2272727 16.1805629,15.6217358 16.2248035,14.8581929 L16.2272727,14.7727273 L16.2281376,12.4423287 Z M7.499,8.248 L3.772,8.249 L3.77272727,8.25 L3.77186238,11.5578654 C3.81996079,11.5331396 3.87263663,11.5156636 3.92836249,11.5067602 L4.01404787,11.5 L7.499,11.5 L7.499,8.248 Z M16.227,8.249 L12.5,8.248 L12.5,11.5 L15.9859521,11.5 C16.0735432,11.5 16.15599,11.5207768 16.2281376,11.5578654 L16.227,8.249 Z M11.5,8.248 L8.499,8.248 L8.499,11.5 L11.5,11.5 L11.5,8.248 Z M14.7727273,3.77272727 L5.22727273,3.77272727 C4.45263957,3.77272727 3.81943715,4.37826423 3.77519646,5.14180713 L3.77272727,5.22727273 L3.772,7 L16.227,7 L16.2272727,5.22727273 C16.2272727,4.45263957 15.6217358,3.81943715 14.8581929,3.77519646 L14.7727273,3.77272727 Z' fill='%23828282' fill-rule='nonzero'%3E%3C/path%3E%3C/g%3E%3C/svg%3E\");\n}\n}\nspan>a.wolai-bi-link>span.embed-page {\n  color: var(--wolai-bi-link-text-color);\n  background-color: var(--wolai-bi-link-text-background);\n  margin: 0 2px;\n  padding: 0 2px;\n  border-radius: 3px;\n}\nspan>a.wolai-bi-link>span.embed-page:hover {\n  background-color: var(--wolai-bi-link-text-hover-background);\n}\nspan>a.wolai-bi-link>span.embed-page {\n  border-bottom: none;\n}\nspan>a.wolai-bi-link.embed-progress>span {\n  border-bottom: none;\n  border-radius: 2px;\n  display: inline-block;\n}\nspan>a.wolai-bi-link.embed-progress>span>div {\n  display: flex;\n  align-items: center;\n  margin: 2px;\n}\nspan>a.wolai-bi-link.embed-progress>span .content {\n  overflow: hidden; position: relative;\n  width: 32px;\n  height: 6px;\n  border-radius: 3px;\n}\nbody.small-font span>a.wolai-bi-link.embed-progress>span .content {\n  width: 28px;\n  height: 4px;\n  border-radius: 2px;\n}\nspan>a.wolai-bi-link.embed-progress .miu {\n  position: absolute; left: 0; top: 0; width: 0; height: 100%;\n  background: var(--wolai-theme-color);\n}\nspan>a.wolai-bi-link.embed-progress .er {\n  position: absolute; left: 0; top: 0; width: 100%; height: 100%;\n  background: var(--wolai-theme-color);\n  opacity: 0.15;\n}\nspan>a.wolai-bi-link.embed-progress .digit {\n  color: var(--wolai-desc-color);\n  margin-left: 8px;\n  line-height: 18px;\n  font-variant-numeric: tabular-nums;\n}\nbody.small-font span>a.wolai-bi-link.embed-progress .digit {\n  line-height: 14px;\n}\nspan>a.wolai-bi-link.embed-progress .digit[data-value]::before {\n  content: attr(data-value) \"%\";\n}\nheader, article, footer {\n    color: var(--wolai-color-default);\n}\narticle .def-color { color: inherit; }\narticle .gray { color: var(--wolai-color-gray); }\narticle .brown { color: var(--wolai-color-brown); }\narticle .orange { color: var(--wolai-color-orange); }\narticle .yellow { color: var(--wolai-color-yellow); }\narticle .green { color: var(--wolai-color-green); }\narticle .blue { color: var(--wolai-color-blue); }\narticle .purple { color: var(--wolai-color-purple); }\narticle .pink { color: var(--wolai-color-pink); }\narticle .red { color: var(--wolai-color-red); }\narticle .bg-default { background-color: var(--wolai-color-blank-bg);}\narticle .bg-cultured { background-color: var(--wolai-color-cultured); }\narticle .bg-lightgray { background-color: var(--wolai-color-lightgray); }\narticle .bg-apricot { background-color: var(--wolai-color-apricot); }\narticle .bg-vivid_tangerine { background-color: var(--wolai-color-vivid_tangerine); }\narticle .bg-blond { background-color: var(--wolai-color-blond); }\narticle .bg-aero_blue { background-color: var(--wolai-color-aero_blue); }\narticle .bg-uranian_blue { background-color: var(--wolai-color-uranian_blue); }\narticle .bg-lavender_blue { background-color: var(--wolai-color-lavender_blue); }\narticle .bg-pale_purple { background-color: var(--wolai-color-pale_purple); }\narticle .bg-pink_lavender { background-color: var(--wolai-color-pink_lavender); }\narticle .bg-lightpink { background-color: var(--wolai-color-lightpink); }\narticle .bg-fluorescent_yellow { background-color: var(--wolai-color-fluorescent_yellow); }\narticle .bg-fluorescent_green { background-color: var(--wolai-color-fluorescent_green); }\narticle .bg-fluorescent_green2 { background-color: var(--wolai-color-fluorescent_green2); }\narticle .bg-fluorescent_blue { background-color: var(--wolai-color-fluorescent_blue); }\narticle .bg-fluorescent_purple { background-color: var(--wolai-color-fluorescent_purple); }\narticle .bg-fluorescent_purple2 { background-color: var(--wolai-color-fluorescent_purple2); }\n\n\n    @media print {\n      span {\n        page-break-inside: avoid;\n      }\n\n      * {\n        -webkit-print-color-adjust: exact !important;\n      }\n\n      /* 链接不显示修饰线 */\n      a {\n        text-decoration: none !important;\n      }\n\n    }\n    \ndetails > summary::-webkit-details-marker {display: none;}"},{"_content":"<!DOCTYPE html>\n<html lang=\"zh-Hans-CN\"><head><meta charset=\"utf-8\"/><meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"css/modern-norm.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"css/prism.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"css/katex.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"css/wolai.css\"/><title>NestJs - wolai 笔记</title><link rel=\"shortcut icon\" href=\"https://docs.nestjs.com/assets/logo-small.svg\"></link></head><body><header><div class=\"image\"></div><div class=\"title\"><div class=\"banner\"><div class=\"icon icon-image\" style=\"background-image: url(&quot;https://docs.nestjs.com/assets/logo-small.svg&quot;)\"></div></div><div data-title=\"NestJs\" class=\"main-title\"></div></div></header><article><div id=\"2paLoq9X2j8c7PaeaihZoq\" class=\"wolai-sub-page wolai-block\"><div class=\"page-icon icon-image\" style=\"background-image: url(&quot;media/icon.svg&quot;)\"></div><a href=\"nest%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/nest%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8.html\"><span>Nest快速入门</span></a></div><div id=\"oFq8Y2nkSeJqTR6S67iQY9\" class=\"wolai-sub-page wolai-block\"><div class=\"page-icon\"></div><a href=\"nest%E7%9A%84%E6%A1%86%E6%9E%B6%E7%89%B9%E6%80%A7/nest%E7%9A%84%E6%A1%86%E6%9E%B6%E7%89%B9%E6%80%A7.html\"><span>Nest的框架特性</span></a></div><div id=\"mRd9DfQSGhppUf4aBPRcS1\" class=\"wolai-sub-page wolai-block\"><div class=\"page-icon\"></div><a href=\"nest%E4%B8%AD%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/nest%E4%B8%AD%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8.html\"><span>Nest中的装饰器</span></a></div></article><footer></footer></body></html>","source":"html/nest/index.html","raw":"<!DOCTYPE html>\n<html lang=\"zh-Hans-CN\"><head><meta charset=\"utf-8\"/><meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"css/modern-norm.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"css/prism.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"css/katex.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"css/wolai.css\"/><title>NestJs - wolai 笔记</title><link rel=\"shortcut icon\" href=\"https://docs.nestjs.com/assets/logo-small.svg\"></link></head><body><header><div class=\"image\"></div><div class=\"title\"><div class=\"banner\"><div class=\"icon icon-image\" style=\"background-image: url(&quot;https://docs.nestjs.com/assets/logo-small.svg&quot;)\"></div></div><div data-title=\"NestJs\" class=\"main-title\"></div></div></header><article><div id=\"2paLoq9X2j8c7PaeaihZoq\" class=\"wolai-sub-page wolai-block\"><div class=\"page-icon icon-image\" style=\"background-image: url(&quot;media/icon.svg&quot;)\"></div><a href=\"nest%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/nest%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8.html\"><span>Nest快速入门</span></a></div><div id=\"oFq8Y2nkSeJqTR6S67iQY9\" class=\"wolai-sub-page wolai-block\"><div class=\"page-icon\"></div><a href=\"nest%E7%9A%84%E6%A1%86%E6%9E%B6%E7%89%B9%E6%80%A7/nest%E7%9A%84%E6%A1%86%E6%9E%B6%E7%89%B9%E6%80%A7.html\"><span>Nest的框架特性</span></a></div><div id=\"mRd9DfQSGhppUf4aBPRcS1\" class=\"wolai-sub-page wolai-block\"><div class=\"page-icon\"></div><a href=\"nest%E4%B8%AD%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/nest%E4%B8%AD%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8.html\"><span>Nest中的装饰器</span></a></div></article><footer></footer></body></html>","date":"2023-12-11T04:41:00.771Z","updated":"2023-12-11T04:41:00.771Z","path":"html/nest/index.html","title":"","comments":1,"layout":"page","_id":"clq0gtc9w0007zqq90gzyeued","content":"<!DOCTYPE html>\n<html lang=\"zh-Hans-CN\"><head><meta charset=\"utf-8\"/><meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"css/modern-norm.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"css/prism.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"css/katex.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"css/wolai.css\"/><title>NestJs - wolai 笔记</title><link rel=\"shortcut icon\" href=\"https://docs.nestjs.com/assets/logo-small.svg\"></link></head><body><header><div class=\"image\"></div><div class=\"title\"><div class=\"banner\"><div class=\"icon icon-image\" style=\"background-image: url(&quot;https://docs.nestjs.com/assets/logo-small.svg&quot;)\"></div></div><div data-title=\"NestJs\" class=\"main-title\"></div></div></header><article><div id=\"2paLoq9X2j8c7PaeaihZoq\" class=\"wolai-sub-page wolai-block\"><div class=\"page-icon icon-image\" style=\"background-image: url(&quot;media/icon.svg&quot;)\"></div><a href=\"nest%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/nest%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8.html\"><span>Nest快速入门</span></a></div><div id=\"oFq8Y2nkSeJqTR6S67iQY9\" class=\"wolai-sub-page wolai-block\"><div class=\"page-icon\"></div><a href=\"nest%E7%9A%84%E6%A1%86%E6%9E%B6%E7%89%B9%E6%80%A7/nest%E7%9A%84%E6%A1%86%E6%9E%B6%E7%89%B9%E6%80%A7.html\"><span>Nest的框架特性</span></a></div><div id=\"mRd9DfQSGhppUf4aBPRcS1\" class=\"wolai-sub-page wolai-block\"><div class=\"page-icon\"></div><a href=\"nest%E4%B8%AD%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/nest%E4%B8%AD%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8.html\"><span>Nest中的装饰器</span></a></div></article><footer></footer></body></html>","site":{"data":{}},"length":302,"excerpt":"","more":"<!DOCTYPE html>\n<html lang=\"zh-Hans-CN\"><head><meta charset=\"utf-8\"/><meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"css/modern-norm.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"css/prism.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"css/katex.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"css/wolai.css\"/><title>NestJs - wolai 笔记</title><link rel=\"shortcut icon\" href=\"https://docs.nestjs.com/assets/logo-small.svg\"></link></head><body><header><div class=\"image\"></div><div class=\"title\"><div class=\"banner\"><div class=\"icon icon-image\" style=\"background-image: url(&quot;https://docs.nestjs.com/assets/logo-small.svg&quot;)\"></div></div><div data-title=\"NestJs\" class=\"main-title\"></div></div></header><article><div id=\"2paLoq9X2j8c7PaeaihZoq\" class=\"wolai-sub-page wolai-block\"><div class=\"page-icon icon-image\" style=\"background-image: url(&quot;media/icon.svg&quot;)\"></div><a href=\"nest%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/nest%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8.html\"><span>Nest快速入门</span></a></div><div id=\"oFq8Y2nkSeJqTR6S67iQY9\" class=\"wolai-sub-page wolai-block\"><div class=\"page-icon\"></div><a href=\"nest%E7%9A%84%E6%A1%86%E6%9E%B6%E7%89%B9%E6%80%A7/nest%E7%9A%84%E6%A1%86%E6%9E%B6%E7%89%B9%E6%80%A7.html\"><span>Nest的框架特性</span></a></div><div id=\"mRd9DfQSGhppUf4aBPRcS1\" class=\"wolai-sub-page wolai-block\"><div class=\"page-icon\"></div><a href=\"nest%E4%B8%AD%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/nest%E4%B8%AD%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8.html\"><span>Nest中的装饰器</span></a></div></article><footer></footer></body></html>"},{"_content":"<!DOCTYPE html>\n<html lang=\"zh-Hans-CN\"><head><meta charset=\"utf-8\"/><meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/modern-norm.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/prism.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/katex.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/wolai.css\"/><title>Nest的框架特性 - wolai 笔记</title><link rel=\"shortcut icon\"></link></head><body class=\"full-width\"><header><div class=\"image\"></div><div class=\"title\"><div class=\"banner\"><div class=\"icon\"></div></div><div data-title=\"Nest的框架特性\" class=\"main-title\"></div></div></header><article><h1 id=\"bA2XbYDhCHuAZe3Z5FsRSk\" class=\"wolai-block\"><span class=\"inline-wrap\">Nest<span class=\"jill\"></span>的定位</span></h1><div id=\"2EAeJc9vhsmukzzQErCkoe\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">上一次介绍了<span class=\"jill\"></span>nest<span class=\"jill\"></span>的一些基础概念和入门用法，这次再聊聊<span class=\"jill\"></span>nest<span class=\"jill\"></span>作为目前最流行的<span class=\"jill\"></span>node<span class=\"jill\"></span>企业级开发框架，它有什么特点。</span></div></div><div id=\"oLuxjdYtoC2inP25ciHoeK\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"v19gdsDPdX4CZ3PHV6PT53\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">开发 node 应用有 3 个层次：</span></div></div><ul class=\"wolai-block\"><li id=\"u8xna1ZG8WF5LPNy9pc6KJ\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">直接用 http、https 包的 createServer api</span></li><li id=\"gmvYFuqedgPUCr9qggErne\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">使用 express、koa 这种处理请求响应的库</span></li><li id=\"ig7Nxk3CSqC64Mpf8K4guP\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">使用 nest、egg、midway 这类企业级框架</span></li></ul><div id=\"55zWqZWL662Z2SCfvSdAqZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"fP5iKA3sBchBuMkqBVDCrw\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">1、直接用 createServer api 创建服务适合特别简单的场景，比如工具提供的开发服务。</span></div></div><div id=\"qgQfK5vCwtbJRsQqXC8qdf\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">2、express、koa 这种库并没有约束代码写法，开发者可以随意编写，所以不适合开发大型项目。</span></div></div><blockquote id=\"ukP8VDYV3xxwbsw9R4vYiG\" class=\"wolai-block\"><span class=\"gray inline-wrap\">Express 理念是为 HTTP 服务器提供小型、强大的工具，使其成为单页应用程序、网站、混合或公共 HTTP API 的绝佳解决方案。而类似于<span class=\"jill\"></span>express<span class=\"jill\"></span>的还有其他，例如<span class=\"jill\"></span>Koa、Hapi<span class=\"jill\"></span>等。</span></blockquote><div id=\"eDUqBkJ8E7WXdvYLzcwiCz\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">3、大型项目会用企业级开发框架，有一定的代码约束，对很多功能都有开箱即用的解决方案的框架。</span></div></div><div id=\"NuyommMexGm2h4XPGUkAf\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"hsogJ2xjAQi3Xu6qG5n5JY\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">nest<span class=\"jill\"></span>作为<span class=\"jill\"></span>express<span class=\"jill\"></span>的上层框架，目前已经有个<span class=\"jill\"></span>57.3k Star，仅次于<span class=\"jill\"></span>express 61.1k Star。虽然可以只用<span class=\"jill\"></span>express<span class=\"jill\"></span>来开发项目。同类的上层框架也有<span class=\"jill\"></span>egg、midway。</span></div></div><div id=\"kBfKticUuLZK4TvC3R2miL\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">egg 的 ts 支持不好，在当下 ts 这么主流的情况下。（听说阿里 egg 团队也被打包裁了）</span></div></div><div id=\"wZUfGm5Rn9JamHfKLEWB37\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image.png\" style=\"width: 631px\"/></figure></div><div id=\"tyPeu8kXHUfZbDbK958KaC\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">而<span class=\"jill\"></span>midway<span class=\"jill\"></span>的<span class=\"jill\"></span>Star<span class=\"jill\"></span>仅有<span class=\"jill\"></span>6.7k，少了一个数量级，很难保证不会步<span class=\"jill\"></span>egg<span class=\"jill\"></span>的路。</span></div></div><div id=\"8y7eip4DmemdVkP1Q3VtRX\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_1.png\" style=\"width: 610px\"/></figure></div><div id=\"tUcqA7VWFrMW3KyTctGEoM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">综上来说，Nest<span class=\"jill\"></span>目前对于企业级项目来说，是首选的，也几乎是唯一的。</span></div></div><div id=\"mcPv9rjuhDTTaVq4v2S4hA\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h1 id=\"3PdFGDs8P9t2oieAE9Wpv1\" class=\"wolai-block\"><span class=\"inline-wrap\">Nest<span class=\"jill\"></span>的设计</span></h1><div id=\"uxyiYZgCp9BihkQQL7xzzZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">nest<span class=\"jill\"></span>的底层是</span><span class=\"inline-wrap\"><b>基于但不限于</b></span><span class=\"inline-wrap\">express<span class=\"jill\"></span>的，它封装了<span class=\"jill\"></span>IOC、AOP<span class=\"jill\"></span>等架构特性；而这些特性都依赖于<span class=\"jill\"></span>nest<span class=\"jill\"></span>最主要的特性：</span><span class=\"inline-wrap\"><b>模块机制</b></span><span class=\"inline-wrap\">。</span></div></div><div id=\"xjREoEVvpvWjY8rG5HBJZM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">看看<span class=\"jill\"></span>es module<span class=\"jill\"></span>的写法：</span></div></div><code-block id=\"4hW2zxFogiSGeJmuoF93AT\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> a<span class=\"token punctuation\">,</span> b <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> c <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">export</span> <span class=\"token exports\"><span class=\"token punctuation\">{</span> a<span class=\"token punctuation\">,</span> c <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">;</span></pre></div></code-block><div id=\"kjikcn2GbdqagKMw2QzaxZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">而<span class=\"jill\"></span>nest<span class=\"jill\"></span>的<span class=\"jill\"></span>module<span class=\"jill\"></span>写法：</span></div></div><code-block id=\"dLvBYxYePAut1ccV5X7GX4\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Module</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> aModule <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./a.module'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">BService</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./b.service'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">imports</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>aModule<span class=\"token punctuation\">]</span>\n  <span class=\"token literal-property property\">providers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">BService</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">exports</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">BService</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"rbMSZDHM13gPrV8QWrztb1\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">模块编写的逻辑上大同小异，都是<span class=\"jill\"></span>import<span class=\"jill\"></span>外部的值，可以<span class=\"jill\"></span>export<span class=\"jill\"></span>内部的值，而<span class=\"jill\"></span>nest<span class=\"jill\"></span>的模块机制是可以实现</span><span class=\"inline-wrap\"><b>自动注入依赖</b></span><span class=\"inline-wrap\">的，也就是 DI（Denpendency Injection）。</span></div></div><div id=\"kNmkDqZQYhmsJhMz4XtmWE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"o6V16jXHgxjwEuopdnPhkH\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">怎么理解呢，在后端系统中，会有很多对象：</span></div></div><ul class=\"wolai-block\"><li id=\"wZmjK2DwFC7NWgowPJ9xDT\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">Controller 对象：接收 http 请求，调用 Service，返回响应</span></li><li id=\"eUMHQMePgQFvm1pcG1Vxhf\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">Service 对象：实现业务逻辑</span></li><li id=\"kPcHKgLLtBhraQJdQ9KC5o\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">Repository 对象：实现对数据库的增删改查</span></li></ul><div id=\"dVbSRW41QMf6UVDcQhQnBE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">此外，还有数据库链接对象 DataSource，配置对象 Config 等等。</span></div></div><div id=\"fttjW2orykXHWY9DQ2usrn\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这些对象有着错综复杂的关系：</span></div></div><aside id=\"oD6pq5nMB67KTezArT8EbK\" class=\"bg-cultured wolai-block\"><div data-symbol=\"📌\" class=\"icon\"></div><span class=\"inline-wrap\">Controller 依赖了 Service 实现业务逻辑，Service 依赖了 Repository 来做增删改查，Repository 依赖 DataSource 来建立连接，DataSource 又需要从 Config 对象拿到用户名密码等信息。这就导致了创建这些对象是很复杂的，你要理清它们之间的依赖关系，哪个先创建哪个后创建。</span></aside><div id=\"mJJXD7M2HX1JcLnr78Wj9z\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">比如这样：</span></div><code-block id=\"5GdXVwHnDYM2oEuQKQakkp\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">password</span><span class=\"token operator\">:</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> dataSource <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataSource</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> repository <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Repository</span><span class=\"token punctuation\">(</span>dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> service <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Service</span><span class=\"token punctuation\">(</span>repository<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> controller <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Controller</span><span class=\"token punctuation\">(</span>service<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block></div><div id=\"iuaiFd2bgdKBy866PsR1AK\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">要经过一系列的初始化之后才可以使用 Controller 对象。</span></div></div><div id=\"u77z8Qe3EJb6QiVycuXfkV\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">而且像 config、dataSource、repository、service、controller 等这些对象不需要每次都 new 一个新的，一直用一个就可以，也就是保持</span><span class=\"inline-wrap\"><b>单例</b></span><span class=\"inline-wrap\">。</span></div></div><div id=\"riDSpGzpqeENt9pswZKrr9\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"sosGqXqUQqjSKb8quJs8Pz\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在应用初始化的时候，需要理清依赖的先后关系，创建一大堆对象组合起来，还要保证不要多次 new，这是一个后端系统都有的痛点问题。</span></div></div><div id=\"aLRwWVv9nFBq2ZCbBJyGH7\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Java 的 Spring 就实现了 IOC，Nest 也同样实现了。</span></div></div><div id=\"wansCxdgVzALuiYGjFvEA\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"5UBeo4aS2uoo4e3gsJmwdP\" class=\"wolai-block\"><span class=\"inline-wrap\">控制反转</span></h2><div id=\"qyhoJBtKnCmifVet38LMH4\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">自己手动创建和组装对象很麻烦，因此<span class=\"jill\"></span>nest<span class=\"jill\"></span>帮我们做了这一点，使用者只需要根据<span class=\"jill\"></span>nest<span class=\"jill\"></span>提供的标准，声明好哪些依赖关系，便可以完成</span><span class=\"inline-wrap\"><b>自动化对象创建和组装</b></span><span class=\"inline-wrap\">。从主动创建依赖到被动等待依赖注入，这就是 Inverse Of Control，反转控制。</span></div></div><div id=\"ji5DY7exPBqiL44o7UXfek\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"x2kh439x5pFaqqkBZR33A7\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">还是简单看一下代码：</span></div></div><code-block id=\"7zdAgvFDnFFJpiH8mkuLnp\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token comment\">// src/main.ts文件</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">NestFactory</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">AppModule</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./app.module'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token maybe-class-name\">NestFactory</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">create</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">AppModule</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">// src/app.module.ts文件</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Module</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">AppController</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">AppService</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span> \n\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n <span class=\"token literal-property property\">imports</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n <span class=\"token literal-property property\">controllers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">AppController</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n <span class=\"token literal-property property\">providers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">AppService</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n \n \n <span class=\"token comment\">// src/app.service.ts文件</span>\n <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Injectable</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n @<span class=\"token function\"><span class=\"token maybe-class-name\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n <span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppService</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> string <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword control-flow\">return</span> <span class=\"token string\">'Hello World!'</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span>\n \n \n <span class=\"token comment\">// src/app.controller.ts文件</span>\n <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Controller</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Get</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">AppService</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n\n @<span class=\"token function\"><span class=\"token maybe-class-name\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n <span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppController</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token keyword\">private</span> readonly appService<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">AppService</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n   @<span class=\"token function\"><span class=\"token maybe-class-name\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n   <span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> string <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">appService</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span>\n</pre></div></code-block><div id=\"dtzoLTTecEzcdZZgNGxA6F\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">现在访问 </span><span class=\"inline-wrap\"><code>localhost:3000</code></span><span class=\"inline-wrap\"> 就会执行这个 AppController 类中的 </span><span class=\"inline-wrap\"><code>getHello</code></span><span class=\"inline-wrap\"> 方法了。我们来看 app.controller.ts 文件。可以看到构造函数的参数签名中第一个参数 appService 是 AppService 的一个实例。</span></div><div id=\"nV1CkYmCFeE8Hp4Pd9Ej2r\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>constructor(private readonly appService: AppService){}</code></span></div></div></div><div id=\"bgmoCkDxzmHaDovsiF5YGu\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">但是在代码里并有没有看到实例化这个 AppService 的地方。这里其实是把创建这个实例对象的工作交给了<span class=\"jill\"></span>nest<span class=\"jill\"></span>框架，而不是 AppController 自己来创建这个对象，这就是所谓的</span><span class=\"inline-wrap\"><code>控制反转</code></span><span class=\"inline-wrap\">。而把创建好的 AppService 实例对象作为 AppController 实例化时的参数传给构造器就是</span><span class=\"inline-wrap\"><code>依赖注入</code></span><span class=\"inline-wrap\">了。</span></div></div><div id=\"2fDT5A8bBsT2KFf72Rcf5Y\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"3GjcC2HYdCxgLWWGPTBjMv\" class=\"wolai-block\"><span class=\"inline-wrap\">面向切面</span></h2><div id=\"dFht1Z4LUXYGz1VdAUW2vg\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">后端框架基本都是 MVC 的架构。MVC 是 Model View Controller 的简写。</span></div></div><div id=\"gMAPnLDCRQZqi14FYU6yfM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">MVC 架构下，请求会先发送给 Controller，由它调度 Model 层的 Service 来完成业务逻辑，然后返回对应的 View。</span></div></div><div id=\"m2LbcbaZD9VKFeDKFotJt8\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/image_2.png\" style=\"width: 323px\"/></figure></div><div id=\"oFRBAv2FKzJqeeY7BUqxrY\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"snQZktVCwfPXALdD3KQZM3\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">通常一个请求过来，可能会经过 Controller（控制器）、Service（服务）、Repository（数据库访问） ：</span></div></div><div id=\"n9ceDUNpWAyfFXWaSWf9Ns\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/image_3.png\" style=\"width: 287px\"/></figure></div><div id=\"geQMz9x42E7rSJxTNCZHVR\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">如果想在这个调用链路里加入一些通用逻辑呢？比如日志记录、权限控制、异常处理等。容易想到的是直接改造 Controller 层代码，加入这段逻辑。</span></div></div><div id=\"h8j4nbkQEeqzAj9TtDy5AL\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">可以是可以，但是不优雅，因为这些通用的逻辑侵入到了业务逻辑里面，形成了耦合。那如何进行不侵入性的操作呢？</span></div></div><div id=\"eYyPRLuw7uz6kS8p1K6Bx5\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">是不是可以在调用 Controller 前后加入一个执行通用逻辑的阶段？</span></div></div><div id=\"4CBKnojG9LQv2aEWYVXjq9\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/image_4.png\" style=\"width: 412px\"/></figure></div><div id=\"qKhwqHmMUUgXnURkNSKBQc\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这样的横向扩展点就叫做切面，这种非侵入式的加入一些切面逻辑的编程方式就叫做 AOP （面向切面编程）。</span></div></div><aside id=\"iyxcwfctwupDZiSPYcPvyJ\" class=\"bg-cultured wolai-block\"><div data-symbol=\"📌\" class=\"icon\"></div><span class=\"inline-wrap\">AOP 主要的思想是将我们对于业务逻辑无关的一些操作，比如日志记录、性能统计、安全控制、异常处理、错误上报等，将这些操作从业务逻辑中剥离出来，将它们放在一些独立的方法中，然后如果我们对这些操作做修改的时候就可以不用影响到业务逻辑相关的代码。它主要体现了我们对代码的低耦合性的追求。</span></aside><div id=\"5qRYX3xkNAFLFzKxrEfEDV\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"tik6TfN5zWdMWnCFLtN8FH\" class=\"wolai-block\"><span class=\"inline-wrap\">Express<span class=\"jill\"></span>中的<span class=\"jill\"></span>AOP</span></h3><div id=\"drnUWLTbp67nNyf2ZbPNZD\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在说<span class=\"jill\"></span>Nest<span class=\"jill\"></span>之前，先来看看<span class=\"jill\"></span>Express<span class=\"jill\"></span>中的中间件，其洋葱模型也是一种 AOP 的实现，因为你可以透明的在外面包一层，加入一些逻辑，内层感知不到。</span></div></div><div id=\"chxh8VDWSvcWY5CJoyzZEm\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/image_5.png\" style=\"width: 418px\"/></figure></div><div id=\"qHpcNwX86Z54bDJGko9dAR\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在中间件函数中，可以执行以下任何任务</span></div></div><ul class=\"wolai-block\"><li id=\"eTPyjixVjwt6NyE754fiUj\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">执行任何代码</span></li><li id=\"gimMBiKXhKYwraQHvHTGL3\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">修改 </span><span class=\"inline-wrap\"><code>request</code></span><span class=\"inline-wrap\"> 或 </span><span class=\"inline-wrap\"><code>response</code></span><span class=\"inline-wrap\"> 响应对象【同一个生命周期】</span></li><li id=\"k849TgVE2VfQaMM4HCWNce\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">结束请求响应周期</span></li><li id=\"uet47fxEotBYacLY7tkbjj\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">调用下一个中间件</span></li></ul><div id=\"592UL1AzoonKNQTzDwRukQ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">简单看看<span class=\"jill\"></span>Express<span class=\"jill\"></span>的中间件的使用：</span></div></div><code-block id=\"55d8AGTu2KrcnTh3CDycMT\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token comment\">// 洋葱模型</span>\n<span class=\"token comment\">// 全局使用中间件</span>\napp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">use</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'全局中间件 start'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// 调用下一个中间件</span>\n  <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'全局中间件 end'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 单独中间件</span>\napp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"单独中间件 start\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"单独中间件 end\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"处理请求 start\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"get method!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"处理请求 end\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 运行结果</span>\n<span class=\"token comment\">// 全局中间件 start</span>\n<span class=\"token comment\">// 单独中间件 start</span>\n<span class=\"token comment\">// 处理请求 start</span>\n<span class=\"token comment\">// 处理请求 end</span>\n<span class=\"token comment\">// 单独中间件 end</span>\n<span class=\"token comment\">// 全局中间件 end</span>\n</pre></div></code-block><div id=\"qkATGmmtjSiHW2m3RxXaWs\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">可以看到它的执行机制，以<span class=\"jill\"></span>next()方法为分水岭，先执行所有中间件的<span class=\"jill\"></span>next()方法前半部分，然后从后往前执行中间件<span class=\"jill\"></span>next()方法的下半部分。这就是著名的洋葱模型。</span></div></div><div id=\"fZXgaR1NFHxSwJvXXqBaU5\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">可以简化为：</span></div></div><code-block id=\"x2yggnv9R2kzrbZXU6goi6\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre>app<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">use</span><span class=\"token punctuation\">(</span>globalMiddleware<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"route\"</span><span class=\"token punctuation\">,</span> middleware1<span class=\"token punctuation\">,</span> middlewar2<span class=\"token punctuation\">,</span> <span class=\"token spread operator\">...</span><span class=\"token punctuation\">,</span> mainMethod<span class=\"token punctuation\">)</span>\n</pre></div></code-block><div id=\"qADE4bJoUou3MRaocciyd7\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"3JsczvbY7yJn2sBjR5pwfz\" class=\"wolai-block\"><span class=\"inline-wrap\">Nest<span class=\"jill\"></span>中的<span class=\"jill\"></span>AOP</span></h3><div id=\"g8zGsCkUC3ikqn3NwfMQQh\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest 实现 AOP 的方式更多，一共有五种，包括 Middleware、Guard、Pipe、Interceptor、ExceptionFilter。</span></div></div><div id=\"aKWyXpt9WFzepz8n3ykCKt\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h4 id=\"pVfQ4QQEdppMfKeG6stair\" class=\"wolai-block\"><span class=\"inline-wrap\">中间件 Middleware</span></h4><div id=\"sQnUx46rHZMfTNymHwFZ1E\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest 的底层是<span class=\"jill\"></span>Express，所以也有中间件 Middleware 的概念，它和 Express 的 Middleware 很像，但不完全一样。</span></div></div><div id=\"brS8GS6yeu6TkBaZyx5iR1\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"93y7HbdpchqTEMDBqoQ4h4\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">举个例子，我们首先创建了一个中间件</span><span class=\"inline-wrap\"><code>AppMiddleware</code></span><span class=\"inline-wrap\"> ，:</span></div></div><code-block id=\"krSYNxGrVnJvcyn3CoqBmv\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Injectable</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">NestMiddleware</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Request</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Response</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppMiddleware</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">NestMiddleware</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">use</span><span class=\"token punctuation\">(</span>req<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Request</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">res</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Response</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">next</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'brefore'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'after'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"s5nqDt2oPxR8Lao3HdqtMv\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">然后在<span class=\"jill\"></span>AppModule<span class=\"jill\"></span>中使用这个中间件：</span></div></div><code-block id=\"kYTyCGxiBTauJPTvk3uHTb\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">AppMiddleware</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'. /app.middleware'</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">MiddlewareConsumer</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Module</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">NestModule</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">AppController</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'. /app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">AppService</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'. /app.service'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Module</span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">imports</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">controllers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">AppController</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">providers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">AppServicel</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">NestModule</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">configure</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">consumer</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">MiddlewareConsumer</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    consumer<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">apply</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">AppMiddleware</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forRoutes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"gFwXqGMN49Bk4kPZmVnHzy\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">实现 NestModule 接口的 </span><span class=\"inline-wrap\"><code>configure</code></span><span class=\"inline-wrap\"> 方法，在里面应用 AppMiddleware 到</span><span class=\"inline-wrap\"><b>所有路由</b></span><span class=\"inline-wrap\">。这里的</span><span class=\"inline-wrap\"><code>*</code></span><span class=\"inline-wrap\">也可以修改为</span><span class=\"inline-wrap\"><code>{ path: &#39;route&#39;, method: RequestMethod.GET }</code></span><span class=\"inline-wrap\">指定具体的路由应用具体的中间件。</span></div></div><div id=\"vpU3iB5GV523F7Fzk2HQh8\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">到这里与<span class=\"jill\"></span>Express<span class=\"jill\"></span>中间件还是蛮一样的，只是将中间件从</span><span class=\"inline-wrap\"><code>function</code></span><span class=\"inline-wrap\">变成了</span><span class=\"inline-wrap\"><code>class</code></span><span class=\"inline-wrap\">的形式 ；</span></div></div><div id=\"oEbzEWsp6BbfqW7LQ47tdf\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><aside id=\"iqmZTbNkeSm25vz28iouwy\" class=\"bg-cultured wolai-block\"><div data-symbol=\"📌\" class=\"icon\"></div><span class=\"inline-wrap\">Nest 为什么要把 Middleware 做成 class 有什么好处呢？</span></aside><div id=\"q4MhBmsh4UnRHcGgCMSXWx\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">好处就是可以使用</span><span class=\"inline-wrap\"><b>依赖注入</b></span><span class=\"inline-wrap\">。</span></div></div><div id=\"SkrfCihGPvBEHMT2zhfT6\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">我们通过 </span><span class=\"inline-wrap\"><code>@Inject</code></span><span class=\"inline-wrap\"> 或者构造器 将 AppService 注入到 middleware 里：</span></div></div><code-block id=\"Mb88VUGHYySXRre713nMr\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Injectable</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Inject</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">NestMiddleware</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Request</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Response</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppMiddleware</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">NestMiddleware</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token keyword\">private</span> readonly appService<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">AppService</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// @Inject (AppService)</span>\n  <span class=\"token comment\">// private readonly appService: AppService;</span>\n  \n  <span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">req</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Request</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">res</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Response</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">next</span><span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">Function</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// do some...</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">appService</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Request...'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"79339MdmLYni98Q5v4RuzP\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">当访问这个路由的时候，中间件里便会调用了 AppService<span class=\"jill\"></span>中的<span class=\"jill\"></span>method<span class=\"jill\"></span>方法。</span></div></div><div id=\"bUVPxv3aBn2PpF1Ws25Rew\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">举例一个场景：</span></div><div id=\"319myMkRg3DEQYsJnVeLdE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">假设我们有一个应用程序，需要对所有传入的请求进行安全检查，以防止被 XSS（跨站点脚本攻击）或 CSRF（跨站点请求伪造）等攻击。我们可以实现一个 </span><span class=\"inline-wrap\"><code>SecurityMiddleware</code></span><span class=\"inline-wrap\"> 中间件来处理这些安全问题，并将 </span><span class=\"inline-wrap\"><code>SecurityService</code></span><span class=\"inline-wrap\"> 通过依赖注入的方式注入到 </span><span class=\"inline-wrap\"><code>SecurityMiddleware 中</code></span><span class=\"inline-wrap\">，代码如下所示：</span></div></div><code-block id=\"dBH9CfV6UGVBTsdXuV1BT7\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Injectable</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">NestMiddleware</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Request</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Response</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">SecurityService</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./security.service'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SecurityMiddleware</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">NestMiddleware</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token keyword\">private</span> readonly securityService<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">SecurityService</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">use</span><span class=\"token punctuation\">(</span>req<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Request</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">res</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Response</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">next</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> isXss <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">securityService</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">checkXssAttack</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span><span class=\"token property-access\">body</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>isXss<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword control-flow\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Invalid request data'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> isCsrf <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">securityService</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">checkCsrfAttack</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span><span class=\"token property-access\">cookies</span><span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">.</span><span class=\"token property-access\">headers</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>isCsrf<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword control-flow\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">403</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'CSRF attack detected'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre></div></code-block></div><div id=\"dsz9K2ytgdkuW1uw7QQ99g\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">然后将 SecurityMiddleware 注册到应用程序中。代码如下所示：</span></div></div><div id=\"vafTpS1XcJdj3KgXhxymSB\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><code-block id=\"4E9fgFP8FqMGHbNFJdwqPd\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">MiddlewareConsumer</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Module</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">NestModule</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">AppController</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">AppService</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">SecurityMiddleware</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./security.middleware'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">SecurityService</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./security.service'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">imports</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">controllers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">AppController</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">providers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">AppService</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">SecurityService</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">NestModule</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">configure</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">consumer</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">MiddlewareConsumer</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    consumer<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">apply</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">SecurityMiddleware</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forRoutes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>` \n</pre></div></code-block><div id=\"ocv3qXAbgu8WHUCTZ7ReUS\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在上面的代码中，我们通过 </span><span class=\"inline-wrap\"><code>consumer.apply(SecurityMiddleware).forRoutes(&#39;*&#39;)</code></span><span class=\"inline-wrap\"> 将 SecurityMiddleware 注册到了应用程序的所有路由中。这样，在访问任何路由时，都会自动触发 SecurityMiddleware 进行安全检查。</span></div></div><div id=\"ane173KGSUBNpzTE8wLTka\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这就是 Nest 注入的依赖。</span></div></div><blockquote id=\"aVGvTEJvULnGf2kdNuQpPm\" class=\"wolai-block\"><span class=\"gray inline-wrap\">如果不需要注入依赖，那可以写函数形式的 middleware，这时候和 Express 的 middleware 就没啥区别了。</span></blockquote><div id=\"w5GdNxNLqoYySPLtrDxy9H\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">其他实现<span class=\"jill\"></span>AOP<span class=\"jill\"></span>的方式（ Guard、Pipe、Interceptor、ExceptionFilter）其实与中间件类似，只是实现不同的接口的不同方法：</span></div></div><details id=\"cwAURA6MrXmnTFtev1Krsa\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">Guard：实现<span class=\"jill\"></span>CanActivate 接口的<span class=\"jill\"></span>canActivate<span class=\"jill\"></span>方法，返回 true、false 来表示是否继续。</span></summary><div id=\"cQ6rDizwGedPgizgcw1qEg\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@UseGuards(XxxGuard)</code></span></div></div><div id=\"mx3yNUgTjPwkj44s3SCTD7\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_6.png\" style=\"width: 708px\"/></figure></div></details><details id=\"ty6bnFmU721NJXL5vEfAe9\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">Pipe：实现<span class=\"jill\"></span>PipeTransform<span class=\"jill\"></span>接口的<span class=\"jill\"></span>transform<span class=\"jill\"></span>方法，对传入<span class=\"jill\"></span>Controller<span class=\"jill\"></span>的参数做验证或转换，也可抛出异常。</span></summary><div id=\"rCh6UprP7WiiBDCFNzQYw3\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_7.png\" style=\"width: 714px\"/></figure></div></details><details id=\"9T9YPz9Qhe33mKNnjdbiw6\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">Interceptor：实现<span class=\"jill\"></span>NestInterceptor<span class=\"jill\"></span>接口的<span class=\"jill\"></span>intercepe<span class=\"jill\"></span>方法，可以对请求前后加入一些逻辑。</span></summary><div id=\"4MogBtmj4Asrt2aYK3f8xq\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_8.png\" style=\"width: 712px\"/></figure></div></details><details id=\"harMnRctrHcAqu626MQMHd\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">ExceptionFilter： 实现<span class=\"jill\"></span>ExceptionFilter<span class=\"jill\"></span>接口的<span class=\"jill\"></span>catch<span class=\"jill\"></span>方法，捕捉异常，返回友好信息给客户端。</span></summary><div id=\"9DyHG9JTqerrFhmvYocvJA\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_9.png\" style=\"width: 709px\"/></figure></div></details><div id=\"as1ffYuriThjPHSSEYQquQ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">但本质上都是通用逻辑的抽离封装。整个请求生命周期大概是：</span></div></div><div id=\"fh6NtkEgMgLu3NWmvsumVU\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"nz2KpTfHxbyAr4JUJXrjNW\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/image_10.png\" style=\"width: 100%\"/></figure></div><ul class=\"wolai-block\"><li id=\"3jLEiggq1DpvhAYjPAPdyd\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">首先，请求会被 middleware 处理，这一层可以复用 express 的中间件生态，也可以是 Nest 的那种 class 的 middleware，可以注入 provider。</span></li><li id=\"eD1GUTUVMyvawmCJHjdZjj\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">然后在具体的路由会经历 Guard 的处理，可以实现权限验证等功能。</span></li><li id=\"6SSzNF2Gj2vjPPTa59Vt47\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">之后是 Interceptor 可以在请求前后做一些处理</span></li><li id=\"cJ3YNBNycMw9UbJw39Q4GU\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">在到达 handler（controller） 之前，还会对参数用 Pipe 做下检验和转换。</span></li><li id=\"xqTc2Jsw2y6bP2LpPJaCLH\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">这个过程中不管是哪一层抛的异常，都会被 Exception Filter 处理下，返回给用户友好的响应信息。</span></li></ul><div id=\"t8DC7f5MAQwTuGYSDjCLud\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"7Cqkthj9YozrFCm5cVEvsU\" class=\"wolai-block\"><span class=\"inline-wrap\">跨平台</span></h2><div id=\"mLxJERKka3GB9kJ6hnpBLk\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">前面说，Nest 的底层平台是 Express，其实并不准确，Nest 并没有和 Express 耦合。</span></div></div><div id=\"iTyXDC7S2k6fj5Jxx5sZf2\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">它所有的上层代码都是基于一个抽象的接口的，而这个接口有 Express 和 Fastify 两种实现，默认是<span class=\"jill\"></span>Express，即使有一天，有一个新的 http 库取代了 express，对 nest 也没有什么影响，只要加一个新平台的适配器就可以了。</span></div></div><div id=\"u8RfABvNaUff8Nkt3DmD1m\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/image_11.png\" style=\"width: 100%\"/></figure></div><div id=\"aKPxCn4rmrTUQkx7ryVnHF\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_12.png\" style=\"width: 782px\"/></figure></div><div id=\"mbMkYrTEVoDAens2QC1uxd\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">不只是 http<span class=\"jill\"></span>服务 可以切换具体的底层平台，websocket 也是，可以切换 socket.io 和 ws：</span></div></div><div id=\"73Kk77P6vUM6fgEvwVf3Zk\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/image_13.png\" style=\"width: 100%\"/></figure></div><div id=\"eFCgnCtXFcEwjwWEWocTY7\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"KpZXyTD1asWtLo7LztRAt\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">另外，Nest 支持创建 HTTP 服务、WebSocket 服务，还有基于 TCP 通信的微服务。</span></div></div><div id=\"4n6Hgftnj19CUaEDvNZvxM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">你写的一些 Guard、Exception Filter、Interceptor、Pipe 也可以用在 Websocket 和微服务里，</span></div></div><div id=\"fcPLZz4DtTenowpmnAfRiE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest<span class=\"jill\"></span>提供了 </span><span class=\"inline-wrap\"><code>ArgumentsHost</code></span><span class=\"inline-wrap\"> 类，在切面里拿到它之后，可以判断出当前是什么上下文：</span></div></div><div id=\"8baGmiveCvxNZXiRbPYQ9H\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">比如：</span></div></div><code-block id=\"K16BkBaAY4SW8gKBGHZeh\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">ArgumentsHost</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Catch</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">ExceptionFilter</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Response</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">CustomerException</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./CustomerException'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Catch</span></span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">CustomerException</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomerFilter</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ExceptionFilter</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">catch</span><span class=\"token punctuation\">(</span>exception<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">CustomerException</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">host</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">ArgumentsHost</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'http'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> host<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">switchToHttp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token property-access\">getResponse</span><span class=\"token operator\">&lt;</span><span class=\"token maybe-class-name\">Response</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> request <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token property-access\">getRequest</span><span class=\"token operator\">&lt;</span><span class=\"token maybe-class-name\">Request</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      response\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">aaa</span><span class=\"token operator\">:</span> exception<span class=\"token punctuation\">.</span><span class=\"token property-access\">aaa</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">bbb</span><span class=\"token operator\">:</span> exception<span class=\"token punctuation\">.</span><span class=\"token property-access\">bbb</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'ws'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> host<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">switchToWs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'rpc'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> host<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">swtichToRpc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"826rziBDy275T4yXZmz7AW\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这样就实现了切面的跨上下文复用。</span></div></div><div id=\"4ZKKPVqX7jTapmPQzn2Jy9\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h1 id=\"dX21ftTSei5ZP4YtpDC977\" class=\"wolai-block\"><span class=\"inline-wrap\">总结</span></h1><div id=\"LBT8MH1rkr2zSzs8EYFT2\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest 是在 express 之上封装的一层，提供了很多架构的能力：</span></div></div><ul class=\"wolai-block\"><li id=\"e3Aumfx8zqZjgJF5xLQkMD\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><b>IOC</b></span><span class=\"inline-wrap\">：自己实现了模块机制，可以导入导出 provider，实现自动依赖注入，简化了对象的创建</span></li><li id=\"8y9hbYMJpBAUfowDAjnLp\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><b>AOP</b></span><span class=\"inline-wrap\">：抽象了 Middleware、Guard、Interceptor、Pipe、Exception Filter 这 5 种切面，可以通过切面抽离一些通用逻辑，然后动态添加到某个流程中。</span></li><li id=\"7v4YvPtRoGfc9mqtMiEdgh\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">跨平台：Nest 基于 ts 的 interface 实现了不和任何底层平台耦合，http 可以切换 express 和 fastify，websocket 可以切换 socket.io 和 ws。而且 5 种切面也实现了可以跨 http、websocket、微服务来复用。</span></li></ul><div id=\"egkP56EnesGm3UpXu4ACsX\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">有了这三种架构特性，代码自然会变得松散耦合、易于扩展，易于维护。</span></div></div><div id=\"pxyotxac3Chfd5xSTWEv6g\" class=\"wolai-block wolai-text\"><div></div></div></article><footer></footer></body></html>","source":"html/nest/nest的框架特性/Nest的框架特性.html","raw":"<!DOCTYPE html>\n<html lang=\"zh-Hans-CN\"><head><meta charset=\"utf-8\"/><meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/modern-norm.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/prism.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/katex.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/wolai.css\"/><title>Nest的框架特性 - wolai 笔记</title><link rel=\"shortcut icon\"></link></head><body class=\"full-width\"><header><div class=\"image\"></div><div class=\"title\"><div class=\"banner\"><div class=\"icon\"></div></div><div data-title=\"Nest的框架特性\" class=\"main-title\"></div></div></header><article><h1 id=\"bA2XbYDhCHuAZe3Z5FsRSk\" class=\"wolai-block\"><span class=\"inline-wrap\">Nest<span class=\"jill\"></span>的定位</span></h1><div id=\"2EAeJc9vhsmukzzQErCkoe\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">上一次介绍了<span class=\"jill\"></span>nest<span class=\"jill\"></span>的一些基础概念和入门用法，这次再聊聊<span class=\"jill\"></span>nest<span class=\"jill\"></span>作为目前最流行的<span class=\"jill\"></span>node<span class=\"jill\"></span>企业级开发框架，它有什么特点。</span></div></div><div id=\"oLuxjdYtoC2inP25ciHoeK\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"v19gdsDPdX4CZ3PHV6PT53\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">开发 node 应用有 3 个层次：</span></div></div><ul class=\"wolai-block\"><li id=\"u8xna1ZG8WF5LPNy9pc6KJ\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">直接用 http、https 包的 createServer api</span></li><li id=\"gmvYFuqedgPUCr9qggErne\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">使用 express、koa 这种处理请求响应的库</span></li><li id=\"ig7Nxk3CSqC64Mpf8K4guP\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">使用 nest、egg、midway 这类企业级框架</span></li></ul><div id=\"55zWqZWL662Z2SCfvSdAqZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"fP5iKA3sBchBuMkqBVDCrw\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">1、直接用 createServer api 创建服务适合特别简单的场景，比如工具提供的开发服务。</span></div></div><div id=\"qgQfK5vCwtbJRsQqXC8qdf\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">2、express、koa 这种库并没有约束代码写法，开发者可以随意编写，所以不适合开发大型项目。</span></div></div><blockquote id=\"ukP8VDYV3xxwbsw9R4vYiG\" class=\"wolai-block\"><span class=\"gray inline-wrap\">Express 理念是为 HTTP 服务器提供小型、强大的工具，使其成为单页应用程序、网站、混合或公共 HTTP API 的绝佳解决方案。而类似于<span class=\"jill\"></span>express<span class=\"jill\"></span>的还有其他，例如<span class=\"jill\"></span>Koa、Hapi<span class=\"jill\"></span>等。</span></blockquote><div id=\"eDUqBkJ8E7WXdvYLzcwiCz\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">3、大型项目会用企业级开发框架，有一定的代码约束，对很多功能都有开箱即用的解决方案的框架。</span></div></div><div id=\"NuyommMexGm2h4XPGUkAf\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"hsogJ2xjAQi3Xu6qG5n5JY\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">nest<span class=\"jill\"></span>作为<span class=\"jill\"></span>express<span class=\"jill\"></span>的上层框架，目前已经有个<span class=\"jill\"></span>57.3k Star，仅次于<span class=\"jill\"></span>express 61.1k Star。虽然可以只用<span class=\"jill\"></span>express<span class=\"jill\"></span>来开发项目。同类的上层框架也有<span class=\"jill\"></span>egg、midway。</span></div></div><div id=\"kBfKticUuLZK4TvC3R2miL\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">egg 的 ts 支持不好，在当下 ts 这么主流的情况下。（听说阿里 egg 团队也被打包裁了）</span></div></div><div id=\"wZUfGm5Rn9JamHfKLEWB37\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image.png\" style=\"width: 631px\"/></figure></div><div id=\"tyPeu8kXHUfZbDbK958KaC\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">而<span class=\"jill\"></span>midway<span class=\"jill\"></span>的<span class=\"jill\"></span>Star<span class=\"jill\"></span>仅有<span class=\"jill\"></span>6.7k，少了一个数量级，很难保证不会步<span class=\"jill\"></span>egg<span class=\"jill\"></span>的路。</span></div></div><div id=\"8y7eip4DmemdVkP1Q3VtRX\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_1.png\" style=\"width: 610px\"/></figure></div><div id=\"tUcqA7VWFrMW3KyTctGEoM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">综上来说，Nest<span class=\"jill\"></span>目前对于企业级项目来说，是首选的，也几乎是唯一的。</span></div></div><div id=\"mcPv9rjuhDTTaVq4v2S4hA\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h1 id=\"3PdFGDs8P9t2oieAE9Wpv1\" class=\"wolai-block\"><span class=\"inline-wrap\">Nest<span class=\"jill\"></span>的设计</span></h1><div id=\"uxyiYZgCp9BihkQQL7xzzZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">nest<span class=\"jill\"></span>的底层是</span><span class=\"inline-wrap\"><b>基于但不限于</b></span><span class=\"inline-wrap\">express<span class=\"jill\"></span>的，它封装了<span class=\"jill\"></span>IOC、AOP<span class=\"jill\"></span>等架构特性；而这些特性都依赖于<span class=\"jill\"></span>nest<span class=\"jill\"></span>最主要的特性：</span><span class=\"inline-wrap\"><b>模块机制</b></span><span class=\"inline-wrap\">。</span></div></div><div id=\"xjREoEVvpvWjY8rG5HBJZM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">看看<span class=\"jill\"></span>es module<span class=\"jill\"></span>的写法：</span></div></div><code-block id=\"4hW2zxFogiSGeJmuoF93AT\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> a<span class=\"token punctuation\">,</span> b <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> c <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">export</span> <span class=\"token exports\"><span class=\"token punctuation\">{</span> a<span class=\"token punctuation\">,</span> c <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">;</span></pre></div></code-block><div id=\"kjikcn2GbdqagKMw2QzaxZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">而<span class=\"jill\"></span>nest<span class=\"jill\"></span>的<span class=\"jill\"></span>module<span class=\"jill\"></span>写法：</span></div></div><code-block id=\"dLvBYxYePAut1ccV5X7GX4\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Module</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> aModule <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./a.module'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">BService</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./b.service'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">imports</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>aModule<span class=\"token punctuation\">]</span>\n  <span class=\"token literal-property property\">providers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">BService</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">exports</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">BService</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"rbMSZDHM13gPrV8QWrztb1\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">模块编写的逻辑上大同小异，都是<span class=\"jill\"></span>import<span class=\"jill\"></span>外部的值，可以<span class=\"jill\"></span>export<span class=\"jill\"></span>内部的值，而<span class=\"jill\"></span>nest<span class=\"jill\"></span>的模块机制是可以实现</span><span class=\"inline-wrap\"><b>自动注入依赖</b></span><span class=\"inline-wrap\">的，也就是 DI（Denpendency Injection）。</span></div></div><div id=\"kNmkDqZQYhmsJhMz4XtmWE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"o6V16jXHgxjwEuopdnPhkH\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">怎么理解呢，在后端系统中，会有很多对象：</span></div></div><ul class=\"wolai-block\"><li id=\"wZmjK2DwFC7NWgowPJ9xDT\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">Controller 对象：接收 http 请求，调用 Service，返回响应</span></li><li id=\"eUMHQMePgQFvm1pcG1Vxhf\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">Service 对象：实现业务逻辑</span></li><li id=\"kPcHKgLLtBhraQJdQ9KC5o\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">Repository 对象：实现对数据库的增删改查</span></li></ul><div id=\"dVbSRW41QMf6UVDcQhQnBE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">此外，还有数据库链接对象 DataSource，配置对象 Config 等等。</span></div></div><div id=\"fttjW2orykXHWY9DQ2usrn\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这些对象有着错综复杂的关系：</span></div></div><aside id=\"oD6pq5nMB67KTezArT8EbK\" class=\"bg-cultured wolai-block\"><div data-symbol=\"📌\" class=\"icon\"></div><span class=\"inline-wrap\">Controller 依赖了 Service 实现业务逻辑，Service 依赖了 Repository 来做增删改查，Repository 依赖 DataSource 来建立连接，DataSource 又需要从 Config 对象拿到用户名密码等信息。这就导致了创建这些对象是很复杂的，你要理清它们之间的依赖关系，哪个先创建哪个后创建。</span></aside><div id=\"mJJXD7M2HX1JcLnr78Wj9z\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">比如这样：</span></div><code-block id=\"5GdXVwHnDYM2oEuQKQakkp\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">password</span><span class=\"token operator\">:</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> dataSource <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataSource</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> repository <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Repository</span><span class=\"token punctuation\">(</span>dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> service <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Service</span><span class=\"token punctuation\">(</span>repository<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> controller <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Controller</span><span class=\"token punctuation\">(</span>service<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block></div><div id=\"iuaiFd2bgdKBy866PsR1AK\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">要经过一系列的初始化之后才可以使用 Controller 对象。</span></div></div><div id=\"u77z8Qe3EJb6QiVycuXfkV\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">而且像 config、dataSource、repository、service、controller 等这些对象不需要每次都 new 一个新的，一直用一个就可以，也就是保持</span><span class=\"inline-wrap\"><b>单例</b></span><span class=\"inline-wrap\">。</span></div></div><div id=\"riDSpGzpqeENt9pswZKrr9\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"sosGqXqUQqjSKb8quJs8Pz\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在应用初始化的时候，需要理清依赖的先后关系，创建一大堆对象组合起来，还要保证不要多次 new，这是一个后端系统都有的痛点问题。</span></div></div><div id=\"aLRwWVv9nFBq2ZCbBJyGH7\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Java 的 Spring 就实现了 IOC，Nest 也同样实现了。</span></div></div><div id=\"wansCxdgVzALuiYGjFvEA\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"5UBeo4aS2uoo4e3gsJmwdP\" class=\"wolai-block\"><span class=\"inline-wrap\">控制反转</span></h2><div id=\"qyhoJBtKnCmifVet38LMH4\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">自己手动创建和组装对象很麻烦，因此<span class=\"jill\"></span>nest<span class=\"jill\"></span>帮我们做了这一点，使用者只需要根据<span class=\"jill\"></span>nest<span class=\"jill\"></span>提供的标准，声明好哪些依赖关系，便可以完成</span><span class=\"inline-wrap\"><b>自动化对象创建和组装</b></span><span class=\"inline-wrap\">。从主动创建依赖到被动等待依赖注入，这就是 Inverse Of Control，反转控制。</span></div></div><div id=\"ji5DY7exPBqiL44o7UXfek\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"x2kh439x5pFaqqkBZR33A7\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">还是简单看一下代码：</span></div></div><code-block id=\"7zdAgvFDnFFJpiH8mkuLnp\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token comment\">// src/main.ts文件</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">NestFactory</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">AppModule</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./app.module'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token maybe-class-name\">NestFactory</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">create</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">AppModule</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">// src/app.module.ts文件</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Module</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">AppController</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">AppService</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span> \n\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n <span class=\"token literal-property property\">imports</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n <span class=\"token literal-property property\">controllers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">AppController</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n <span class=\"token literal-property property\">providers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">AppService</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n \n \n <span class=\"token comment\">// src/app.service.ts文件</span>\n <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Injectable</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n @<span class=\"token function\"><span class=\"token maybe-class-name\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n <span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppService</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> string <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword control-flow\">return</span> <span class=\"token string\">'Hello World!'</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span>\n \n \n <span class=\"token comment\">// src/app.controller.ts文件</span>\n <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Controller</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Get</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">AppService</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n\n @<span class=\"token function\"><span class=\"token maybe-class-name\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n <span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppController</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token keyword\">private</span> readonly appService<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">AppService</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n   @<span class=\"token function\"><span class=\"token maybe-class-name\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n   <span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> string <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">appService</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span>\n</pre></div></code-block><div id=\"dtzoLTTecEzcdZZgNGxA6F\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">现在访问 </span><span class=\"inline-wrap\"><code>localhost:3000</code></span><span class=\"inline-wrap\"> 就会执行这个 AppController 类中的 </span><span class=\"inline-wrap\"><code>getHello</code></span><span class=\"inline-wrap\"> 方法了。我们来看 app.controller.ts 文件。可以看到构造函数的参数签名中第一个参数 appService 是 AppService 的一个实例。</span></div><div id=\"nV1CkYmCFeE8Hp4Pd9Ej2r\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>constructor(private readonly appService: AppService){}</code></span></div></div></div><div id=\"bgmoCkDxzmHaDovsiF5YGu\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">但是在代码里并有没有看到实例化这个 AppService 的地方。这里其实是把创建这个实例对象的工作交给了<span class=\"jill\"></span>nest<span class=\"jill\"></span>框架，而不是 AppController 自己来创建这个对象，这就是所谓的</span><span class=\"inline-wrap\"><code>控制反转</code></span><span class=\"inline-wrap\">。而把创建好的 AppService 实例对象作为 AppController 实例化时的参数传给构造器就是</span><span class=\"inline-wrap\"><code>依赖注入</code></span><span class=\"inline-wrap\">了。</span></div></div><div id=\"2fDT5A8bBsT2KFf72Rcf5Y\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"3GjcC2HYdCxgLWWGPTBjMv\" class=\"wolai-block\"><span class=\"inline-wrap\">面向切面</span></h2><div id=\"dFht1Z4LUXYGz1VdAUW2vg\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">后端框架基本都是 MVC 的架构。MVC 是 Model View Controller 的简写。</span></div></div><div id=\"gMAPnLDCRQZqi14FYU6yfM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">MVC 架构下，请求会先发送给 Controller，由它调度 Model 层的 Service 来完成业务逻辑，然后返回对应的 View。</span></div></div><div id=\"m2LbcbaZD9VKFeDKFotJt8\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/image_2.png\" style=\"width: 323px\"/></figure></div><div id=\"oFRBAv2FKzJqeeY7BUqxrY\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"snQZktVCwfPXALdD3KQZM3\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">通常一个请求过来，可能会经过 Controller（控制器）、Service（服务）、Repository（数据库访问） ：</span></div></div><div id=\"n9ceDUNpWAyfFXWaSWf9Ns\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/image_3.png\" style=\"width: 287px\"/></figure></div><div id=\"geQMz9x42E7rSJxTNCZHVR\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">如果想在这个调用链路里加入一些通用逻辑呢？比如日志记录、权限控制、异常处理等。容易想到的是直接改造 Controller 层代码，加入这段逻辑。</span></div></div><div id=\"h8j4nbkQEeqzAj9TtDy5AL\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">可以是可以，但是不优雅，因为这些通用的逻辑侵入到了业务逻辑里面，形成了耦合。那如何进行不侵入性的操作呢？</span></div></div><div id=\"eYyPRLuw7uz6kS8p1K6Bx5\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">是不是可以在调用 Controller 前后加入一个执行通用逻辑的阶段？</span></div></div><div id=\"4CBKnojG9LQv2aEWYVXjq9\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/image_4.png\" style=\"width: 412px\"/></figure></div><div id=\"qKhwqHmMUUgXnURkNSKBQc\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这样的横向扩展点就叫做切面，这种非侵入式的加入一些切面逻辑的编程方式就叫做 AOP （面向切面编程）。</span></div></div><aside id=\"iyxcwfctwupDZiSPYcPvyJ\" class=\"bg-cultured wolai-block\"><div data-symbol=\"📌\" class=\"icon\"></div><span class=\"inline-wrap\">AOP 主要的思想是将我们对于业务逻辑无关的一些操作，比如日志记录、性能统计、安全控制、异常处理、错误上报等，将这些操作从业务逻辑中剥离出来，将它们放在一些独立的方法中，然后如果我们对这些操作做修改的时候就可以不用影响到业务逻辑相关的代码。它主要体现了我们对代码的低耦合性的追求。</span></aside><div id=\"5qRYX3xkNAFLFzKxrEfEDV\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"tik6TfN5zWdMWnCFLtN8FH\" class=\"wolai-block\"><span class=\"inline-wrap\">Express<span class=\"jill\"></span>中的<span class=\"jill\"></span>AOP</span></h3><div id=\"drnUWLTbp67nNyf2ZbPNZD\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在说<span class=\"jill\"></span>Nest<span class=\"jill\"></span>之前，先来看看<span class=\"jill\"></span>Express<span class=\"jill\"></span>中的中间件，其洋葱模型也是一种 AOP 的实现，因为你可以透明的在外面包一层，加入一些逻辑，内层感知不到。</span></div></div><div id=\"chxh8VDWSvcWY5CJoyzZEm\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/image_5.png\" style=\"width: 418px\"/></figure></div><div id=\"qHpcNwX86Z54bDJGko9dAR\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在中间件函数中，可以执行以下任何任务</span></div></div><ul class=\"wolai-block\"><li id=\"eTPyjixVjwt6NyE754fiUj\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">执行任何代码</span></li><li id=\"gimMBiKXhKYwraQHvHTGL3\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">修改 </span><span class=\"inline-wrap\"><code>request</code></span><span class=\"inline-wrap\"> 或 </span><span class=\"inline-wrap\"><code>response</code></span><span class=\"inline-wrap\"> 响应对象【同一个生命周期】</span></li><li id=\"k849TgVE2VfQaMM4HCWNce\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">结束请求响应周期</span></li><li id=\"uet47fxEotBYacLY7tkbjj\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">调用下一个中间件</span></li></ul><div id=\"592UL1AzoonKNQTzDwRukQ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">简单看看<span class=\"jill\"></span>Express<span class=\"jill\"></span>的中间件的使用：</span></div></div><code-block id=\"55d8AGTu2KrcnTh3CDycMT\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token comment\">// 洋葱模型</span>\n<span class=\"token comment\">// 全局使用中间件</span>\napp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">use</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'全局中间件 start'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// 调用下一个中间件</span>\n  <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'全局中间件 end'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 单独中间件</span>\napp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"单独中间件 start\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"单独中间件 end\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"处理请求 start\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"get method!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"处理请求 end\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 运行结果</span>\n<span class=\"token comment\">// 全局中间件 start</span>\n<span class=\"token comment\">// 单独中间件 start</span>\n<span class=\"token comment\">// 处理请求 start</span>\n<span class=\"token comment\">// 处理请求 end</span>\n<span class=\"token comment\">// 单独中间件 end</span>\n<span class=\"token comment\">// 全局中间件 end</span>\n</pre></div></code-block><div id=\"qkATGmmtjSiHW2m3RxXaWs\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">可以看到它的执行机制，以<span class=\"jill\"></span>next()方法为分水岭，先执行所有中间件的<span class=\"jill\"></span>next()方法前半部分，然后从后往前执行中间件<span class=\"jill\"></span>next()方法的下半部分。这就是著名的洋葱模型。</span></div></div><div id=\"fZXgaR1NFHxSwJvXXqBaU5\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">可以简化为：</span></div></div><code-block id=\"x2yggnv9R2kzrbZXU6goi6\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre>app<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">use</span><span class=\"token punctuation\">(</span>globalMiddleware<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"route\"</span><span class=\"token punctuation\">,</span> middleware1<span class=\"token punctuation\">,</span> middlewar2<span class=\"token punctuation\">,</span> <span class=\"token spread operator\">...</span><span class=\"token punctuation\">,</span> mainMethod<span class=\"token punctuation\">)</span>\n</pre></div></code-block><div id=\"qADE4bJoUou3MRaocciyd7\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"3JsczvbY7yJn2sBjR5pwfz\" class=\"wolai-block\"><span class=\"inline-wrap\">Nest<span class=\"jill\"></span>中的<span class=\"jill\"></span>AOP</span></h3><div id=\"g8zGsCkUC3ikqn3NwfMQQh\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest 实现 AOP 的方式更多，一共有五种，包括 Middleware、Guard、Pipe、Interceptor、ExceptionFilter。</span></div></div><div id=\"aKWyXpt9WFzepz8n3ykCKt\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h4 id=\"pVfQ4QQEdppMfKeG6stair\" class=\"wolai-block\"><span class=\"inline-wrap\">中间件 Middleware</span></h4><div id=\"sQnUx46rHZMfTNymHwFZ1E\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest 的底层是<span class=\"jill\"></span>Express，所以也有中间件 Middleware 的概念，它和 Express 的 Middleware 很像，但不完全一样。</span></div></div><div id=\"brS8GS6yeu6TkBaZyx5iR1\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"93y7HbdpchqTEMDBqoQ4h4\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">举个例子，我们首先创建了一个中间件</span><span class=\"inline-wrap\"><code>AppMiddleware</code></span><span class=\"inline-wrap\"> ，:</span></div></div><code-block id=\"krSYNxGrVnJvcyn3CoqBmv\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Injectable</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">NestMiddleware</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Request</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Response</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppMiddleware</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">NestMiddleware</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">use</span><span class=\"token punctuation\">(</span>req<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Request</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">res</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Response</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">next</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'brefore'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'after'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"s5nqDt2oPxR8Lao3HdqtMv\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">然后在<span class=\"jill\"></span>AppModule<span class=\"jill\"></span>中使用这个中间件：</span></div></div><code-block id=\"kYTyCGxiBTauJPTvk3uHTb\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">AppMiddleware</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'. /app.middleware'</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">MiddlewareConsumer</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Module</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">NestModule</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">AppController</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'. /app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">AppService</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'. /app.service'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Module</span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">imports</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">controllers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">AppController</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">providers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">AppServicel</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">NestModule</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">configure</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">consumer</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">MiddlewareConsumer</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    consumer<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">apply</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">AppMiddleware</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forRoutes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"gFwXqGMN49Bk4kPZmVnHzy\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">实现 NestModule 接口的 </span><span class=\"inline-wrap\"><code>configure</code></span><span class=\"inline-wrap\"> 方法，在里面应用 AppMiddleware 到</span><span class=\"inline-wrap\"><b>所有路由</b></span><span class=\"inline-wrap\">。这里的</span><span class=\"inline-wrap\"><code>*</code></span><span class=\"inline-wrap\">也可以修改为</span><span class=\"inline-wrap\"><code>{ path: &#39;route&#39;, method: RequestMethod.GET }</code></span><span class=\"inline-wrap\">指定具体的路由应用具体的中间件。</span></div></div><div id=\"vpU3iB5GV523F7Fzk2HQh8\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">到这里与<span class=\"jill\"></span>Express<span class=\"jill\"></span>中间件还是蛮一样的，只是将中间件从</span><span class=\"inline-wrap\"><code>function</code></span><span class=\"inline-wrap\">变成了</span><span class=\"inline-wrap\"><code>class</code></span><span class=\"inline-wrap\">的形式 ；</span></div></div><div id=\"oEbzEWsp6BbfqW7LQ47tdf\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><aside id=\"iqmZTbNkeSm25vz28iouwy\" class=\"bg-cultured wolai-block\"><div data-symbol=\"📌\" class=\"icon\"></div><span class=\"inline-wrap\">Nest 为什么要把 Middleware 做成 class 有什么好处呢？</span></aside><div id=\"q4MhBmsh4UnRHcGgCMSXWx\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">好处就是可以使用</span><span class=\"inline-wrap\"><b>依赖注入</b></span><span class=\"inline-wrap\">。</span></div></div><div id=\"SkrfCihGPvBEHMT2zhfT6\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">我们通过 </span><span class=\"inline-wrap\"><code>@Inject</code></span><span class=\"inline-wrap\"> 或者构造器 将 AppService 注入到 middleware 里：</span></div></div><code-block id=\"Mb88VUGHYySXRre713nMr\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Injectable</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Inject</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">NestMiddleware</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Request</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Response</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppMiddleware</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">NestMiddleware</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token keyword\">private</span> readonly appService<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">AppService</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// @Inject (AppService)</span>\n  <span class=\"token comment\">// private readonly appService: AppService;</span>\n  \n  <span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">req</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Request</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">res</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Response</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">next</span><span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">Function</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// do some...</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">appService</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Request...'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"79339MdmLYni98Q5v4RuzP\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">当访问这个路由的时候，中间件里便会调用了 AppService<span class=\"jill\"></span>中的<span class=\"jill\"></span>method<span class=\"jill\"></span>方法。</span></div></div><div id=\"bUVPxv3aBn2PpF1Ws25Rew\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">举例一个场景：</span></div><div id=\"319myMkRg3DEQYsJnVeLdE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">假设我们有一个应用程序，需要对所有传入的请求进行安全检查，以防止被 XSS（跨站点脚本攻击）或 CSRF（跨站点请求伪造）等攻击。我们可以实现一个 </span><span class=\"inline-wrap\"><code>SecurityMiddleware</code></span><span class=\"inline-wrap\"> 中间件来处理这些安全问题，并将 </span><span class=\"inline-wrap\"><code>SecurityService</code></span><span class=\"inline-wrap\"> 通过依赖注入的方式注入到 </span><span class=\"inline-wrap\"><code>SecurityMiddleware 中</code></span><span class=\"inline-wrap\">，代码如下所示：</span></div></div><code-block id=\"dBH9CfV6UGVBTsdXuV1BT7\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Injectable</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">NestMiddleware</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Request</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Response</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">SecurityService</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./security.service'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SecurityMiddleware</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">NestMiddleware</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token keyword\">private</span> readonly securityService<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">SecurityService</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">use</span><span class=\"token punctuation\">(</span>req<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Request</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">res</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Response</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">next</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> isXss <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">securityService</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">checkXssAttack</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span><span class=\"token property-access\">body</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>isXss<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword control-flow\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Invalid request data'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> isCsrf <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">securityService</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">checkCsrfAttack</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span><span class=\"token property-access\">cookies</span><span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">.</span><span class=\"token property-access\">headers</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>isCsrf<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword control-flow\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">403</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'CSRF attack detected'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre></div></code-block></div><div id=\"dsz9K2ytgdkuW1uw7QQ99g\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">然后将 SecurityMiddleware 注册到应用程序中。代码如下所示：</span></div></div><div id=\"vafTpS1XcJdj3KgXhxymSB\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><code-block id=\"4E9fgFP8FqMGHbNFJdwqPd\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">MiddlewareConsumer</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Module</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">NestModule</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">AppController</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">AppService</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">SecurityMiddleware</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./security.middleware'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">SecurityService</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./security.service'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">imports</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">controllers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">AppController</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">providers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">AppService</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">SecurityService</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">NestModule</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">configure</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">consumer</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">MiddlewareConsumer</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    consumer<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">apply</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">SecurityMiddleware</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forRoutes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>` \n</pre></div></code-block><div id=\"ocv3qXAbgu8WHUCTZ7ReUS\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在上面的代码中，我们通过 </span><span class=\"inline-wrap\"><code>consumer.apply(SecurityMiddleware).forRoutes(&#39;*&#39;)</code></span><span class=\"inline-wrap\"> 将 SecurityMiddleware 注册到了应用程序的所有路由中。这样，在访问任何路由时，都会自动触发 SecurityMiddleware 进行安全检查。</span></div></div><div id=\"ane173KGSUBNpzTE8wLTka\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这就是 Nest 注入的依赖。</span></div></div><blockquote id=\"aVGvTEJvULnGf2kdNuQpPm\" class=\"wolai-block\"><span class=\"gray inline-wrap\">如果不需要注入依赖，那可以写函数形式的 middleware，这时候和 Express 的 middleware 就没啥区别了。</span></blockquote><div id=\"w5GdNxNLqoYySPLtrDxy9H\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">其他实现<span class=\"jill\"></span>AOP<span class=\"jill\"></span>的方式（ Guard、Pipe、Interceptor、ExceptionFilter）其实与中间件类似，只是实现不同的接口的不同方法：</span></div></div><details id=\"cwAURA6MrXmnTFtev1Krsa\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">Guard：实现<span class=\"jill\"></span>CanActivate 接口的<span class=\"jill\"></span>canActivate<span class=\"jill\"></span>方法，返回 true、false 来表示是否继续。</span></summary><div id=\"cQ6rDizwGedPgizgcw1qEg\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@UseGuards(XxxGuard)</code></span></div></div><div id=\"mx3yNUgTjPwkj44s3SCTD7\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_6.png\" style=\"width: 708px\"/></figure></div></details><details id=\"ty6bnFmU721NJXL5vEfAe9\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">Pipe：实现<span class=\"jill\"></span>PipeTransform<span class=\"jill\"></span>接口的<span class=\"jill\"></span>transform<span class=\"jill\"></span>方法，对传入<span class=\"jill\"></span>Controller<span class=\"jill\"></span>的参数做验证或转换，也可抛出异常。</span></summary><div id=\"rCh6UprP7WiiBDCFNzQYw3\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_7.png\" style=\"width: 714px\"/></figure></div></details><details id=\"9T9YPz9Qhe33mKNnjdbiw6\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">Interceptor：实现<span class=\"jill\"></span>NestInterceptor<span class=\"jill\"></span>接口的<span class=\"jill\"></span>intercepe<span class=\"jill\"></span>方法，可以对请求前后加入一些逻辑。</span></summary><div id=\"4MogBtmj4Asrt2aYK3f8xq\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_8.png\" style=\"width: 712px\"/></figure></div></details><details id=\"harMnRctrHcAqu626MQMHd\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">ExceptionFilter： 实现<span class=\"jill\"></span>ExceptionFilter<span class=\"jill\"></span>接口的<span class=\"jill\"></span>catch<span class=\"jill\"></span>方法，捕捉异常，返回友好信息给客户端。</span></summary><div id=\"9DyHG9JTqerrFhmvYocvJA\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_9.png\" style=\"width: 709px\"/></figure></div></details><div id=\"as1ffYuriThjPHSSEYQquQ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">但本质上都是通用逻辑的抽离封装。整个请求生命周期大概是：</span></div></div><div id=\"fh6NtkEgMgLu3NWmvsumVU\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"nz2KpTfHxbyAr4JUJXrjNW\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/image_10.png\" style=\"width: 100%\"/></figure></div><ul class=\"wolai-block\"><li id=\"3jLEiggq1DpvhAYjPAPdyd\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">首先，请求会被 middleware 处理，这一层可以复用 express 的中间件生态，也可以是 Nest 的那种 class 的 middleware，可以注入 provider。</span></li><li id=\"eD1GUTUVMyvawmCJHjdZjj\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">然后在具体的路由会经历 Guard 的处理，可以实现权限验证等功能。</span></li><li id=\"6SSzNF2Gj2vjPPTa59Vt47\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">之后是 Interceptor 可以在请求前后做一些处理</span></li><li id=\"cJ3YNBNycMw9UbJw39Q4GU\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">在到达 handler（controller） 之前，还会对参数用 Pipe 做下检验和转换。</span></li><li id=\"xqTc2Jsw2y6bP2LpPJaCLH\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">这个过程中不管是哪一层抛的异常，都会被 Exception Filter 处理下，返回给用户友好的响应信息。</span></li></ul><div id=\"t8DC7f5MAQwTuGYSDjCLud\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"7Cqkthj9YozrFCm5cVEvsU\" class=\"wolai-block\"><span class=\"inline-wrap\">跨平台</span></h2><div id=\"mLxJERKka3GB9kJ6hnpBLk\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">前面说，Nest 的底层平台是 Express，其实并不准确，Nest 并没有和 Express 耦合。</span></div></div><div id=\"iTyXDC7S2k6fj5Jxx5sZf2\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">它所有的上层代码都是基于一个抽象的接口的，而这个接口有 Express 和 Fastify 两种实现，默认是<span class=\"jill\"></span>Express，即使有一天，有一个新的 http 库取代了 express，对 nest 也没有什么影响，只要加一个新平台的适配器就可以了。</span></div></div><div id=\"u8RfABvNaUff8Nkt3DmD1m\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/image_11.png\" style=\"width: 100%\"/></figure></div><div id=\"aKPxCn4rmrTUQkx7ryVnHF\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_12.png\" style=\"width: 782px\"/></figure></div><div id=\"mbMkYrTEVoDAens2QC1uxd\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">不只是 http<span class=\"jill\"></span>服务 可以切换具体的底层平台，websocket 也是，可以切换 socket.io 和 ws：</span></div></div><div id=\"73Kk77P6vUM6fgEvwVf3Zk\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/image_13.png\" style=\"width: 100%\"/></figure></div><div id=\"eFCgnCtXFcEwjwWEWocTY7\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"KpZXyTD1asWtLo7LztRAt\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">另外，Nest 支持创建 HTTP 服务、WebSocket 服务，还有基于 TCP 通信的微服务。</span></div></div><div id=\"4n6Hgftnj19CUaEDvNZvxM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">你写的一些 Guard、Exception Filter、Interceptor、Pipe 也可以用在 Websocket 和微服务里，</span></div></div><div id=\"fcPLZz4DtTenowpmnAfRiE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest<span class=\"jill\"></span>提供了 </span><span class=\"inline-wrap\"><code>ArgumentsHost</code></span><span class=\"inline-wrap\"> 类，在切面里拿到它之后，可以判断出当前是什么上下文：</span></div></div><div id=\"8baGmiveCvxNZXiRbPYQ9H\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">比如：</span></div></div><code-block id=\"K16BkBaAY4SW8gKBGHZeh\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">ArgumentsHost</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Catch</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">ExceptionFilter</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Response</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">CustomerException</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./CustomerException'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Catch</span></span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">CustomerException</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomerFilter</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ExceptionFilter</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">catch</span><span class=\"token punctuation\">(</span>exception<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">CustomerException</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">host</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">ArgumentsHost</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'http'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> host<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">switchToHttp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token property-access\">getResponse</span><span class=\"token operator\">&lt;</span><span class=\"token maybe-class-name\">Response</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> request <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token property-access\">getRequest</span><span class=\"token operator\">&lt;</span><span class=\"token maybe-class-name\">Request</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      response\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">aaa</span><span class=\"token operator\">:</span> exception<span class=\"token punctuation\">.</span><span class=\"token property-access\">aaa</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">bbb</span><span class=\"token operator\">:</span> exception<span class=\"token punctuation\">.</span><span class=\"token property-access\">bbb</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'ws'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> host<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">switchToWs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'rpc'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> host<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">swtichToRpc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"826rziBDy275T4yXZmz7AW\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这样就实现了切面的跨上下文复用。</span></div></div><div id=\"4ZKKPVqX7jTapmPQzn2Jy9\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h1 id=\"dX21ftTSei5ZP4YtpDC977\" class=\"wolai-block\"><span class=\"inline-wrap\">总结</span></h1><div id=\"LBT8MH1rkr2zSzs8EYFT2\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest 是在 express 之上封装的一层，提供了很多架构的能力：</span></div></div><ul class=\"wolai-block\"><li id=\"e3Aumfx8zqZjgJF5xLQkMD\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><b>IOC</b></span><span class=\"inline-wrap\">：自己实现了模块机制，可以导入导出 provider，实现自动依赖注入，简化了对象的创建</span></li><li id=\"8y9hbYMJpBAUfowDAjnLp\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><b>AOP</b></span><span class=\"inline-wrap\">：抽象了 Middleware、Guard、Interceptor、Pipe、Exception Filter 这 5 种切面，可以通过切面抽离一些通用逻辑，然后动态添加到某个流程中。</span></li><li id=\"7v4YvPtRoGfc9mqtMiEdgh\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">跨平台：Nest 基于 ts 的 interface 实现了不和任何底层平台耦合，http 可以切换 express 和 fastify，websocket 可以切换 socket.io 和 ws。而且 5 种切面也实现了可以跨 http、websocket、微服务来复用。</span></li></ul><div id=\"egkP56EnesGm3UpXu4ACsX\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">有了这三种架构特性，代码自然会变得松散耦合、易于扩展，易于维护。</span></div></div><div id=\"pxyotxac3Chfd5xSTWEv6g\" class=\"wolai-block wolai-text\"><div></div></div></article><footer></footer></body></html>","date":"2023-12-11T04:23:18.957Z","updated":"2023-12-11T04:23:18.956Z","path":"html/nest/nest的框架特性/Nest的框架特性.html","title":"","comments":1,"layout":"page","_id":"clq0gtc9w0008zqq98es3hbc2","content":"<!DOCTYPE html>\n<html lang=\"zh-Hans-CN\"><head><meta charset=\"utf-8\"/><meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/modern-norm.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/prism.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/katex.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/wolai.css\"/><title>Nest的框架特性 - wolai 笔记</title><link rel=\"shortcut icon\"></link></head><body class=\"full-width\"><header><div class=\"image\"></div><div class=\"title\"><div class=\"banner\"><div class=\"icon\"></div></div><div data-title=\"Nest的框架特性\" class=\"main-title\"></div></div></header><article><h1 id=\"bA2XbYDhCHuAZe3Z5FsRSk\" class=\"wolai-block\"><span class=\"inline-wrap\">Nest<span class=\"jill\"></span>的定位</span></h1><div id=\"2EAeJc9vhsmukzzQErCkoe\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">上一次介绍了<span class=\"jill\"></span>nest<span class=\"jill\"></span>的一些基础概念和入门用法，这次再聊聊<span class=\"jill\"></span>nest<span class=\"jill\"></span>作为目前最流行的<span class=\"jill\"></span>node<span class=\"jill\"></span>企业级开发框架，它有什么特点。</span></div></div><div id=\"oLuxjdYtoC2inP25ciHoeK\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"v19gdsDPdX4CZ3PHV6PT53\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">开发 node 应用有 3 个层次：</span></div></div><ul class=\"wolai-block\"><li id=\"u8xna1ZG8WF5LPNy9pc6KJ\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">直接用 http、https 包的 createServer api</span></li><li id=\"gmvYFuqedgPUCr9qggErne\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">使用 express、koa 这种处理请求响应的库</span></li><li id=\"ig7Nxk3CSqC64Mpf8K4guP\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">使用 nest、egg、midway 这类企业级框架</span></li></ul><div id=\"55zWqZWL662Z2SCfvSdAqZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"fP5iKA3sBchBuMkqBVDCrw\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">1、直接用 createServer api 创建服务适合特别简单的场景，比如工具提供的开发服务。</span></div></div><div id=\"qgQfK5vCwtbJRsQqXC8qdf\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">2、express、koa 这种库并没有约束代码写法，开发者可以随意编写，所以不适合开发大型项目。</span></div></div><blockquote id=\"ukP8VDYV3xxwbsw9R4vYiG\" class=\"wolai-block\"><span class=\"gray inline-wrap\">Express 理念是为 HTTP 服务器提供小型、强大的工具，使其成为单页应用程序、网站、混合或公共 HTTP API 的绝佳解决方案。而类似于<span class=\"jill\"></span>express<span class=\"jill\"></span>的还有其他，例如<span class=\"jill\"></span>Koa、Hapi<span class=\"jill\"></span>等。</span></blockquote><div id=\"eDUqBkJ8E7WXdvYLzcwiCz\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">3、大型项目会用企业级开发框架，有一定的代码约束，对很多功能都有开箱即用的解决方案的框架。</span></div></div><div id=\"NuyommMexGm2h4XPGUkAf\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"hsogJ2xjAQi3Xu6qG5n5JY\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">nest<span class=\"jill\"></span>作为<span class=\"jill\"></span>express<span class=\"jill\"></span>的上层框架，目前已经有个<span class=\"jill\"></span>57.3k Star，仅次于<span class=\"jill\"></span>express 61.1k Star。虽然可以只用<span class=\"jill\"></span>express<span class=\"jill\"></span>来开发项目。同类的上层框架也有<span class=\"jill\"></span>egg、midway。</span></div></div><div id=\"kBfKticUuLZK4TvC3R2miL\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">egg 的 ts 支持不好，在当下 ts 这么主流的情况下。（听说阿里 egg 团队也被打包裁了）</span></div></div><div id=\"wZUfGm5Rn9JamHfKLEWB37\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image.png\" style=\"width: 631px\"/></figure></div><div id=\"tyPeu8kXHUfZbDbK958KaC\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">而<span class=\"jill\"></span>midway<span class=\"jill\"></span>的<span class=\"jill\"></span>Star<span class=\"jill\"></span>仅有<span class=\"jill\"></span>6.7k，少了一个数量级，很难保证不会步<span class=\"jill\"></span>egg<span class=\"jill\"></span>的路。</span></div></div><div id=\"8y7eip4DmemdVkP1Q3VtRX\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_1.png\" style=\"width: 610px\"/></figure></div><div id=\"tUcqA7VWFrMW3KyTctGEoM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">综上来说，Nest<span class=\"jill\"></span>目前对于企业级项目来说，是首选的，也几乎是唯一的。</span></div></div><div id=\"mcPv9rjuhDTTaVq4v2S4hA\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h1 id=\"3PdFGDs8P9t2oieAE9Wpv1\" class=\"wolai-block\"><span class=\"inline-wrap\">Nest<span class=\"jill\"></span>的设计</span></h1><div id=\"uxyiYZgCp9BihkQQL7xzzZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">nest<span class=\"jill\"></span>的底层是</span><span class=\"inline-wrap\"><b>基于但不限于</b></span><span class=\"inline-wrap\">express<span class=\"jill\"></span>的，它封装了<span class=\"jill\"></span>IOC、AOP<span class=\"jill\"></span>等架构特性；而这些特性都依赖于<span class=\"jill\"></span>nest<span class=\"jill\"></span>最主要的特性：</span><span class=\"inline-wrap\"><b>模块机制</b></span><span class=\"inline-wrap\">。</span></div></div><div id=\"xjREoEVvpvWjY8rG5HBJZM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">看看<span class=\"jill\"></span>es module<span class=\"jill\"></span>的写法：</span></div></div><code-block id=\"4hW2zxFogiSGeJmuoF93AT\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> a<span class=\"token punctuation\">,</span> b <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> c <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">export</span> <span class=\"token exports\"><span class=\"token punctuation\">&#123;</span> a<span class=\"token punctuation\">,</span> c <span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">;</span></pre></div></code-block><div id=\"kjikcn2GbdqagKMw2QzaxZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">而<span class=\"jill\"></span>nest<span class=\"jill\"></span>的<span class=\"jill\"></span>module<span class=\"jill\"></span>写法：</span></div></div><code-block id=\"dLvBYxYePAut1ccV5X7GX4\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">Module</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> aModule <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./a.module'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">BService</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./b.service'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">imports</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>aModule<span class=\"token punctuation\">]</span>\n  <span class=\"token literal-property property\">providers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">BService</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">exports</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">BService</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></div></code-block><div id=\"rbMSZDHM13gPrV8QWrztb1\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">模块编写的逻辑上大同小异，都是<span class=\"jill\"></span>import<span class=\"jill\"></span>外部的值，可以<span class=\"jill\"></span>export<span class=\"jill\"></span>内部的值，而<span class=\"jill\"></span>nest<span class=\"jill\"></span>的模块机制是可以实现</span><span class=\"inline-wrap\"><b>自动注入依赖</b></span><span class=\"inline-wrap\">的，也就是 DI（Denpendency Injection）。</span></div></div><div id=\"kNmkDqZQYhmsJhMz4XtmWE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"o6V16jXHgxjwEuopdnPhkH\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">怎么理解呢，在后端系统中，会有很多对象：</span></div></div><ul class=\"wolai-block\"><li id=\"wZmjK2DwFC7NWgowPJ9xDT\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">Controller 对象：接收 http 请求，调用 Service，返回响应</span></li><li id=\"eUMHQMePgQFvm1pcG1Vxhf\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">Service 对象：实现业务逻辑</span></li><li id=\"kPcHKgLLtBhraQJdQ9KC5o\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">Repository 对象：实现对数据库的增删改查</span></li></ul><div id=\"dVbSRW41QMf6UVDcQhQnBE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">此外，还有数据库链接对象 DataSource，配置对象 Config 等等。</span></div></div><div id=\"fttjW2orykXHWY9DQ2usrn\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这些对象有着错综复杂的关系：</span></div></div><aside id=\"oD6pq5nMB67KTezArT8EbK\" class=\"bg-cultured wolai-block\"><div data-symbol=\"📌\" class=\"icon\"></div><span class=\"inline-wrap\">Controller 依赖了 Service 实现业务逻辑，Service 依赖了 Repository 来做增删改查，Repository 依赖 DataSource 来建立连接，DataSource 又需要从 Config 对象拿到用户名密码等信息。这就导致了创建这些对象是很复杂的，你要理清它们之间的依赖关系，哪个先创建哪个后创建。</span></aside><div id=\"mJJXD7M2HX1JcLnr78Wj9z\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">比如这样：</span></div><code-block id=\"5GdXVwHnDYM2oEuQKQakkp\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">password</span><span class=\"token operator\">:</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> dataSource <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataSource</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> repository <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Repository</span><span class=\"token punctuation\">(</span>dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> service <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Service</span><span class=\"token punctuation\">(</span>repository<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> controller <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Controller</span><span class=\"token punctuation\">(</span>service<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block></div><div id=\"iuaiFd2bgdKBy866PsR1AK\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">要经过一系列的初始化之后才可以使用 Controller 对象。</span></div></div><div id=\"u77z8Qe3EJb6QiVycuXfkV\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">而且像 config、dataSource、repository、service、controller 等这些对象不需要每次都 new 一个新的，一直用一个就可以，也就是保持</span><span class=\"inline-wrap\"><b>单例</b></span><span class=\"inline-wrap\">。</span></div></div><div id=\"riDSpGzpqeENt9pswZKrr9\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"sosGqXqUQqjSKb8quJs8Pz\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在应用初始化的时候，需要理清依赖的先后关系，创建一大堆对象组合起来，还要保证不要多次 new，这是一个后端系统都有的痛点问题。</span></div></div><div id=\"aLRwWVv9nFBq2ZCbBJyGH7\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Java 的 Spring 就实现了 IOC，Nest 也同样实现了。</span></div></div><div id=\"wansCxdgVzALuiYGjFvEA\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"5UBeo4aS2uoo4e3gsJmwdP\" class=\"wolai-block\"><span class=\"inline-wrap\">控制反转</span></h2><div id=\"qyhoJBtKnCmifVet38LMH4\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">自己手动创建和组装对象很麻烦，因此<span class=\"jill\"></span>nest<span class=\"jill\"></span>帮我们做了这一点，使用者只需要根据<span class=\"jill\"></span>nest<span class=\"jill\"></span>提供的标准，声明好哪些依赖关系，便可以完成</span><span class=\"inline-wrap\"><b>自动化对象创建和组装</b></span><span class=\"inline-wrap\">。从主动创建依赖到被动等待依赖注入，这就是 Inverse Of Control，反转控制。</span></div></div><div id=\"ji5DY7exPBqiL44o7UXfek\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"x2kh439x5pFaqqkBZR33A7\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">还是简单看一下代码：</span></div></div><code-block id=\"7zdAgvFDnFFJpiH8mkuLnp\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token comment\">// src/main.ts文件</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">NestFactory</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">AppModule</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./app.module'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token maybe-class-name\">NestFactory</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">create</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">AppModule</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">// src/app.module.ts文件</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">Module</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">AppController</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">AppService</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span> \n\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n <span class=\"token literal-property property\">imports</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n <span class=\"token literal-property property\">controllers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">AppController</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n <span class=\"token literal-property property\">providers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">AppService</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n \n \n <span class=\"token comment\">// src/app.service.ts文件</span>\n <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">Injectable</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n @<span class=\"token function\"><span class=\"token maybe-class-name\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n <span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppService</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> string <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token keyword control-flow\">return</span> <span class=\"token string\">'Hello World!'</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n <span class=\"token punctuation\">&#125;</span>\n \n \n <span class=\"token comment\">// src/app.controller.ts文件</span>\n <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">Controller</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Get</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">AppService</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n\n @<span class=\"token function\"><span class=\"token maybe-class-name\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n <span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppController</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token keyword\">private</span> readonly appService<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">AppService</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n   @<span class=\"token function\"><span class=\"token maybe-class-name\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n   <span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> string <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">appService</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n <span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><div id=\"dtzoLTTecEzcdZZgNGxA6F\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">现在访问 </span><span class=\"inline-wrap\"><code>localhost:3000</code></span><span class=\"inline-wrap\"> 就会执行这个 AppController 类中的 </span><span class=\"inline-wrap\"><code>getHello</code></span><span class=\"inline-wrap\"> 方法了。我们来看 app.controller.ts 文件。可以看到构造函数的参数签名中第一个参数 appService 是 AppService 的一个实例。</span></div><div id=\"nV1CkYmCFeE8Hp4Pd9Ej2r\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>constructor(private readonly appService: AppService)&#123;&#125;</code></span></div></div></div><div id=\"bgmoCkDxzmHaDovsiF5YGu\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">但是在代码里并有没有看到实例化这个 AppService 的地方。这里其实是把创建这个实例对象的工作交给了<span class=\"jill\"></span>nest<span class=\"jill\"></span>框架，而不是 AppController 自己来创建这个对象，这就是所谓的</span><span class=\"inline-wrap\"><code>控制反转</code></span><span class=\"inline-wrap\">。而把创建好的 AppService 实例对象作为 AppController 实例化时的参数传给构造器就是</span><span class=\"inline-wrap\"><code>依赖注入</code></span><span class=\"inline-wrap\">了。</span></div></div><div id=\"2fDT5A8bBsT2KFf72Rcf5Y\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"3GjcC2HYdCxgLWWGPTBjMv\" class=\"wolai-block\"><span class=\"inline-wrap\">面向切面</span></h2><div id=\"dFht1Z4LUXYGz1VdAUW2vg\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">后端框架基本都是 MVC 的架构。MVC 是 Model View Controller 的简写。</span></div></div><div id=\"gMAPnLDCRQZqi14FYU6yfM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">MVC 架构下，请求会先发送给 Controller，由它调度 Model 层的 Service 来完成业务逻辑，然后返回对应的 View。</span></div></div><div id=\"m2LbcbaZD9VKFeDKFotJt8\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/image_2.png\" style=\"width: 323px\"/></figure></div><div id=\"oFRBAv2FKzJqeeY7BUqxrY\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"snQZktVCwfPXALdD3KQZM3\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">通常一个请求过来，可能会经过 Controller（控制器）、Service（服务）、Repository（数据库访问） ：</span></div></div><div id=\"n9ceDUNpWAyfFXWaSWf9Ns\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/image_3.png\" style=\"width: 287px\"/></figure></div><div id=\"geQMz9x42E7rSJxTNCZHVR\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">如果想在这个调用链路里加入一些通用逻辑呢？比如日志记录、权限控制、异常处理等。容易想到的是直接改造 Controller 层代码，加入这段逻辑。</span></div></div><div id=\"h8j4nbkQEeqzAj9TtDy5AL\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">可以是可以，但是不优雅，因为这些通用的逻辑侵入到了业务逻辑里面，形成了耦合。那如何进行不侵入性的操作呢？</span></div></div><div id=\"eYyPRLuw7uz6kS8p1K6Bx5\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">是不是可以在调用 Controller 前后加入一个执行通用逻辑的阶段？</span></div></div><div id=\"4CBKnojG9LQv2aEWYVXjq9\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/image_4.png\" style=\"width: 412px\"/></figure></div><div id=\"qKhwqHmMUUgXnURkNSKBQc\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这样的横向扩展点就叫做切面，这种非侵入式的加入一些切面逻辑的编程方式就叫做 AOP （面向切面编程）。</span></div></div><aside id=\"iyxcwfctwupDZiSPYcPvyJ\" class=\"bg-cultured wolai-block\"><div data-symbol=\"📌\" class=\"icon\"></div><span class=\"inline-wrap\">AOP 主要的思想是将我们对于业务逻辑无关的一些操作，比如日志记录、性能统计、安全控制、异常处理、错误上报等，将这些操作从业务逻辑中剥离出来，将它们放在一些独立的方法中，然后如果我们对这些操作做修改的时候就可以不用影响到业务逻辑相关的代码。它主要体现了我们对代码的低耦合性的追求。</span></aside><div id=\"5qRYX3xkNAFLFzKxrEfEDV\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"tik6TfN5zWdMWnCFLtN8FH\" class=\"wolai-block\"><span class=\"inline-wrap\">Express<span class=\"jill\"></span>中的<span class=\"jill\"></span>AOP</span></h3><div id=\"drnUWLTbp67nNyf2ZbPNZD\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在说<span class=\"jill\"></span>Nest<span class=\"jill\"></span>之前，先来看看<span class=\"jill\"></span>Express<span class=\"jill\"></span>中的中间件，其洋葱模型也是一种 AOP 的实现，因为你可以透明的在外面包一层，加入一些逻辑，内层感知不到。</span></div></div><div id=\"chxh8VDWSvcWY5CJoyzZEm\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/image_5.png\" style=\"width: 418px\"/></figure></div><div id=\"qHpcNwX86Z54bDJGko9dAR\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在中间件函数中，可以执行以下任何任务</span></div></div><ul class=\"wolai-block\"><li id=\"eTPyjixVjwt6NyE754fiUj\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">执行任何代码</span></li><li id=\"gimMBiKXhKYwraQHvHTGL3\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">修改 </span><span class=\"inline-wrap\"><code>request</code></span><span class=\"inline-wrap\"> 或 </span><span class=\"inline-wrap\"><code>response</code></span><span class=\"inline-wrap\"> 响应对象【同一个生命周期】</span></li><li id=\"k849TgVE2VfQaMM4HCWNce\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">结束请求响应周期</span></li><li id=\"uet47fxEotBYacLY7tkbjj\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">调用下一个中间件</span></li></ul><div id=\"592UL1AzoonKNQTzDwRukQ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">简单看看<span class=\"jill\"></span>Express<span class=\"jill\"></span>的中间件的使用：</span></div></div><code-block id=\"55d8AGTu2KrcnTh3CDycMT\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token comment\">// 洋葱模型</span>\n<span class=\"token comment\">// 全局使用中间件</span>\napp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">use</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'全局中间件 start'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// 调用下一个中间件</span>\n  <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'全局中间件 end'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 单独中间件</span>\napp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"单独中间件 start\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"单独中间件 end\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"处理请求 start\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"get method!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"处理请求 end\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 运行结果</span>\n<span class=\"token comment\">// 全局中间件 start</span>\n<span class=\"token comment\">// 单独中间件 start</span>\n<span class=\"token comment\">// 处理请求 start</span>\n<span class=\"token comment\">// 处理请求 end</span>\n<span class=\"token comment\">// 单独中间件 end</span>\n<span class=\"token comment\">// 全局中间件 end</span>\n</pre></div></code-block><div id=\"qkATGmmtjSiHW2m3RxXaWs\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">可以看到它的执行机制，以<span class=\"jill\"></span>next()方法为分水岭，先执行所有中间件的<span class=\"jill\"></span>next()方法前半部分，然后从后往前执行中间件<span class=\"jill\"></span>next()方法的下半部分。这就是著名的洋葱模型。</span></div></div><div id=\"fZXgaR1NFHxSwJvXXqBaU5\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">可以简化为：</span></div></div><code-block id=\"x2yggnv9R2kzrbZXU6goi6\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre>app<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">use</span><span class=\"token punctuation\">(</span>globalMiddleware<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"route\"</span><span class=\"token punctuation\">,</span> middleware1<span class=\"token punctuation\">,</span> middlewar2<span class=\"token punctuation\">,</span> <span class=\"token spread operator\">...</span><span class=\"token punctuation\">,</span> mainMethod<span class=\"token punctuation\">)</span>\n</pre></div></code-block><div id=\"qADE4bJoUou3MRaocciyd7\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"3JsczvbY7yJn2sBjR5pwfz\" class=\"wolai-block\"><span class=\"inline-wrap\">Nest<span class=\"jill\"></span>中的<span class=\"jill\"></span>AOP</span></h3><div id=\"g8zGsCkUC3ikqn3NwfMQQh\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest 实现 AOP 的方式更多，一共有五种，包括 Middleware、Guard、Pipe、Interceptor、ExceptionFilter。</span></div></div><div id=\"aKWyXpt9WFzepz8n3ykCKt\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h4 id=\"pVfQ4QQEdppMfKeG6stair\" class=\"wolai-block\"><span class=\"inline-wrap\">中间件 Middleware</span></h4><div id=\"sQnUx46rHZMfTNymHwFZ1E\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest 的底层是<span class=\"jill\"></span>Express，所以也有中间件 Middleware 的概念，它和 Express 的 Middleware 很像，但不完全一样。</span></div></div><div id=\"brS8GS6yeu6TkBaZyx5iR1\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"93y7HbdpchqTEMDBqoQ4h4\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">举个例子，我们首先创建了一个中间件</span><span class=\"inline-wrap\"><code>AppMiddleware</code></span><span class=\"inline-wrap\"> ，:</span></div></div><code-block id=\"krSYNxGrVnJvcyn3CoqBmv\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">Injectable</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">NestMiddleware</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">Request</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Response</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppMiddleware</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">NestMiddleware</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">use</span><span class=\"token punctuation\">(</span>req<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Request</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">res</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Response</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">next</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'brefore'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'after'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></pre></div></code-block><div id=\"s5nqDt2oPxR8Lao3HdqtMv\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">然后在<span class=\"jill\"></span>AppModule<span class=\"jill\"></span>中使用这个中间件：</span></div></div><code-block id=\"kYTyCGxiBTauJPTvk3uHTb\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">AppMiddleware</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'. /app.middleware'</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">MiddlewareConsumer</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Module</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">NestModule</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">AppController</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'. /app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">AppService</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'. /app.service'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Module</span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">imports</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">controllers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">AppController</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">providers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">AppServicel</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">NestModule</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">configure</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">consumer</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">MiddlewareConsumer</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    consumer<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">apply</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">AppMiddleware</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forRoutes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></pre></div></code-block><div id=\"gFwXqGMN49Bk4kPZmVnHzy\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">实现 NestModule 接口的 </span><span class=\"inline-wrap\"><code>configure</code></span><span class=\"inline-wrap\"> 方法，在里面应用 AppMiddleware 到</span><span class=\"inline-wrap\"><b>所有路由</b></span><span class=\"inline-wrap\">。这里的</span><span class=\"inline-wrap\"><code>*</code></span><span class=\"inline-wrap\">也可以修改为</span><span class=\"inline-wrap\"><code>&#123; path: &#39;route&#39;, method: RequestMethod.GET &#125;</code></span><span class=\"inline-wrap\">指定具体的路由应用具体的中间件。</span></div></div><div id=\"vpU3iB5GV523F7Fzk2HQh8\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">到这里与<span class=\"jill\"></span>Express<span class=\"jill\"></span>中间件还是蛮一样的，只是将中间件从</span><span class=\"inline-wrap\"><code>function</code></span><span class=\"inline-wrap\">变成了</span><span class=\"inline-wrap\"><code>class</code></span><span class=\"inline-wrap\">的形式 ；</span></div></div><div id=\"oEbzEWsp6BbfqW7LQ47tdf\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><aside id=\"iqmZTbNkeSm25vz28iouwy\" class=\"bg-cultured wolai-block\"><div data-symbol=\"📌\" class=\"icon\"></div><span class=\"inline-wrap\">Nest 为什么要把 Middleware 做成 class 有什么好处呢？</span></aside><div id=\"q4MhBmsh4UnRHcGgCMSXWx\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">好处就是可以使用</span><span class=\"inline-wrap\"><b>依赖注入</b></span><span class=\"inline-wrap\">。</span></div></div><div id=\"SkrfCihGPvBEHMT2zhfT6\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">我们通过 </span><span class=\"inline-wrap\"><code>@Inject</code></span><span class=\"inline-wrap\"> 或者构造器 将 AppService 注入到 middleware 里：</span></div></div><code-block id=\"Mb88VUGHYySXRre713nMr\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">Injectable</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Inject</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">NestMiddleware</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">Request</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Response</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppMiddleware</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">NestMiddleware</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token keyword\">private</span> readonly appService<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">AppService</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token comment\">// @Inject (AppService)</span>\n  <span class=\"token comment\">// private readonly appService: AppService;</span>\n  \n  <span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">req</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Request</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">res</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Response</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">next</span><span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">Function</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// do some...</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">appService</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Request...'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></pre></div></code-block><div id=\"79339MdmLYni98Q5v4RuzP\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">当访问这个路由的时候，中间件里便会调用了 AppService<span class=\"jill\"></span>中的<span class=\"jill\"></span>method<span class=\"jill\"></span>方法。</span></div></div><div id=\"bUVPxv3aBn2PpF1Ws25Rew\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">举例一个场景：</span></div><div id=\"319myMkRg3DEQYsJnVeLdE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">假设我们有一个应用程序，需要对所有传入的请求进行安全检查，以防止被 XSS（跨站点脚本攻击）或 CSRF（跨站点请求伪造）等攻击。我们可以实现一个 </span><span class=\"inline-wrap\"><code>SecurityMiddleware</code></span><span class=\"inline-wrap\"> 中间件来处理这些安全问题，并将 </span><span class=\"inline-wrap\"><code>SecurityService</code></span><span class=\"inline-wrap\"> 通过依赖注入的方式注入到 </span><span class=\"inline-wrap\"><code>SecurityMiddleware 中</code></span><span class=\"inline-wrap\">，代码如下所示：</span></div></div><code-block id=\"dBH9CfV6UGVBTsdXuV1BT7\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">Injectable</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">NestMiddleware</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">Request</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Response</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">SecurityService</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./security.service'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SecurityMiddleware</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">NestMiddleware</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token keyword\">private</span> readonly securityService<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">SecurityService</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">use</span><span class=\"token punctuation\">(</span>req<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Request</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">res</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Response</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">next</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> isXss <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">securityService</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">checkXssAttack</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span><span class=\"token property-access\">body</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>isXss<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword control-flow\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Invalid request data'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">const</span> isCsrf <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">securityService</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">checkCsrfAttack</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span><span class=\"token property-access\">cookies</span><span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">.</span><span class=\"token property-access\">headers</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>isCsrf<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword control-flow\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">403</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'CSRF attack detected'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></pre></div></code-block></div><div id=\"dsz9K2ytgdkuW1uw7QQ99g\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">然后将 SecurityMiddleware 注册到应用程序中。代码如下所示：</span></div></div><div id=\"vafTpS1XcJdj3KgXhxymSB\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><code-block id=\"4E9fgFP8FqMGHbNFJdwqPd\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">MiddlewareConsumer</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Module</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">NestModule</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">AppController</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">AppService</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">SecurityMiddleware</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./security.middleware'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">SecurityService</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./security.service'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">imports</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">controllers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">AppController</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">providers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">AppService</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">SecurityService</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">NestModule</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">configure</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">consumer</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">MiddlewareConsumer</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    consumer<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">apply</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">SecurityMiddleware</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forRoutes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>` \n</pre></div></code-block><div id=\"ocv3qXAbgu8WHUCTZ7ReUS\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在上面的代码中，我们通过 </span><span class=\"inline-wrap\"><code>consumer.apply(SecurityMiddleware).forRoutes(&#39;*&#39;)</code></span><span class=\"inline-wrap\"> 将 SecurityMiddleware 注册到了应用程序的所有路由中。这样，在访问任何路由时，都会自动触发 SecurityMiddleware 进行安全检查。</span></div></div><div id=\"ane173KGSUBNpzTE8wLTka\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这就是 Nest 注入的依赖。</span></div></div><blockquote id=\"aVGvTEJvULnGf2kdNuQpPm\" class=\"wolai-block\"><span class=\"gray inline-wrap\">如果不需要注入依赖，那可以写函数形式的 middleware，这时候和 Express 的 middleware 就没啥区别了。</span></blockquote><div id=\"w5GdNxNLqoYySPLtrDxy9H\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">其他实现<span class=\"jill\"></span>AOP<span class=\"jill\"></span>的方式（ Guard、Pipe、Interceptor、ExceptionFilter）其实与中间件类似，只是实现不同的接口的不同方法：</span></div></div><details id=\"cwAURA6MrXmnTFtev1Krsa\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">Guard：实现<span class=\"jill\"></span>CanActivate 接口的<span class=\"jill\"></span>canActivate<span class=\"jill\"></span>方法，返回 true、false 来表示是否继续。</span></summary><div id=\"cQ6rDizwGedPgizgcw1qEg\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@UseGuards(XxxGuard)</code></span></div></div><div id=\"mx3yNUgTjPwkj44s3SCTD7\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_6.png\" style=\"width: 708px\"/></figure></div></details><details id=\"ty6bnFmU721NJXL5vEfAe9\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">Pipe：实现<span class=\"jill\"></span>PipeTransform<span class=\"jill\"></span>接口的<span class=\"jill\"></span>transform<span class=\"jill\"></span>方法，对传入<span class=\"jill\"></span>Controller<span class=\"jill\"></span>的参数做验证或转换，也可抛出异常。</span></summary><div id=\"rCh6UprP7WiiBDCFNzQYw3\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_7.png\" style=\"width: 714px\"/></figure></div></details><details id=\"9T9YPz9Qhe33mKNnjdbiw6\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">Interceptor：实现<span class=\"jill\"></span>NestInterceptor<span class=\"jill\"></span>接口的<span class=\"jill\"></span>intercepe<span class=\"jill\"></span>方法，可以对请求前后加入一些逻辑。</span></summary><div id=\"4MogBtmj4Asrt2aYK3f8xq\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_8.png\" style=\"width: 712px\"/></figure></div></details><details id=\"harMnRctrHcAqu626MQMHd\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">ExceptionFilter： 实现<span class=\"jill\"></span>ExceptionFilter<span class=\"jill\"></span>接口的<span class=\"jill\"></span>catch<span class=\"jill\"></span>方法，捕捉异常，返回友好信息给客户端。</span></summary><div id=\"9DyHG9JTqerrFhmvYocvJA\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_9.png\" style=\"width: 709px\"/></figure></div></details><div id=\"as1ffYuriThjPHSSEYQquQ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">但本质上都是通用逻辑的抽离封装。整个请求生命周期大概是：</span></div></div><div id=\"fh6NtkEgMgLu3NWmvsumVU\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"nz2KpTfHxbyAr4JUJXrjNW\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/image_10.png\" style=\"width: 100%\"/></figure></div><ul class=\"wolai-block\"><li id=\"3jLEiggq1DpvhAYjPAPdyd\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">首先，请求会被 middleware 处理，这一层可以复用 express 的中间件生态，也可以是 Nest 的那种 class 的 middleware，可以注入 provider。</span></li><li id=\"eD1GUTUVMyvawmCJHjdZjj\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">然后在具体的路由会经历 Guard 的处理，可以实现权限验证等功能。</span></li><li id=\"6SSzNF2Gj2vjPPTa59Vt47\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">之后是 Interceptor 可以在请求前后做一些处理</span></li><li id=\"cJ3YNBNycMw9UbJw39Q4GU\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">在到达 handler（controller） 之前，还会对参数用 Pipe 做下检验和转换。</span></li><li id=\"xqTc2Jsw2y6bP2LpPJaCLH\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">这个过程中不管是哪一层抛的异常，都会被 Exception Filter 处理下，返回给用户友好的响应信息。</span></li></ul><div id=\"t8DC7f5MAQwTuGYSDjCLud\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"7Cqkthj9YozrFCm5cVEvsU\" class=\"wolai-block\"><span class=\"inline-wrap\">跨平台</span></h2><div id=\"mLxJERKka3GB9kJ6hnpBLk\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">前面说，Nest 的底层平台是 Express，其实并不准确，Nest 并没有和 Express 耦合。</span></div></div><div id=\"iTyXDC7S2k6fj5Jxx5sZf2\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">它所有的上层代码都是基于一个抽象的接口的，而这个接口有 Express 和 Fastify 两种实现，默认是<span class=\"jill\"></span>Express，即使有一天，有一个新的 http 库取代了 express，对 nest 也没有什么影响，只要加一个新平台的适配器就可以了。</span></div></div><div id=\"u8RfABvNaUff8Nkt3DmD1m\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/image_11.png\" style=\"width: 100%\"/></figure></div><div id=\"aKPxCn4rmrTUQkx7ryVnHF\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_12.png\" style=\"width: 782px\"/></figure></div><div id=\"mbMkYrTEVoDAens2QC1uxd\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">不只是 http<span class=\"jill\"></span>服务 可以切换具体的底层平台，websocket 也是，可以切换 socket.io 和 ws：</span></div></div><div id=\"73Kk77P6vUM6fgEvwVf3Zk\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/image_13.png\" style=\"width: 100%\"/></figure></div><div id=\"eFCgnCtXFcEwjwWEWocTY7\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"KpZXyTD1asWtLo7LztRAt\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">另外，Nest 支持创建 HTTP 服务、WebSocket 服务，还有基于 TCP 通信的微服务。</span></div></div><div id=\"4n6Hgftnj19CUaEDvNZvxM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">你写的一些 Guard、Exception Filter、Interceptor、Pipe 也可以用在 Websocket 和微服务里，</span></div></div><div id=\"fcPLZz4DtTenowpmnAfRiE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest<span class=\"jill\"></span>提供了 </span><span class=\"inline-wrap\"><code>ArgumentsHost</code></span><span class=\"inline-wrap\"> 类，在切面里拿到它之后，可以判断出当前是什么上下文：</span></div></div><div id=\"8baGmiveCvxNZXiRbPYQ9H\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">比如：</span></div></div><code-block id=\"K16BkBaAY4SW8gKBGHZeh\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">ArgumentsHost</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Catch</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">ExceptionFilter</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Response</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">CustomerException</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./CustomerException'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Catch</span></span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">CustomerException</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomerFilter</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ExceptionFilter</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">catch</span><span class=\"token punctuation\">(</span>exception<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">CustomerException</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">host</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">ArgumentsHost</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'http'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> host<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">switchToHttp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token property-access\">getResponse</span><span class=\"token operator\">&lt;</span><span class=\"token maybe-class-name\">Response</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> request <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token property-access\">getRequest</span><span class=\"token operator\">&lt;</span><span class=\"token maybe-class-name\">Request</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      response\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">aaa</span><span class=\"token operator\">:</span> exception<span class=\"token punctuation\">.</span><span class=\"token property-access\">aaa</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">bbb</span><span class=\"token operator\">:</span> exception<span class=\"token punctuation\">.</span><span class=\"token property-access\">bbb</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'ws'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> host<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">switchToWs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'rpc'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> host<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">swtichToRpc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"826rziBDy275T4yXZmz7AW\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这样就实现了切面的跨上下文复用。</span></div></div><div id=\"4ZKKPVqX7jTapmPQzn2Jy9\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h1 id=\"dX21ftTSei5ZP4YtpDC977\" class=\"wolai-block\"><span class=\"inline-wrap\">总结</span></h1><div id=\"LBT8MH1rkr2zSzs8EYFT2\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest 是在 express 之上封装的一层，提供了很多架构的能力：</span></div></div><ul class=\"wolai-block\"><li id=\"e3Aumfx8zqZjgJF5xLQkMD\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><b>IOC</b></span><span class=\"inline-wrap\">：自己实现了模块机制，可以导入导出 provider，实现自动依赖注入，简化了对象的创建</span></li><li id=\"8y9hbYMJpBAUfowDAjnLp\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><b>AOP</b></span><span class=\"inline-wrap\">：抽象了 Middleware、Guard、Interceptor、Pipe、Exception Filter 这 5 种切面，可以通过切面抽离一些通用逻辑，然后动态添加到某个流程中。</span></li><li id=\"7v4YvPtRoGfc9mqtMiEdgh\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">跨平台：Nest 基于 ts 的 interface 实现了不和任何底层平台耦合，http 可以切换 express 和 fastify，websocket 可以切换 socket.io 和 ws。而且 5 种切面也实现了可以跨 http、websocket、微服务来复用。</span></li></ul><div id=\"egkP56EnesGm3UpXu4ACsX\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">有了这三种架构特性，代码自然会变得松散耦合、易于扩展，易于维护。</span></div></div><div id=\"pxyotxac3Chfd5xSTWEv6g\" class=\"wolai-block wolai-text\"><div></div></div></article><footer></footer></body></html>","site":{"data":{}},"length":12924,"excerpt":"","more":"<!DOCTYPE html>\n<html lang=\"zh-Hans-CN\"><head><meta charset=\"utf-8\"/><meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/modern-norm.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/prism.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/katex.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/wolai.css\"/><title>Nest的框架特性 - wolai 笔记</title><link rel=\"shortcut icon\"></link></head><body class=\"full-width\"><header><div class=\"image\"></div><div class=\"title\"><div class=\"banner\"><div class=\"icon\"></div></div><div data-title=\"Nest的框架特性\" class=\"main-title\"></div></div></header><article><h1 id=\"bA2XbYDhCHuAZe3Z5FsRSk\" class=\"wolai-block\"><span class=\"inline-wrap\">Nest<span class=\"jill\"></span>的定位</span></h1><div id=\"2EAeJc9vhsmukzzQErCkoe\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">上一次介绍了<span class=\"jill\"></span>nest<span class=\"jill\"></span>的一些基础概念和入门用法，这次再聊聊<span class=\"jill\"></span>nest<span class=\"jill\"></span>作为目前最流行的<span class=\"jill\"></span>node<span class=\"jill\"></span>企业级开发框架，它有什么特点。</span></div></div><div id=\"oLuxjdYtoC2inP25ciHoeK\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"v19gdsDPdX4CZ3PHV6PT53\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">开发 node 应用有 3 个层次：</span></div></div><ul class=\"wolai-block\"><li id=\"u8xna1ZG8WF5LPNy9pc6KJ\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">直接用 http、https 包的 createServer api</span></li><li id=\"gmvYFuqedgPUCr9qggErne\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">使用 express、koa 这种处理请求响应的库</span></li><li id=\"ig7Nxk3CSqC64Mpf8K4guP\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">使用 nest、egg、midway 这类企业级框架</span></li></ul><div id=\"55zWqZWL662Z2SCfvSdAqZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"fP5iKA3sBchBuMkqBVDCrw\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">1、直接用 createServer api 创建服务适合特别简单的场景，比如工具提供的开发服务。</span></div></div><div id=\"qgQfK5vCwtbJRsQqXC8qdf\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">2、express、koa 这种库并没有约束代码写法，开发者可以随意编写，所以不适合开发大型项目。</span></div></div><blockquote id=\"ukP8VDYV3xxwbsw9R4vYiG\" class=\"wolai-block\"><span class=\"gray inline-wrap\">Express 理念是为 HTTP 服务器提供小型、强大的工具，使其成为单页应用程序、网站、混合或公共 HTTP API 的绝佳解决方案。而类似于<span class=\"jill\"></span>express<span class=\"jill\"></span>的还有其他，例如<span class=\"jill\"></span>Koa、Hapi<span class=\"jill\"></span>等。</span></blockquote><div id=\"eDUqBkJ8E7WXdvYLzcwiCz\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">3、大型项目会用企业级开发框架，有一定的代码约束，对很多功能都有开箱即用的解决方案的框架。</span></div></div><div id=\"NuyommMexGm2h4XPGUkAf\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"hsogJ2xjAQi3Xu6qG5n5JY\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">nest<span class=\"jill\"></span>作为<span class=\"jill\"></span>express<span class=\"jill\"></span>的上层框架，目前已经有个<span class=\"jill\"></span>57.3k Star，仅次于<span class=\"jill\"></span>express 61.1k Star。虽然可以只用<span class=\"jill\"></span>express<span class=\"jill\"></span>来开发项目。同类的上层框架也有<span class=\"jill\"></span>egg、midway。</span></div></div><div id=\"kBfKticUuLZK4TvC3R2miL\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">egg 的 ts 支持不好，在当下 ts 这么主流的情况下。（听说阿里 egg 团队也被打包裁了）</span></div></div><div id=\"wZUfGm5Rn9JamHfKLEWB37\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image.png\" style=\"width: 631px\"/></figure></div><div id=\"tyPeu8kXHUfZbDbK958KaC\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">而<span class=\"jill\"></span>midway<span class=\"jill\"></span>的<span class=\"jill\"></span>Star<span class=\"jill\"></span>仅有<span class=\"jill\"></span>6.7k，少了一个数量级，很难保证不会步<span class=\"jill\"></span>egg<span class=\"jill\"></span>的路。</span></div></div><div id=\"8y7eip4DmemdVkP1Q3VtRX\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_1.png\" style=\"width: 610px\"/></figure></div><div id=\"tUcqA7VWFrMW3KyTctGEoM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">综上来说，Nest<span class=\"jill\"></span>目前对于企业级项目来说，是首选的，也几乎是唯一的。</span></div></div><div id=\"mcPv9rjuhDTTaVq4v2S4hA\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h1 id=\"3PdFGDs8P9t2oieAE9Wpv1\" class=\"wolai-block\"><span class=\"inline-wrap\">Nest<span class=\"jill\"></span>的设计</span></h1><div id=\"uxyiYZgCp9BihkQQL7xzzZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">nest<span class=\"jill\"></span>的底层是</span><span class=\"inline-wrap\"><b>基于但不限于</b></span><span class=\"inline-wrap\">express<span class=\"jill\"></span>的，它封装了<span class=\"jill\"></span>IOC、AOP<span class=\"jill\"></span>等架构特性；而这些特性都依赖于<span class=\"jill\"></span>nest<span class=\"jill\"></span>最主要的特性：</span><span class=\"inline-wrap\"><b>模块机制</b></span><span class=\"inline-wrap\">。</span></div></div><div id=\"xjREoEVvpvWjY8rG5HBJZM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">看看<span class=\"jill\"></span>es module<span class=\"jill\"></span>的写法：</span></div></div><code-block id=\"4hW2zxFogiSGeJmuoF93AT\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> a<span class=\"token punctuation\">,</span> b <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> c <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">export</span> <span class=\"token exports\"><span class=\"token punctuation\">&#123;</span> a<span class=\"token punctuation\">,</span> c <span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">;</span></pre></div></code-block><div id=\"kjikcn2GbdqagKMw2QzaxZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">而<span class=\"jill\"></span>nest<span class=\"jill\"></span>的<span class=\"jill\"></span>module<span class=\"jill\"></span>写法：</span></div></div><code-block id=\"dLvBYxYePAut1ccV5X7GX4\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">Module</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> aModule <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./a.module'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">BService</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./b.service'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">imports</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>aModule<span class=\"token punctuation\">]</span>\n  <span class=\"token literal-property property\">providers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">BService</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">exports</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">BService</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></div></code-block><div id=\"rbMSZDHM13gPrV8QWrztb1\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">模块编写的逻辑上大同小异，都是<span class=\"jill\"></span>import<span class=\"jill\"></span>外部的值，可以<span class=\"jill\"></span>export<span class=\"jill\"></span>内部的值，而<span class=\"jill\"></span>nest<span class=\"jill\"></span>的模块机制是可以实现</span><span class=\"inline-wrap\"><b>自动注入依赖</b></span><span class=\"inline-wrap\">的，也就是 DI（Denpendency Injection）。</span></div></div><div id=\"kNmkDqZQYhmsJhMz4XtmWE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"o6V16jXHgxjwEuopdnPhkH\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">怎么理解呢，在后端系统中，会有很多对象：</span></div></div><ul class=\"wolai-block\"><li id=\"wZmjK2DwFC7NWgowPJ9xDT\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">Controller 对象：接收 http 请求，调用 Service，返回响应</span></li><li id=\"eUMHQMePgQFvm1pcG1Vxhf\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">Service 对象：实现业务逻辑</span></li><li id=\"kPcHKgLLtBhraQJdQ9KC5o\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">Repository 对象：实现对数据库的增删改查</span></li></ul><div id=\"dVbSRW41QMf6UVDcQhQnBE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">此外，还有数据库链接对象 DataSource，配置对象 Config 等等。</span></div></div><div id=\"fttjW2orykXHWY9DQ2usrn\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这些对象有着错综复杂的关系：</span></div></div><aside id=\"oD6pq5nMB67KTezArT8EbK\" class=\"bg-cultured wolai-block\"><div data-symbol=\"📌\" class=\"icon\"></div><span class=\"inline-wrap\">Controller 依赖了 Service 实现业务逻辑，Service 依赖了 Repository 来做增删改查，Repository 依赖 DataSource 来建立连接，DataSource 又需要从 Config 对象拿到用户名密码等信息。这就导致了创建这些对象是很复杂的，你要理清它们之间的依赖关系，哪个先创建哪个后创建。</span></aside><div id=\"mJJXD7M2HX1JcLnr78Wj9z\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">比如这样：</span></div><code-block id=\"5GdXVwHnDYM2oEuQKQakkp\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">password</span><span class=\"token operator\">:</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> dataSource <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataSource</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> repository <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Repository</span><span class=\"token punctuation\">(</span>dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> service <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Service</span><span class=\"token punctuation\">(</span>repository<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> controller <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Controller</span><span class=\"token punctuation\">(</span>service<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block></div><div id=\"iuaiFd2bgdKBy866PsR1AK\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">要经过一系列的初始化之后才可以使用 Controller 对象。</span></div></div><div id=\"u77z8Qe3EJb6QiVycuXfkV\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">而且像 config、dataSource、repository、service、controller 等这些对象不需要每次都 new 一个新的，一直用一个就可以，也就是保持</span><span class=\"inline-wrap\"><b>单例</b></span><span class=\"inline-wrap\">。</span></div></div><div id=\"riDSpGzpqeENt9pswZKrr9\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"sosGqXqUQqjSKb8quJs8Pz\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在应用初始化的时候，需要理清依赖的先后关系，创建一大堆对象组合起来，还要保证不要多次 new，这是一个后端系统都有的痛点问题。</span></div></div><div id=\"aLRwWVv9nFBq2ZCbBJyGH7\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Java 的 Spring 就实现了 IOC，Nest 也同样实现了。</span></div></div><div id=\"wansCxdgVzALuiYGjFvEA\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"5UBeo4aS2uoo4e3gsJmwdP\" class=\"wolai-block\"><span class=\"inline-wrap\">控制反转</span></h2><div id=\"qyhoJBtKnCmifVet38LMH4\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">自己手动创建和组装对象很麻烦，因此<span class=\"jill\"></span>nest<span class=\"jill\"></span>帮我们做了这一点，使用者只需要根据<span class=\"jill\"></span>nest<span class=\"jill\"></span>提供的标准，声明好哪些依赖关系，便可以完成</span><span class=\"inline-wrap\"><b>自动化对象创建和组装</b></span><span class=\"inline-wrap\">。从主动创建依赖到被动等待依赖注入，这就是 Inverse Of Control，反转控制。</span></div></div><div id=\"ji5DY7exPBqiL44o7UXfek\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"x2kh439x5pFaqqkBZR33A7\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">还是简单看一下代码：</span></div></div><code-block id=\"7zdAgvFDnFFJpiH8mkuLnp\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token comment\">// src/main.ts文件</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">NestFactory</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">AppModule</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./app.module'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token maybe-class-name\">NestFactory</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">create</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">AppModule</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">// src/app.module.ts文件</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">Module</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">AppController</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">AppService</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span> \n\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n <span class=\"token literal-property property\">imports</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n <span class=\"token literal-property property\">controllers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">AppController</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n <span class=\"token literal-property property\">providers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">AppService</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n \n \n <span class=\"token comment\">// src/app.service.ts文件</span>\n <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">Injectable</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n @<span class=\"token function\"><span class=\"token maybe-class-name\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n <span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppService</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> string <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token keyword control-flow\">return</span> <span class=\"token string\">'Hello World!'</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n <span class=\"token punctuation\">&#125;</span>\n \n \n <span class=\"token comment\">// src/app.controller.ts文件</span>\n <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">Controller</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Get</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">AppService</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n\n @<span class=\"token function\"><span class=\"token maybe-class-name\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n <span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppController</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token keyword\">private</span> readonly appService<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">AppService</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n   @<span class=\"token function\"><span class=\"token maybe-class-name\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n   <span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> string <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">appService</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n <span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><div id=\"dtzoLTTecEzcdZZgNGxA6F\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">现在访问 </span><span class=\"inline-wrap\"><code>localhost:3000</code></span><span class=\"inline-wrap\"> 就会执行这个 AppController 类中的 </span><span class=\"inline-wrap\"><code>getHello</code></span><span class=\"inline-wrap\"> 方法了。我们来看 app.controller.ts 文件。可以看到构造函数的参数签名中第一个参数 appService 是 AppService 的一个实例。</span></div><div id=\"nV1CkYmCFeE8Hp4Pd9Ej2r\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>constructor(private readonly appService: AppService)&#123;&#125;</code></span></div></div></div><div id=\"bgmoCkDxzmHaDovsiF5YGu\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">但是在代码里并有没有看到实例化这个 AppService 的地方。这里其实是把创建这个实例对象的工作交给了<span class=\"jill\"></span>nest<span class=\"jill\"></span>框架，而不是 AppController 自己来创建这个对象，这就是所谓的</span><span class=\"inline-wrap\"><code>控制反转</code></span><span class=\"inline-wrap\">。而把创建好的 AppService 实例对象作为 AppController 实例化时的参数传给构造器就是</span><span class=\"inline-wrap\"><code>依赖注入</code></span><span class=\"inline-wrap\">了。</span></div></div><div id=\"2fDT5A8bBsT2KFf72Rcf5Y\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"3GjcC2HYdCxgLWWGPTBjMv\" class=\"wolai-block\"><span class=\"inline-wrap\">面向切面</span></h2><div id=\"dFht1Z4LUXYGz1VdAUW2vg\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">后端框架基本都是 MVC 的架构。MVC 是 Model View Controller 的简写。</span></div></div><div id=\"gMAPnLDCRQZqi14FYU6yfM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">MVC 架构下，请求会先发送给 Controller，由它调度 Model 层的 Service 来完成业务逻辑，然后返回对应的 View。</span></div></div><div id=\"m2LbcbaZD9VKFeDKFotJt8\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/image_2.png\" style=\"width: 323px\"/></figure></div><div id=\"oFRBAv2FKzJqeeY7BUqxrY\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"snQZktVCwfPXALdD3KQZM3\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">通常一个请求过来，可能会经过 Controller（控制器）、Service（服务）、Repository（数据库访问） ：</span></div></div><div id=\"n9ceDUNpWAyfFXWaSWf9Ns\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/image_3.png\" style=\"width: 287px\"/></figure></div><div id=\"geQMz9x42E7rSJxTNCZHVR\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">如果想在这个调用链路里加入一些通用逻辑呢？比如日志记录、权限控制、异常处理等。容易想到的是直接改造 Controller 层代码，加入这段逻辑。</span></div></div><div id=\"h8j4nbkQEeqzAj9TtDy5AL\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">可以是可以，但是不优雅，因为这些通用的逻辑侵入到了业务逻辑里面，形成了耦合。那如何进行不侵入性的操作呢？</span></div></div><div id=\"eYyPRLuw7uz6kS8p1K6Bx5\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">是不是可以在调用 Controller 前后加入一个执行通用逻辑的阶段？</span></div></div><div id=\"4CBKnojG9LQv2aEWYVXjq9\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/image_4.png\" style=\"width: 412px\"/></figure></div><div id=\"qKhwqHmMUUgXnURkNSKBQc\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这样的横向扩展点就叫做切面，这种非侵入式的加入一些切面逻辑的编程方式就叫做 AOP （面向切面编程）。</span></div></div><aside id=\"iyxcwfctwupDZiSPYcPvyJ\" class=\"bg-cultured wolai-block\"><div data-symbol=\"📌\" class=\"icon\"></div><span class=\"inline-wrap\">AOP 主要的思想是将我们对于业务逻辑无关的一些操作，比如日志记录、性能统计、安全控制、异常处理、错误上报等，将这些操作从业务逻辑中剥离出来，将它们放在一些独立的方法中，然后如果我们对这些操作做修改的时候就可以不用影响到业务逻辑相关的代码。它主要体现了我们对代码的低耦合性的追求。</span></aside><div id=\"5qRYX3xkNAFLFzKxrEfEDV\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"tik6TfN5zWdMWnCFLtN8FH\" class=\"wolai-block\"><span class=\"inline-wrap\">Express<span class=\"jill\"></span>中的<span class=\"jill\"></span>AOP</span></h3><div id=\"drnUWLTbp67nNyf2ZbPNZD\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在说<span class=\"jill\"></span>Nest<span class=\"jill\"></span>之前，先来看看<span class=\"jill\"></span>Express<span class=\"jill\"></span>中的中间件，其洋葱模型也是一种 AOP 的实现，因为你可以透明的在外面包一层，加入一些逻辑，内层感知不到。</span></div></div><div id=\"chxh8VDWSvcWY5CJoyzZEm\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/image_5.png\" style=\"width: 418px\"/></figure></div><div id=\"qHpcNwX86Z54bDJGko9dAR\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在中间件函数中，可以执行以下任何任务</span></div></div><ul class=\"wolai-block\"><li id=\"eTPyjixVjwt6NyE754fiUj\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">执行任何代码</span></li><li id=\"gimMBiKXhKYwraQHvHTGL3\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">修改 </span><span class=\"inline-wrap\"><code>request</code></span><span class=\"inline-wrap\"> 或 </span><span class=\"inline-wrap\"><code>response</code></span><span class=\"inline-wrap\"> 响应对象【同一个生命周期】</span></li><li id=\"k849TgVE2VfQaMM4HCWNce\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">结束请求响应周期</span></li><li id=\"uet47fxEotBYacLY7tkbjj\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">调用下一个中间件</span></li></ul><div id=\"592UL1AzoonKNQTzDwRukQ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">简单看看<span class=\"jill\"></span>Express<span class=\"jill\"></span>的中间件的使用：</span></div></div><code-block id=\"55d8AGTu2KrcnTh3CDycMT\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token comment\">// 洋葱模型</span>\n<span class=\"token comment\">// 全局使用中间件</span>\napp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">use</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'全局中间件 start'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// 调用下一个中间件</span>\n  <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'全局中间件 end'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 单独中间件</span>\napp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"单独中间件 start\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"单独中间件 end\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"处理请求 start\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"get method!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"处理请求 end\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 运行结果</span>\n<span class=\"token comment\">// 全局中间件 start</span>\n<span class=\"token comment\">// 单独中间件 start</span>\n<span class=\"token comment\">// 处理请求 start</span>\n<span class=\"token comment\">// 处理请求 end</span>\n<span class=\"token comment\">// 单独中间件 end</span>\n<span class=\"token comment\">// 全局中间件 end</span>\n</pre></div></code-block><div id=\"qkATGmmtjSiHW2m3RxXaWs\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">可以看到它的执行机制，以<span class=\"jill\"></span>next()方法为分水岭，先执行所有中间件的<span class=\"jill\"></span>next()方法前半部分，然后从后往前执行中间件<span class=\"jill\"></span>next()方法的下半部分。这就是著名的洋葱模型。</span></div></div><div id=\"fZXgaR1NFHxSwJvXXqBaU5\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">可以简化为：</span></div></div><code-block id=\"x2yggnv9R2kzrbZXU6goi6\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre>app<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">use</span><span class=\"token punctuation\">(</span>globalMiddleware<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"route\"</span><span class=\"token punctuation\">,</span> middleware1<span class=\"token punctuation\">,</span> middlewar2<span class=\"token punctuation\">,</span> <span class=\"token spread operator\">...</span><span class=\"token punctuation\">,</span> mainMethod<span class=\"token punctuation\">)</span>\n</pre></div></code-block><div id=\"qADE4bJoUou3MRaocciyd7\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"3JsczvbY7yJn2sBjR5pwfz\" class=\"wolai-block\"><span class=\"inline-wrap\">Nest<span class=\"jill\"></span>中的<span class=\"jill\"></span>AOP</span></h3><div id=\"g8zGsCkUC3ikqn3NwfMQQh\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest 实现 AOP 的方式更多，一共有五种，包括 Middleware、Guard、Pipe、Interceptor、ExceptionFilter。</span></div></div><div id=\"aKWyXpt9WFzepz8n3ykCKt\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h4 id=\"pVfQ4QQEdppMfKeG6stair\" class=\"wolai-block\"><span class=\"inline-wrap\">中间件 Middleware</span></h4><div id=\"sQnUx46rHZMfTNymHwFZ1E\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest 的底层是<span class=\"jill\"></span>Express，所以也有中间件 Middleware 的概念，它和 Express 的 Middleware 很像，但不完全一样。</span></div></div><div id=\"brS8GS6yeu6TkBaZyx5iR1\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"93y7HbdpchqTEMDBqoQ4h4\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">举个例子，我们首先创建了一个中间件</span><span class=\"inline-wrap\"><code>AppMiddleware</code></span><span class=\"inline-wrap\"> ，:</span></div></div><code-block id=\"krSYNxGrVnJvcyn3CoqBmv\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">Injectable</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">NestMiddleware</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">Request</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Response</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppMiddleware</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">NestMiddleware</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">use</span><span class=\"token punctuation\">(</span>req<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Request</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">res</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Response</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">next</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'brefore'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'after'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></pre></div></code-block><div id=\"s5nqDt2oPxR8Lao3HdqtMv\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">然后在<span class=\"jill\"></span>AppModule<span class=\"jill\"></span>中使用这个中间件：</span></div></div><code-block id=\"kYTyCGxiBTauJPTvk3uHTb\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">AppMiddleware</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'. /app.middleware'</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">MiddlewareConsumer</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Module</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">NestModule</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">AppController</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'. /app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">AppService</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'. /app.service'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Module</span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">imports</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">controllers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">AppController</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">providers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">AppServicel</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">NestModule</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">configure</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">consumer</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">MiddlewareConsumer</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    consumer<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">apply</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">AppMiddleware</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forRoutes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></pre></div></code-block><div id=\"gFwXqGMN49Bk4kPZmVnHzy\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">实现 NestModule 接口的 </span><span class=\"inline-wrap\"><code>configure</code></span><span class=\"inline-wrap\"> 方法，在里面应用 AppMiddleware 到</span><span class=\"inline-wrap\"><b>所有路由</b></span><span class=\"inline-wrap\">。这里的</span><span class=\"inline-wrap\"><code>*</code></span><span class=\"inline-wrap\">也可以修改为</span><span class=\"inline-wrap\"><code>&#123; path: &#39;route&#39;, method: RequestMethod.GET &#125;</code></span><span class=\"inline-wrap\">指定具体的路由应用具体的中间件。</span></div></div><div id=\"vpU3iB5GV523F7Fzk2HQh8\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">到这里与<span class=\"jill\"></span>Express<span class=\"jill\"></span>中间件还是蛮一样的，只是将中间件从</span><span class=\"inline-wrap\"><code>function</code></span><span class=\"inline-wrap\">变成了</span><span class=\"inline-wrap\"><code>class</code></span><span class=\"inline-wrap\">的形式 ；</span></div></div><div id=\"oEbzEWsp6BbfqW7LQ47tdf\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><aside id=\"iqmZTbNkeSm25vz28iouwy\" class=\"bg-cultured wolai-block\"><div data-symbol=\"📌\" class=\"icon\"></div><span class=\"inline-wrap\">Nest 为什么要把 Middleware 做成 class 有什么好处呢？</span></aside><div id=\"q4MhBmsh4UnRHcGgCMSXWx\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">好处就是可以使用</span><span class=\"inline-wrap\"><b>依赖注入</b></span><span class=\"inline-wrap\">。</span></div></div><div id=\"SkrfCihGPvBEHMT2zhfT6\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">我们通过 </span><span class=\"inline-wrap\"><code>@Inject</code></span><span class=\"inline-wrap\"> 或者构造器 将 AppService 注入到 middleware 里：</span></div></div><code-block id=\"Mb88VUGHYySXRre713nMr\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">Injectable</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Inject</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">NestMiddleware</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">Request</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Response</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppMiddleware</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">NestMiddleware</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token keyword\">private</span> readonly appService<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">AppService</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token comment\">// @Inject (AppService)</span>\n  <span class=\"token comment\">// private readonly appService: AppService;</span>\n  \n  <span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">req</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Request</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">res</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Response</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">next</span><span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">Function</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// do some...</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">appService</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Request...'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></pre></div></code-block><div id=\"79339MdmLYni98Q5v4RuzP\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">当访问这个路由的时候，中间件里便会调用了 AppService<span class=\"jill\"></span>中的<span class=\"jill\"></span>method<span class=\"jill\"></span>方法。</span></div></div><div id=\"bUVPxv3aBn2PpF1Ws25Rew\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">举例一个场景：</span></div><div id=\"319myMkRg3DEQYsJnVeLdE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">假设我们有一个应用程序，需要对所有传入的请求进行安全检查，以防止被 XSS（跨站点脚本攻击）或 CSRF（跨站点请求伪造）等攻击。我们可以实现一个 </span><span class=\"inline-wrap\"><code>SecurityMiddleware</code></span><span class=\"inline-wrap\"> 中间件来处理这些安全问题，并将 </span><span class=\"inline-wrap\"><code>SecurityService</code></span><span class=\"inline-wrap\"> 通过依赖注入的方式注入到 </span><span class=\"inline-wrap\"><code>SecurityMiddleware 中</code></span><span class=\"inline-wrap\">，代码如下所示：</span></div></div><code-block id=\"dBH9CfV6UGVBTsdXuV1BT7\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">Injectable</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">NestMiddleware</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">Request</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Response</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">SecurityService</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./security.service'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SecurityMiddleware</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">NestMiddleware</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token keyword\">private</span> readonly securityService<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">SecurityService</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">use</span><span class=\"token punctuation\">(</span>req<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Request</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">res</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Response</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">next</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> isXss <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">securityService</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">checkXssAttack</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span><span class=\"token property-access\">body</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>isXss<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword control-flow\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Invalid request data'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">const</span> isCsrf <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">securityService</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">checkCsrfAttack</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span><span class=\"token property-access\">cookies</span><span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">.</span><span class=\"token property-access\">headers</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>isCsrf<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword control-flow\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">403</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'CSRF attack detected'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></pre></div></code-block></div><div id=\"dsz9K2ytgdkuW1uw7QQ99g\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">然后将 SecurityMiddleware 注册到应用程序中。代码如下所示：</span></div></div><div id=\"vafTpS1XcJdj3KgXhxymSB\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><code-block id=\"4E9fgFP8FqMGHbNFJdwqPd\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">MiddlewareConsumer</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Module</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">NestModule</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">AppController</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">AppService</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">SecurityMiddleware</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./security.middleware'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">&#123;</span> <span class=\"token maybe-class-name\">SecurityService</span> <span class=\"token punctuation\">&#125;</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./security.service'</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">imports</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">controllers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">AppController</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">providers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">AppService</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">SecurityService</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">NestModule</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">configure</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">consumer</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">MiddlewareConsumer</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    consumer<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">apply</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">SecurityMiddleware</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forRoutes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>` \n</pre></div></code-block><div id=\"ocv3qXAbgu8WHUCTZ7ReUS\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在上面的代码中，我们通过 </span><span class=\"inline-wrap\"><code>consumer.apply(SecurityMiddleware).forRoutes(&#39;*&#39;)</code></span><span class=\"inline-wrap\"> 将 SecurityMiddleware 注册到了应用程序的所有路由中。这样，在访问任何路由时，都会自动触发 SecurityMiddleware 进行安全检查。</span></div></div><div id=\"ane173KGSUBNpzTE8wLTka\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这就是 Nest 注入的依赖。</span></div></div><blockquote id=\"aVGvTEJvULnGf2kdNuQpPm\" class=\"wolai-block\"><span class=\"gray inline-wrap\">如果不需要注入依赖，那可以写函数形式的 middleware，这时候和 Express 的 middleware 就没啥区别了。</span></blockquote><div id=\"w5GdNxNLqoYySPLtrDxy9H\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">其他实现<span class=\"jill\"></span>AOP<span class=\"jill\"></span>的方式（ Guard、Pipe、Interceptor、ExceptionFilter）其实与中间件类似，只是实现不同的接口的不同方法：</span></div></div><details id=\"cwAURA6MrXmnTFtev1Krsa\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">Guard：实现<span class=\"jill\"></span>CanActivate 接口的<span class=\"jill\"></span>canActivate<span class=\"jill\"></span>方法，返回 true、false 来表示是否继续。</span></summary><div id=\"cQ6rDizwGedPgizgcw1qEg\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@UseGuards(XxxGuard)</code></span></div></div><div id=\"mx3yNUgTjPwkj44s3SCTD7\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_6.png\" style=\"width: 708px\"/></figure></div></details><details id=\"ty6bnFmU721NJXL5vEfAe9\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">Pipe：实现<span class=\"jill\"></span>PipeTransform<span class=\"jill\"></span>接口的<span class=\"jill\"></span>transform<span class=\"jill\"></span>方法，对传入<span class=\"jill\"></span>Controller<span class=\"jill\"></span>的参数做验证或转换，也可抛出异常。</span></summary><div id=\"rCh6UprP7WiiBDCFNzQYw3\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_7.png\" style=\"width: 714px\"/></figure></div></details><details id=\"9T9YPz9Qhe33mKNnjdbiw6\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">Interceptor：实现<span class=\"jill\"></span>NestInterceptor<span class=\"jill\"></span>接口的<span class=\"jill\"></span>intercepe<span class=\"jill\"></span>方法，可以对请求前后加入一些逻辑。</span></summary><div id=\"4MogBtmj4Asrt2aYK3f8xq\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_8.png\" style=\"width: 712px\"/></figure></div></details><details id=\"harMnRctrHcAqu626MQMHd\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">ExceptionFilter： 实现<span class=\"jill\"></span>ExceptionFilter<span class=\"jill\"></span>接口的<span class=\"jill\"></span>catch<span class=\"jill\"></span>方法，捕捉异常，返回友好信息给客户端。</span></summary><div id=\"9DyHG9JTqerrFhmvYocvJA\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_9.png\" style=\"width: 709px\"/></figure></div></details><div id=\"as1ffYuriThjPHSSEYQquQ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">但本质上都是通用逻辑的抽离封装。整个请求生命周期大概是：</span></div></div><div id=\"fh6NtkEgMgLu3NWmvsumVU\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"nz2KpTfHxbyAr4JUJXrjNW\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/image_10.png\" style=\"width: 100%\"/></figure></div><ul class=\"wolai-block\"><li id=\"3jLEiggq1DpvhAYjPAPdyd\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">首先，请求会被 middleware 处理，这一层可以复用 express 的中间件生态，也可以是 Nest 的那种 class 的 middleware，可以注入 provider。</span></li><li id=\"eD1GUTUVMyvawmCJHjdZjj\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">然后在具体的路由会经历 Guard 的处理，可以实现权限验证等功能。</span></li><li id=\"6SSzNF2Gj2vjPPTa59Vt47\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">之后是 Interceptor 可以在请求前后做一些处理</span></li><li id=\"cJ3YNBNycMw9UbJw39Q4GU\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">在到达 handler（controller） 之前，还会对参数用 Pipe 做下检验和转换。</span></li><li id=\"xqTc2Jsw2y6bP2LpPJaCLH\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">这个过程中不管是哪一层抛的异常，都会被 Exception Filter 处理下，返回给用户友好的响应信息。</span></li></ul><div id=\"t8DC7f5MAQwTuGYSDjCLud\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"7Cqkthj9YozrFCm5cVEvsU\" class=\"wolai-block\"><span class=\"inline-wrap\">跨平台</span></h2><div id=\"mLxJERKka3GB9kJ6hnpBLk\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">前面说，Nest 的底层平台是 Express，其实并不准确，Nest 并没有和 Express 耦合。</span></div></div><div id=\"iTyXDC7S2k6fj5Jxx5sZf2\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">它所有的上层代码都是基于一个抽象的接口的，而这个接口有 Express 和 Fastify 两种实现，默认是<span class=\"jill\"></span>Express，即使有一天，有一个新的 http 库取代了 express，对 nest 也没有什么影响，只要加一个新平台的适配器就可以了。</span></div></div><div id=\"u8RfABvNaUff8Nkt3DmD1m\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/image_11.png\" style=\"width: 100%\"/></figure></div><div id=\"aKPxCn4rmrTUQkx7ryVnHF\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_12.png\" style=\"width: 782px\"/></figure></div><div id=\"mbMkYrTEVoDAens2QC1uxd\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">不只是 http<span class=\"jill\"></span>服务 可以切换具体的底层平台，websocket 也是，可以切换 socket.io 和 ws：</span></div></div><div id=\"73Kk77P6vUM6fgEvwVf3Zk\" class=\"wolai-block\"><figure class=\"wolai-center\" style=\"width: 100%\"><img src=\"media/image_13.png\" style=\"width: 100%\"/></figure></div><div id=\"eFCgnCtXFcEwjwWEWocTY7\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"KpZXyTD1asWtLo7LztRAt\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">另外，Nest 支持创建 HTTP 服务、WebSocket 服务，还有基于 TCP 通信的微服务。</span></div></div><div id=\"4n6Hgftnj19CUaEDvNZvxM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">你写的一些 Guard、Exception Filter、Interceptor、Pipe 也可以用在 Websocket 和微服务里，</span></div></div><div id=\"fcPLZz4DtTenowpmnAfRiE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest<span class=\"jill\"></span>提供了 </span><span class=\"inline-wrap\"><code>ArgumentsHost</code></span><span class=\"inline-wrap\"> 类，在切面里拿到它之后，可以判断出当前是什么上下文：</span></div></div><div id=\"8baGmiveCvxNZXiRbPYQ9H\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">比如：</span></div></div><code-block id=\"K16BkBaAY4SW8gKBGHZeh\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"JavaScript\" class=\"marker\"></div><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">ArgumentsHost</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Catch</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">ExceptionFilter</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Response</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">CustomerException</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./CustomerException'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Catch</span></span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">CustomerException</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomerFilter</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ExceptionFilter</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">catch</span><span class=\"token punctuation\">(</span>exception<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">CustomerException</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">host</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">ArgumentsHost</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'http'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> host<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">switchToHttp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token property-access\">getResponse</span><span class=\"token operator\">&lt;</span><span class=\"token maybe-class-name\">Response</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> request <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token property-access\">getRequest</span><span class=\"token operator\">&lt;</span><span class=\"token maybe-class-name\">Request</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      response\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">aaa</span><span class=\"token operator\">:</span> exception<span class=\"token punctuation\">.</span><span class=\"token property-access\">aaa</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">bbb</span><span class=\"token operator\">:</span> exception<span class=\"token punctuation\">.</span><span class=\"token property-access\">bbb</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'ws'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> host<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">switchToWs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'rpc'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> host<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">swtichToRpc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"826rziBDy275T4yXZmz7AW\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这样就实现了切面的跨上下文复用。</span></div></div><div id=\"4ZKKPVqX7jTapmPQzn2Jy9\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h1 id=\"dX21ftTSei5ZP4YtpDC977\" class=\"wolai-block\"><span class=\"inline-wrap\">总结</span></h1><div id=\"LBT8MH1rkr2zSzs8EYFT2\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest 是在 express 之上封装的一层，提供了很多架构的能力：</span></div></div><ul class=\"wolai-block\"><li id=\"e3Aumfx8zqZjgJF5xLQkMD\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><b>IOC</b></span><span class=\"inline-wrap\">：自己实现了模块机制，可以导入导出 provider，实现自动依赖注入，简化了对象的创建</span></li><li id=\"8y9hbYMJpBAUfowDAjnLp\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><b>AOP</b></span><span class=\"inline-wrap\">：抽象了 Middleware、Guard、Interceptor、Pipe、Exception Filter 这 5 种切面，可以通过切面抽离一些通用逻辑，然后动态添加到某个流程中。</span></li><li id=\"7v4YvPtRoGfc9mqtMiEdgh\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">跨平台：Nest 基于 ts 的 interface 实现了不和任何底层平台耦合，http 可以切换 express 和 fastify，websocket 可以切换 socket.io 和 ws。而且 5 种切面也实现了可以跨 http、websocket、微服务来复用。</span></li></ul><div id=\"egkP56EnesGm3UpXu4ACsX\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">有了这三种架构特性，代码自然会变得松散耦合、易于扩展，易于维护。</span></div></div><div id=\"pxyotxac3Chfd5xSTWEv6g\" class=\"wolai-block wolai-text\"><div></div></div></article><footer></footer></body></html>"},{"title":"Nest中的装饰器","_content":"\n<!DOCTYPE html>\n<html lang=\"zh-Hans-CN\"><head><meta charset=\"utf-8\"/><meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/modern-norm.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/prism.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/katex.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/wolai.css\"/><title>Nest中的装饰器 - wolai 笔记</title><link rel=\"shortcut icon\"></link></head><body class=\"full-width\"><header><div class=\"image has\" style=\"background-position-y: 50%; background-image: url(&quot;https://cdn.wostatic.cn/cover/painting/26HnnzT7aex1JAZ7fiAirc.jpg&quot;)\"></div><div class=\"title\"><div class=\"banner\"><div class=\"icon\"></div></div><div data-title=\"Nest中的装饰器\" class=\"main-title\"></div></div></header><article><h2 id=\"kfs9RQGPHcqMqeoQUqgSEL\" class=\"wolai-block\"><span class=\"inline-wrap\">回顾</span></h2><div id=\"xp4jdqwNXNrbFPzvc2c8y2\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">前两篇中主要介绍了<span class=\"jill\"></span>Nest<span class=\"jill\"></span>的入门使用以及一些框架特性，包括模块、控制器、服务注入、Http<span class=\"jill\"></span>服务、数据库服务等功能，都涉及到很多的装饰器，这一篇会介绍<span class=\"jill\"></span>Nest<span class=\"jill\"></span>中的装饰器，以及工作原理。</span></div></div><h2 id=\"8frTphd6WnbW2Gz9kQX8nK\" class=\"wolai-block\"><span class=\"inline-wrap\">引言</span></h2><h3 id=\"aXDSgBmbwUv5HtUajZEgp\" class=\"wolai-block\"><span class=\"inline-wrap\">装饰器在 Nest 中的角色</span></h3><ul class=\"wolai-block\"><li id=\"tp5hUhETK47nNjYNiprmWJ\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">在 NestJS 中，装饰器是一种强大的工具，对于</span><span class=\"inline-wrap\"><b>扩展或修改类、方法、属性或参数</b></span><span class=\"inline-wrap\">的行为，提供了优雅而灵活的方式，使开发人员能够</span><span class=\"inline-wrap\"><b>在不修改原始代码的情况下</b></span><span class=\"inline-wrap\">添加或修改功能。</span></li><li id=\"nzxs1CoQ8JVQeKapPsJa5g\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">装饰器应用非常广泛，包括</span><span class=\"inline-wrap\"><b>路由、控制器、服务、依赖注入</b></span><span class=\"inline-wrap\">等。它们可以用于定义路由处理程序、中间件、管道，使开发者能够</span><span class=\"inline-wrap\"><b>更专注于业务逻辑的实现</b></span><span class=\"inline-wrap\">，而不必过多关注底层框架细节。</span></li><li id=\"imwJWsnNv4joWeZJA7kxuw\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">NestJS 通过装饰器，提供了</span><span class=\"inline-wrap\"><b>声明式的编程方式</b></span><span class=\"inline-wrap\">，使代码更清晰、易于维护。开发者可以通过在类、方法或属性上应用装饰器来定义元数据或增强其行为，提高代码的</span><span class=\"inline-wrap\"><b>可读性和可维护性</b></span><span class=\"inline-wrap\">。</span></li></ul><h2 id=\"nzaxxzzXj35YibEtADNUcm\" class=\"wolai-block\"><span class=\"inline-wrap\">NestJS 装饰器基础</span></h2><h3 id=\"u3b5D98NuVTAc13aqDMr4m\" class=\"wolai-block\"><span class=\"inline-wrap\">类装饰器</span></h3><ul class=\"wolai-block\"><li id=\"9jUtK6JSizJmiDy2p2JSSY\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">模块相关</span><details id=\"x7BqRk5i3EQojs1W3JCRRe\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Module()</code></span><span class=\"inline-wrap\">: 声明 Nest 模块。</span></summary><code-block id=\"3pJH2UXmTmf8RZEpYks6e3\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppController <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></pre></div></code-block></details><details id=\"t6baGLxJPrsmT42Li8eKV8\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Global()</code></span><span class=\"inline-wrap\">: 声明全局模块。</span></summary><code-block id=\"hzfaHbGf4sed5zYjtjNNXH\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// helper.module.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module<span class=\"token punctuation\">,</span> Global <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HelperService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./helper.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Global</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>HelperService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  exports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>HelperService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelperModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n</pre></div></code-block><div id=\"bPu8gqVFv1RVUgs8Hrk9gp\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">创建了 </span><span class=\"inline-wrap\"><code>HelperModule</code></span><span class=\"inline-wrap\">，并导入了 </span><span class=\"inline-wrap\"><code>HelperService</code></span><span class=\"inline-wrap\">，同时使用 </span><span class=\"inline-wrap\"><code>@Global()</code></span><span class=\"inline-wrap\"> 装饰器标记为全局模块。</span></div></div><code-block id=\"5aYFVr9uNVb6n82zYkqn3w\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// helper.service.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Injectable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelperService</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">generateUniqueId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 实际应用中可能会使用更复杂的算法</span>\n    <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">36</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block><div id=\"8NPDr4CcQNk1AFhSWLHGhk\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>HelperService</code></span><span class=\"inline-wrap\"> 提供了一个生成唯一标识符的简单功能。</span></div></div><code-block id=\"f2TqgKZp5WKZBRNkc9JTV4\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// app.module.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HelperModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./helper/helper.module'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppController <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>HelperModule<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"8vBxLgvSKYPgNH3EAmRhMM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">通过将 </span><span class=\"inline-wrap\"><code>HelperModule</code></span><span class=\"inline-wrap\"> 导入到 </span><span class=\"inline-wrap\"><code>AppModule</code></span><span class=\"inline-wrap\"> 中，我们确保整个应用程序都可以访问 </span><span class=\"inline-wrap\"><code>HelperService</code></span><span class=\"inline-wrap\"> 提供的功能。</span></div></div><code-block id=\"vgscJWEMr22fTbny9Zac8S\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// app.controller.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// import { HelperService } from './helper/helper.service'; 不需要再单独导入</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> appService<span class=\"token operator\">:</span> AppService<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> helperService<span class=\"token operator\">:</span> HelperService<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> uniqueId <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>helperService<span class=\"token punctuation\">.</span><span class=\"token function\">generateUniqueId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> message <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>appService<span class=\"token punctuation\">.</span><span class=\"token function\">getAppMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>message<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> Unique ID: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>uniqueId<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block><div id=\"pBx7hSfDYJMYhwm5rffDsk\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>HelperService</code></span><span class=\"inline-wrap\"> 被注入到 </span><span class=\"inline-wrap\"><code>AppController</code></span><span class=\"inline-wrap\"> 中，然后使用 </span><span class=\"inline-wrap\"><code>generateUniqueId</code></span><span class=\"inline-wrap\"> 方法生成一个唯一标识符。通过这种方式，你可以在整个应用程序中的任何地方注入 </span><span class=\"inline-wrap\"><code>HelperService</code></span><span class=\"inline-wrap\"> 并使用其中的方法，而不需要在每个模块中都重复导入或提供 </span><span class=\"inline-wrap\"><code>HelperService</code></span><span class=\"inline-wrap\">。这有助于避免代码重复，提高可维护性，并确保全局模块中的功能在整个应用中可用。</span></div></div></details></li><li id=\"xdaHL9A11uP4YXX2hFtusP\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">控制器相关</span><details id=\"tVhxgsi7BU27oG5siA7Sys\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Controller()</code></span><span class=\"inline-wrap\">: 声明模块里的控制器。</span></summary><code-block id=\"iHiaayYBefy4nefJAJGV95\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Hello World!'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre></div></code-block></details></li><li id=\"tbMyxVLfWHVHDbrPYD3fBW\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">提供者（服务）相关\n</span><details id=\"2HKVHGR1dKU9sUvHNTfM1q\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Injectable()</code></span><span class=\"inline-wrap\">: 声明模块里可以注入的提供者（服务）。</span></summary><code-block id=\"tKwkqKtfZcie9fRKQB2yVm\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppService</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Hello World!'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"cTcwJ7SjSZJryznRuAPQPq\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Inject</code></span><span class=\"inline-wrap\">：通过 token 手动指定注入的 provider，token 可以是 class 或者 string</span></summary><code-block id=\"kcYwjFanD9XnXktzV9a92e\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// app.service.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Injectable<span class=\"token punctuation\">,</span> Inject <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> LoggerService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./logger.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppService</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Inject</span></span><span class=\"token punctuation\">(</span>LoggerService<span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> logger<span class=\"token operator\">:</span> LoggerService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getAppMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Getting app message...'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Hello from AppService!'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"4xts2F2s5p1FRGYnkrt9Lm\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Optional()</code></span><span class=\"inline-wrap\">: 声明注入的依赖服务是可选的，可以为空。(注入的依赖如果没有的话，创建对象时会报错)</span></summary><code-block id=\"9M3qvatK2JCkJ9vQfJnMDP\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// optional.service.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Injectable<span class=\"token punctuation\">,</span> Optional <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">OptionalService</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Optional Service Data'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// app.service.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Injectable<span class=\"token punctuation\">,</span> Optional <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OptionalService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./optional.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppService</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Optional</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> optionalService<span class=\"token operator\">:</span> OptionalService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> optionalData <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>optionalService <span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>optionalService<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Optional service is not available'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello World! </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>optionalData<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details></li></ul><div id=\"g5SsJdwmgrQV34x4wArCoQ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"nmG2tHRpx4WG9TVNL2ydHf\" class=\"wolai-block\"><span class=\"inline-wrap\">方法装饰器</span></h3><ul class=\"wolai-block\"><li id=\"N87vrx7k8PAGFbW9QLAaq\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">HTTP 相装饰器</span><details id=\"pfg8wncCWvghPknMY9Wu4w\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b><code>@Get()</code></b></span><span class=\"inline-wrap\"><b>、</b></span><span class=\"inline-wrap\"><b><code>@Post()</code></b></span><span class=\"inline-wrap\"><b>、</b></span><span class=\"inline-wrap\"><b><code>@Put()</code></b></span><span class=\"inline-wrap\"><b>、</b></span><span class=\"inline-wrap\"><b><code>@Patch()</code></b></span><span class=\"inline-wrap\"><b>、</b></span><span class=\"inline-wrap\"><b><code>@Delete()</code></b></span><span class=\"inline-wrap\"><b> 、@Options()、@Head()等装饰器：</b></span></summary><code-block id=\"8jyFVj6JxwVtNMZcR2tEdH\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Post<span class=\"token punctuation\">,</span> Put<span class=\"token punctuation\">,</span> Patch<span class=\"token punctuation\">,</span> Delete <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'GET request handled'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Post</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">postData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'POST request handled'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Put</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">putData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'PUT request handled'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Patch</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">patchData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'PATCH request handled'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Delete</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">deleteData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'DELETE request handled'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"eyot87xodUjPeJvBTXX4yr\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@HttpCode()</code></span><span class=\"inline-wrap\">: 修改响应的状态码。</span></summary><code-block id=\"wEDRbMLTcaTEhmjocNTZVH\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> HttpCode <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">HttpCode</span></span><span class=\"token punctuation\">(</span><span class=\"token number\">201</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 将 HTTP 状态码设置为 201 Created</span>\n  <span class=\"token function\">getExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'带有自定义状态码的示例响应'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"7nahEPYLNEJCKaMovKdRtn\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Header()</code></span><span class=\"inline-wrap\">: 修改响应头。</span></summary><code-block id=\"t7RPy39xrj6JA2QHHwwgnL\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Header <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Header</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'Cache-Control'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'no-store'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 将 Cache-Control 头设置为 'no-store'</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Header</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'Custom-Header'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Custom-Value'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 添加自定义头部</span>\n  <span class=\"token function\">getExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'带有自定义头部的示例响应'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"cvwrLoxSqUG878njdZuQdE\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Redirect()</code></span><span class=\"inline-wrap\">: 指定重定向的 URL。</span></summary><code-block id=\"ai6XhJzXECxW4yWpvZ5zUM\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Redirect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'redirect'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Redirect</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.example.com'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 重定向到指定的 URL</span>\n  <span class=\"token function\">getRedirectExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 由于重定向，此方法将不会被执行</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"4w27YzafxMprPDzrotypXz\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Render()</code></span><span class=\"inline-wrap\">: 指定渲染用的模板引擎。</span></summary><code-block id=\"tr2XaTmi2G2GZZgJrPUWsr\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Render <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'render'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Render</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'index'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用默认视图引擎渲染 'index' 模板</span>\n  <span class=\"token function\">getRenderExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> message<span class=\"token operator\">:</span> <span class=\"token string\">'你好，NestJS！'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 传递给视图的数据</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details></li></ul><h3 id=\"vKAFFYKnWjSxexv2LJy9hB\" class=\"wolai-block\"><span class=\"inline-wrap\">参数装饰器</span></h3><ul class=\"wolai-block\"><li id=\"wEKfqXLfkt18LgQUNcLtxk\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><b>请求对象和响应对象相关</b></span><details id=\"tWyWdm6S3NwCnoC1MfbJ5v\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Req()</code></span><span class=\"inline-wrap\">, </span><span class=\"inline-wrap\"><code>@Request()</code></span><span class=\"inline-wrap\">: 注入 request 对象。</span></summary><div id=\"gkhd2LPyoQt6MQGFy2B8oJ\" class=\"wolai-block wolai-text\"><div></div></div><code-block id=\"2uQkyxKQEPhqD2E2LR74JY\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Req<span class=\"token punctuation\">,</span> Request <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Request <span class=\"token keyword\">as</span> ExpressRequest <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Req</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> request<span class=\"token operator\">:</span> ExpressRequest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Request URL: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>request<span class=\"token punctuation\">.</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'/alternative'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getDataAlternative</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Request</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> request<span class=\"token operator\">:</span> ExpressRequest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Request URL (Alternative): </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>request<span class=\"token punctuation\">.</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"eNaMZsRKy1fMZQRhx6WUo\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Res()</code></span><span class=\"inline-wrap\">, </span><span class=\"inline-wrap\"><code>@Response()</code></span><span class=\"inline-wrap\">: 注入 response 对象，</span></summary><code-block id=\"gTZRRrtN9cm6cQGM9k9UE9\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Res<span class=\"token punctuation\">,</span> Response <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Response <span class=\"token keyword\">as</span> ExpressResponse <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">sendData</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Res</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> response<span class=\"token operator\">:</span> ExpressResponse<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello, World!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'/alternative'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">sendDataAlternative</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Response</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> response<span class=\"token operator\">:</span> ExpressResponse<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello, World! (Alternative)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details></li><li id=\"6UuCpiMW1u7Kt484TDVyMh\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><b>路由参数相关</b></span><details id=\"tMvXBC8YDsJJHfiap1Hv95\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Param()</code></span><span class=\"inline-wrap\">: 取出 URL 中的参数。</span></summary><div id=\"vQHXmq8EEHfpcQurSwkLkE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Param(&#39;id&#39;)</code></span><span class=\"inline-wrap\"> 用于提取 URL 中的参数，并将其作为方法参数传递给 </span><span class=\"inline-wrap\"><code>getData</code></span><span class=\"inline-wrap\"> 方法。</span></div></div><code-block id=\"jF5zCWQeaDJAEGRsybxiQt\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Param <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">':id'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Param</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span> id<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Data for ID </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"7RuFiw3vY5SMPV49jp5mok\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Query()</code></span><span class=\"inline-wrap\">: 取出 query 部分的参数。</span></summary><div id=\"bfb7GWupyuEKBUQPT91bVZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Query(&#39;param&#39;)</code></span><span class=\"inline-wrap\"> 用于提取 URL 查询参数，并将其作为方法参数传递给 </span><span class=\"inline-wrap\"><code>getData</code></span><span class=\"inline-wrap\"> 方法。</span></div></div><code-block id=\"qJ9FX8EAUmYEuQKAE7k8BB\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Query <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Query</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'param'</span><span class=\"token punctuation\">)</span> param<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Received query parameter: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>param<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"cTy1m8JwNpKeFxxNYVKhRy\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Body()</code></span><span class=\"inline-wrap\">: 取出请求 body，通过 DTO class 来接收。</span></summary><div id=\"k65opH8jGw47RoQQ2ccx7G\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Body()</code></span><span class=\"inline-wrap\"> 用于提取请求体中的数据，并将其作为方法参数传递给 </span><span class=\"inline-wrap\"><code>createItem</code></span><span class=\"inline-wrap\"> 方法。</span></div></div><code-block id=\"3P7iHCeN69oEgMxB2U3Vor\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Post<span class=\"token punctuation\">,</span> Body <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CreateItemDto</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  description<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Post</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">createItem</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Body</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> createItemDto<span class=\"token operator\">:</span> CreateItemDto<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Logic to create an item using the provided data</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Created item: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>createItemDto<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"8r7YqqAocmKMSq7SGeM6K5\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Headers()</code></span><span class=\"inline-wrap\">: 取出某个或全部请求头。</span></summary><div id=\"obvCgB8RZU7pUBRkCcuf4K\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Headers(&#39;authorization&#39;)</code></span><span class=\"inline-wrap\"> 用于提取请求头中的 </span><span class=\"inline-wrap\"><code>authorization</code></span><span class=\"inline-wrap\"> 数据，并将其作为方法参数传递给 </span><span class=\"inline-wrap\"><code>getData</code></span><span class=\"inline-wrap\"> 方法</span></div></div><code-block id=\"fhLbETPErZuX1wk4fJh8T6\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Headers <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Headers</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'authorization'</span><span class=\"token punctuation\">)</span> authorization<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Authorization header: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>authorization<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"aYQyAykCpTshrvj89A8zrd\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Session()</code></span><span class=\"inline-wrap\">: 取出 session 对象，需要启用 express-session 中间件。</span></summary><div id=\"8qFhqgC31xbiujXHF1SULw\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Session()</code></span><span class=\"inline-wrap\"> 装饰器允许你访问存储在用户会话中的数据。</span></div></div><blockquote id=\"uwtcpyXxjwX363mQHPycQL\" class=\"wolai-block\"><span class=\"inline-wrap\">确保在使用 </span><span class=\"inline-wrap\"><code>@Session()</code></span><span class=\"inline-wrap\"> 装饰器之前，你已经正确配置并启用了 </span><span class=\"inline-wrap\"><code>express-session</code></span><span class=\"inline-wrap\"> 中间件。</span></blockquote><code-block id=\"asqXAUZkKX77h6UaR8Z3JR\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Session <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Session</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> session<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Access session data</span>\n    <span class=\"token keyword\">const</span> userId <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>userId<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">User ID from session: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>userId<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"mDN9EKQroCPwZip9vZsFoo\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@HostParam()</code></span><span class=\"inline-wrap\">: 取出 host 里的参数。</span></summary><code-block id=\"bCBAacxHkwMRZ89jnSdbPK\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> HostParam <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example/:subdomain'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getSubdomain</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">HostParam</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'subdomain'</span><span class=\"token punctuation\">)</span> subdomain<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Subdomain: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>subdomain<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details></li></ul><h3 id=\"wSRR5JymoLx3Wg3TWCfBWe\" class=\"wolai-block\"><span class=\"inline-wrap\">功能性装饰器</span><details id=\"7uTreWNVCFsWfBfr7umdur\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b><code>@UseGuards()</code></b></span><span class=\"inline-wrap\"><b> 添加身份验证、授权等守卫</b></span></summary><code-block id=\"uhdwr6vpKSRmjRLy5WTt4S\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> UseGuards <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AuthGuard <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./auth.guard'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'secured'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SecuredController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UseGuards</span></span><span class=\"token punctuation\">(</span>AuthGuard<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getSecuredData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Secured data'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"a8QefobhvSK6RoSjBniHen\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b><code>@UseInterceptors()</code></b></span><span class=\"inline-wrap\"><b> 使用拦截器</b></span></summary><code-block id=\"c6ViiTe6XbtwHyH573yfsK\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> UseInterceptors <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> LoggingInterceptor <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./logging.interceptor'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UseInterceptors</span></span><span class=\"token punctuation\">(</span>LoggingInterceptor<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'GET request handled'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"qZRyV94GqWLof8bSsm7BNP\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b><code>@UseFilters()</code></b></span><span class=\"inline-wrap\"><b> 使用异常过滤器</b></span></summary><code-block id=\"p7oRrAJm2vEyqEHCPydYae\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> UseFilters <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CustomExceptionFilter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./custom-exception.filter'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UseFilters</span></span><span class=\"token punctuation\">(</span>CustomExceptionFilter<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Unexpected error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"uB2nBjHNtjiBLWtHdmbpx9\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b><code>@UsePipes()</code></b></span><span class=\"inline-wrap\"><b> 使用管道</b></span></summary><code-block id=\"p4RWLEL9qg5aSdQ5E6rDX1\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> UsePipes<span class=\"token punctuation\">,</span> ValidationPipe <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UsePipes</span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ValidationPipe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Some logic here</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"6wZtAcanfxGsRkm9f5XWKr\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b><code>@Next()</code></b></span><span class=\"inline-wrap\">: 注入调用下一个 handler 的 next 方法。</span></summary><div id=\"2yKDRUHTEzvRjbHj28eYTM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Next()</code></span><span class=\"inline-wrap\"> 装饰器注入 </span><span class=\"inline-wrap\"><code>next</code></span><span class=\"inline-wrap\"> 函数，该函数用于将控制传递给下一个中间件或处理程序函数。</span></div></div><code-block id=\"vNjDCQ4gnGHsPFUyWxhakQ\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Injectable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyMiddleware</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">use</span><span class=\"token punctuation\">(</span>req<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> res<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">next</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Before handling the request...'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 调用 @Next() 装饰器注入的 next 函数，将控制传递给下一个中间件或处理程序</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'After handling the request...'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"9Aqaan9JVYwTTM9vbf9g3B\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@SetMetadata()</code></span><span class=\"inline-wrap\">: 在 class 或者 handler 上添加 metadata。</span></summary><div id=\"gd1FyLH6yqjzxBv6YxqCkq\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这个装饰器的底层实现就是 Reflect.defineMetadata；</span></div></div><div id=\"2WrsMP1Uvsyo3wKedwM5pD\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image.png\" style=\"width: 590px\"/></figure></div><div id=\"4ebVEBrHDPutxZphXeeZ6J\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">怎么使用的，举个例子：</span></div></div><div id=\"vN2KjbvVSCpFZ3jpFumSAH\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">我们可以使用 </span><span class=\"inline-wrap\"><code>@SetMetadata()</code></span><span class=\"inline-wrap\"> 装饰器结合自定义装饰器和拦截器来实现一个基本的权限控制系统。</span></div></div><div id=\"d8BtTFLQ9Vh8xuAWqPVwV1\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">首先，定义一个自定义装饰器 </span><span class=\"inline-wrap\"><code>@Roles()</code></span><span class=\"inline-wrap\"> 用于在处理程序上设置角色权限：</span></div></div><code-block id=\"rpmpoLxbcfCHsTehXgkWD6\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// roles.decorator.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> SetMetadata <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Roles</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>roles<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">SetMetadata</span><span class=\"token punctuation\">(</span><span class=\"token string\">'roles'</span><span class=\"token punctuation\">,</span> roles<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block><div id=\"6LBqrfjbcRwh9C3gjvAJv5\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">接下来，创建一个守卫 </span><span class=\"inline-wrap\"><code>RolesGuard</code></span><span class=\"inline-wrap\">检查用户的角色是否符合处理程序所需的角色：</span></div></div><code-block id=\"chwqPWiiTQcyj7Jb51SNQx\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// roles.guard.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CanActivate<span class=\"token punctuation\">,</span> ExecutionContext<span class=\"token punctuation\">,</span> Injectable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Reflector <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RolesGuard</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">CanActivate</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> reflector<span class=\"token operator\">:</span> Reflector<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">canActivate</span><span class=\"token punctuation\">(</span>context<span class=\"token operator\">:</span> ExecutionContext<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> requiredRoles <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>reflector<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'roles'</span><span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">getHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>requiredRoles<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 如果没有设置角色要求，则允许访问</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> user <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">switchToHttp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> requiredRoles<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span>role <span class=\"token operator\">=></span> user<span class=\"token punctuation\">.</span>roles<span class=\"token operator\">?.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>role<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block><div id=\"qABPKcHJvf6qTk25UbgENB\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">最后，将这个守卫应用于一个需要权限控制的控制器：</span></div></div><code-block id=\"n8q1YhL8Mgs48Zv5mYTD88\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// app.controller.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> UseGuards <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> RolesGuard <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./roles.guard'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Roles <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./roles.decorator'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'app'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Roles</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用 @Roles 装饰器设置角色要求</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UseGuards</span></span><span class=\"token punctuation\">(</span>RolesGuard<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用守卫进行权限检查</span>\n  <span class=\"token function\">getAdminData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Admin Data'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Roles</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用 @Roles 装饰器设置角色要求</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UseGuards</span></span><span class=\"token punctuation\">(</span>RolesGuard<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用守卫进行权限检查</span>\n  <span class=\"token function\">getUserData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'User Data'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block><div id=\"4DwtqsbgsmwgPvBBqx92FR\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在这个例子中，</span><span class=\"inline-wrap\"><code>@Roles()</code></span><span class=\"inline-wrap\"> 装饰器用于设置每个处理程序需要的角色权限，然后 </span><span class=\"inline-wrap\"><code>RolesGuard</code></span><span class=\"inline-wrap\"> 拦截器会检查用户是否具备足够的权限。这里使用了 </span><span class=\"inline-wrap\"><code>@UseGuards()</code></span><span class=\"inline-wrap\"> 装饰器来将 </span><span class=\"inline-wrap\"><code>RolesGuard</code></span><span class=\"inline-wrap\"> 拦截器应用于相应的处理程序。</span></div></div><div id=\"gBCQEM8LPsdsGVBtGM1wX4\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">通过使用元数据，我们能够动态地设置和获取处理程序的角色权限要求，实现了一个基本的权限控制系统。这种方式提供了更灵活和可扩展的权限管理机制。</span></div></div></details></h3><div id=\"uyBkSNxsyYz6KXFwMWwB8F\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"7BRaTChsjKDXVa18RELJow\" class=\"wolai-block\"><span class=\"inline-wrap\">深入了解装饰器</span></h2><h3 id=\"hB8yAogDiSVFc1Ne44BhiX\" class=\"wolai-block\"><span class=\"inline-wrap\">装饰器的工作原理</span></h3><ul class=\"wolai-block\"><li id=\"Ln2DZDosCfHcyy7uqkS3b\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">Reflect 对象</span><div id=\"fN7zMFevtrJTa2xdD2qc1j\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>Reflect</code></span><span class=\"inline-wrap\"> 是 JavaScript 的内置对象，提供了一组静态方法，用于拦截和修改 JavaScript 操作。</span></div></div><details id=\"kNLyKTihtdeqPKA2aE3Xc3\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b>常见 Reflect 方法：</b></span><span class=\"inline-wrap\"> 包括 </span><span class=\"inline-wrap\"><code>Reflect.get</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>Reflect.set</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>Reflect.has</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>Reflect.apply</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>Reflect.construct</code></span><span class=\"inline-wrap\"> 等，用于属性获取、设置、判断存在、方法调用和实例构造等操作。</span></summary><code-block id=\"t8JBWVoAGtgnvaps1c7SJv\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> <span class=\"token number\">42</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 42</span>\nReflect<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> hasProperty <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token function\">Reflect</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span>max<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 5</span>\n<span class=\"token keyword\">let</span> instance <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">construct</span><span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 当前时间的 Date 实例</span>\n</pre></div></code-block></details><details id=\"p89hNw5TpgrcnctwosoRm3\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b>Metadata API</b></span></summary><div id=\"mVJFwvowxUuqFMNN93HNzK\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">但实现 Nest 用到的 api 还没有进入标准，还在草案阶段；</span></div></div><code-block id=\"aRnhtvdcFDXVWSwvo14E6F\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre>Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">defineMetadata</span><span class=\"token punctuation\">(</span>metadataKey<span class=\"token punctuation\">,</span> metadataValue<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nReflect<span class=\"token punctuation\">.</span><span class=\"token function\">defineMetadata</span><span class=\"token punctuation\">(</span>metadataKey<span class=\"token punctuation\">,</span> metadataValue<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> propertyKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">getMetadata</span><span class=\"token punctuation\">(</span>metadataKey<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">getMetadata</span><span class=\"token punctuation\">(</span>metadataKey<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> propertyKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block><div id=\"41qcbKhmNbvpoVeY5tk88C\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><b>Reflect.defineMetadata</b></span><span class=\"inline-wrap\"> 和 </span><span class=\"inline-wrap\"><b>Reflect.getMetadata</b></span><span class=\"inline-wrap\"> 分别用于设置和获取某个类的元数据，如果最后传入了属性名，还可以单独为某个属性设置元数据。</span></div></div></details></li></ul><details id=\"asqT6YtgYjqJY8bJvKHxZy\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">元数据的存储和读取</span></summary><div id=\"gxacnjJqhRoVxR4A5gaA2L\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><b>元数据存在哪呢？</b></span></div></div><div id=\"3bgvG5FtX64YiVh1Abqyvq\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">存在类或者对象上，如果</span><span class=\"inline-wrap\"><b>给类或者类的静态属性添加元数据</b></span><span class=\"inline-wrap\">，那就保存在类上；</span></div></div><div id=\"6D2uq8cnyg366JCXiwteVN\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">如果</span><span class=\"inline-wrap\"><b>给实例属性添加元数据</b></span><span class=\"inline-wrap\">，那就保存在实例对象上，用类似</span><span class=\"inline-wrap\"><b> [[metadata]]</b></span><span class=\"inline-wrap\"> 的 key 来存的。</span></div></div><div id=\"25CBjrwkkFEiq7d8EA72D\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">看上面的 api 确实看不出啥，但它</span><span class=\"inline-wrap\"><b>支持装饰器的方式</b></span><span class=\"inline-wrap\">使用：</span></div></div><div id=\"qiFrx9GVHT8RWQQNoLutUg\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">1.</span><span class=\"inline-wrap\"><b>Reflect.metadata 装饰器</b></span></div></div><code-block id=\"xmTooevCqECpzoYsYXP9Nu\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Reflect</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">metadata</span><span class=\"token punctuation\">(</span>metadataKey<span class=\"token punctuation\">,</span> metadataValue<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Example</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Reflect</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">metadata</span><span class=\"token punctuation\">(</span>metadataKey<span class=\"token punctuation\">,</span> metadataValue<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block><div id=\"7RyfKZuH8FZSctvxbncDVP\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">2.</span><span class=\"inline-wrap\"><b>装饰器的封装：</b></span><span class=\"inline-wrap\"> 将 Reflect.metadata 装饰器封装为更具表达力的装饰器，例如 </span><span class=\"inline-wrap\"><code>Type</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>ParamTypes</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>ReturnType</code></span><span class=\"inline-wrap\">。</span></div></div><code-block id=\"ozvCv2VgtMTaL4PvzHinUb\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Type</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">metadata</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"design:type\"</span><span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ParamTypes</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>types<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">metadata</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"design:paramtypes\"</span><span class=\"token punctuation\">,</span> types<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ReturnType</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">metadata</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"design:returntype\"</span><span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ParamTypes</span></span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">,</span> Number<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Example</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ReturnType</span></span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Type</span></span><span class=\"token punctuation\">(</span><span class=\"token builtin\">Function</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ParamTypes</span></span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">,</span> Number<span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ReturnType</span></span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block><div id=\"2eZt6Sk8NYYC7s5c1oSvng\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">然后我们就可以通过 Reflect metadata 的 api 获取这个类和对象的元数据了：</span></div></div><code-block id=\"qKztrD8KzoJygRpPxNba4K\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Example</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> paramTypes <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">getMetadata</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"design:paramtypes\"</span><span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">,</span> <span class=\"token string\">\"add\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// [Number, Number]</span>\n</pre></div></code-block></details><div id=\"eEN2EQetKhLMGixoJ137tE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"uesFiCyVAWbvbu2X7RVyeg\" class=\"wolai-block\"><span class=\"inline-wrap\">NestJS<span class=\"jill\"></span>中是如何实现的</span></h3><div id=\"mY1TaCAAVkkkHuxFm1LXL9\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"> 先看一段源码：</span></div></div><div id=\"5EveQg6h4QDA7tNZUbQ4Y9\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_1.png\" style=\"width: 830px\"/></figure></div><div id=\"cvAdccgjckJKZRu3pkTVK5\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Module</code></span><span class=\"inline-wrap\"> 装饰器调用了 </span><span class=\"inline-wrap\"><code>Reflect.defineMetadata</code></span><span class=\"inline-wrap\"> 来给这个类添加了一些元数据。所以我们这样用的时候：</span></div></div><code-block id=\"wioS5AJQkgxBsRWADyZPS7\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppController <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n</pre></div></code-block><div id=\"pB1kgRNr1M6WMEsEtgx4ir\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"> 其实就是给 AppModule 添加了 controllers 的元数据和 providers 的元数据。后面创建 IOC 容器的时候就会取出这些元数据来处理。</span></div></div><blockquote id=\"nXoyaPv4BTjE8aPRucs8eF\" class=\"wolai-block\"><span class=\"gray inline-wrap\">现在 metadata 的 api 还在草案阶段，需要使用 reflect-metadata 这个 polyfill 包才行。</span></blockquote><div id=\"opxWxCsmyGkevULNRfSbwp\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"hujrHXA584zNBkxwpTV4rk\" class=\"wolai-block\"><span class=\"inline-wrap\">为什么用<span class=\"jill\"></span>Typescript</span></h3><details id=\"ogosepz5JjMStr7TXxW9iA\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">完整例子</span></summary><code-block id=\"fobzw3TWNDWcgfFNCX9Hqs\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// logger.service.ts </span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Injectable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LoggerService</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">log</span><span class=\"token punctuation\">(</span>message<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//  example.service.ts </span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Injectable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> LoggerService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./logger.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleService</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> loggerService<span class=\"token operator\">:</span> LoggerService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">performTask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>loggerService<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Task performed!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//  example.controller.ts </span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ExampleService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./example.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> exampleService<span class=\"token operator\">:</span> ExampleService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>exampleService<span class=\"token punctuation\">.</span><span class=\"token function\">performTask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Data from Nest.js!'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//  app.module.ts </span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ExampleController <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./example.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ExampleService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./example.service'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> LoggerService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./logger.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>ExampleController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>ExampleService<span class=\"token punctuation\">,</span> LoggerService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"rLJz8d8ssgjMqJBWuVEmkb\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div></details><details id=\"wrjtpN2z4oDiBfzd6hd1cK\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">执行顺序</span></summary><div id=\"s8FvJjaV8tADViKon8veYi\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在 Nest.js 中，整个依赖扫描和实例化的过程可以按照以下时间线来描述，同时结合三个元数据 (</span><span class=\"inline-wrap\"><code>design:type</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>design:returntype</code></span><span class=\"inline-wrap\">) 的作用：</span></div></div><ol class=\"wolai-block\"><li id=\"px3zbJjBBgm5M2yCwhn8Lb\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>模块装载（Module Loading）：</b></span><ul class=\"wolai-block\"><li id=\"qyGEh6JPdmNp1YaFyp4VLQ\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">Nest.js 应用程序启动时，首先会装载主模块（通常是 </span><span class=\"inline-wrap\"><code>AppModule</code></span><span class=\"inline-wrap\">）。</span></li><li id=\"9Wr9bXHUw2yDmQkfEV9KCN\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">在主模块中，使用 </span><span class=\"inline-wrap\"><code>@Module</code></span><span class=\"inline-wrap\"> 装饰器指定模块的元数据，包括控制器和提供者。</span></li></ul></li><li id=\"dFmcuU1PnAAgXgGdAsjzQ\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>提供者扫描（Provider Scanning）：</b></span><ul class=\"wolai-block\"><li id=\"8awZppggKPNDaq7mmP24j\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">Nest.js 模块扫描提供者（</span><span class=\"inline-wrap\"><code>@Injectable()</code></span><span class=\"inline-wrap\"> 装饰的类），解析其元数据。</span></li><li id=\"phKmLJYchRXyKr6dYyLWmL\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>design:type</code></span><span class=\"inline-wrap\"> 元数据描述提供者的类型。例如，如果有一个提供者类 </span><span class=\"inline-wrap\"><code>LoggerService</code></span><span class=\"inline-wrap\">，</span><span class=\"inline-wrap\"><code>design:type</code></span><span class=\"inline-wrap\"> 可能是 </span><span class=\"inline-wrap\"><code>Function</code></span><span class=\"inline-wrap\"> 表示它是一个类构造函数。</span></li></ul></li><li id=\"9cnKuTdWTTgSbK1K11gR9s\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>构造函数参数扫描（Constructor Parameter Scanning）：</b></span><ul class=\"wolai-block\"><li id=\"vMZUHS5WB4CdWVoBsYJuZP\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">对于每个提供者，检查其构造函数，并使用 </span><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\"> 元数据获取构造函数参数的类型信息。</span></li><li id=\"8BqdVM9D2Z74CJ9HXizRCD\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\"> 是一个数组，描述了构造函数的参数类型。例如，</span><span class=\"inline-wrap\"><code>ExampleService</code></span><span class=\"inline-wrap\"> 的构造函数参数是 </span><span class=\"inline-wrap\"><code>LoggerService</code></span><span class=\"inline-wrap\">，</span><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\"> 可能是 </span><span class=\"inline-wrap\"><code>[LoggerService]</code></span><span class=\"inline-wrap\">。</span></li></ul></li><li id=\"8FuuvMU4UYGq4DoYTTTGqv\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>模块初始化和实例化（Module Initialization and Instantiation）：</b></span><ul class=\"wolai-block\"><li id=\"vSYt5F1sAQvchdS1ko3Qcu\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">对于每个提供者，IoC 容器根据构造函数参数递归实例化其依赖项。</span></li><li id=\"eGBoDgmoBk5GXNFYTrzjiL\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">使用提供者的构造函数创建实例，并将依赖项注入到构造函数中。</span></li><li id=\"jZkn3NQiWSba7LUkP3WHCm\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">如果有其他模块被导入，重复上述步骤。</span></li></ul></li><li id=\"7nywMgjxX6m4oGYmiy2gcY\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>控制器扫描和路由解析（Controller Scanning and Route Resolution）：</b></span><ul class=\"wolai-block\"><li id=\"n2K6Dti2kpGXbpdGY57c4s\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">Nest.js 模块扫描控制器（</span><span class=\"inline-wrap\"><code>@Controller()</code></span><span class=\"inline-wrap\"> 装饰的类）。</span></li><li id=\"cyPMKByJSxd75J57UniQmr\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">对于每个控制器类，解析其元数据，包括路由和路由处理方法。</span></li></ul></li><li id=\"7LrdqCDzLwAreZsiuHhGrJ\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>方法元数据解析（Method Metadata Resolution）：</b></span><ul class=\"wolai-block\"><li id=\"hqMWeMDgyiAfp6Q72c45uw\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">对于每个路由处理方法，解析其元数据，包括 </span><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\"> 和 </span><span class=\"inline-wrap\"><code>design:returntype</code></span><span class=\"inline-wrap\">。</span></li><li id=\"fSTSGVZusYNAT9tKHRRHq1\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\"> 描述了方法的参数类型，而 </span><span class=\"inline-wrap\"><code>design:returntype</code></span><span class=\"inline-wrap\"> 描述了方法的返回值类型。</span></li></ul></li></ol><div id=\"cBdwFhJtiomRb9KKyYfoeK\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">总体而言，Nest.js 的 IoC 容器在模块装载和初始化过程中，通过装饰器中的元数据来实现提供者和控制器的扫描、实例化和依赖注入。三个元数据在这个过程中提供了关键的类型信息，确保了正确的依赖解析和注入。这使得 Nest.js 能够在运行时动态地管理类之间的依赖关系，实现依赖注入和路由解析等功能。</span></div></div></details><div id=\"evx4YBx8GMbJbbJormXMz9\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">细心的同学可能会发现，上面的例子一般是扫描加载指定模块的元数据，包括<span class=\"jill\"></span>controller<span class=\"jill\"></span>和<span class=\"jill\"></span>provider，但是在创建示例时，是需要知道构造器的参数，现在并没有添加这部分 metadata 数据呀，所以这里需要提到<span class=\"jill\"></span>Typescript<span class=\"jill\"></span>的优势，TypeScript 支持编译时自动添加一些 metadata 数据：</span></div></div><div id=\"ppsLMx168a48ggVLaU4gmT\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">比如这段代码：</span></div></div><div id=\"b6mW4Hm9zg3tg9xnEdsubX\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_2.png\" style=\"width: 554px\"/></figure></div><div id=\"us4abxZSQijAwVpVeC6xK8\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">添加了一个元数据，生成后的代码是这样的：</span></div></div><div id=\"gqJr1njpx4AjhJzM5xHocr\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_3.png\" style=\"width: 601px\"/></figure></div><div id=\"babMaqtoFiSZa6XShzYruZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">但是呢，ts 有一个编译选项叫做 </span><span class=\"inline-wrap\"><code>emitDecoratorMetadata</code></span><span class=\"inline-wrap\">，开启它就会自动添加一些元数据。开启之后再试一下：</span></div></div><div id=\"qRDRmbXBBLMpENamJpg4Pr\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_4.png\" style=\"width: 608px\"/></figure></div><div id=\"eVYUtEVdcZZoH1247nHawT\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">会看到多了三个元数据：</span></div></div><div id=\"9Qr4U2HJSycHWBdHDZSKGz\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>design:type</code></span><span class=\"inline-wrap\">是<span class=\"jill\"></span>Function，是描述装饰目标的元数据，这里装饰的是函数</span></div></div><div id=\"uXXpx6XHFVoBUK7piTvWu\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\"> 是 [Number]，是参数的类型</span></div></div><div id=\"qySUZZy71wmQpwReLY31Dz\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>design:returntype</code></span><span class=\"inline-wrap\"> 是 String，是返回值的类型</span></div></div><div id=\"s6stezuQjqkc4jNF41cDMU\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">所以，只要开启了这个编译选项，ts 生成的代码会自动添加一些元数据。然后创建对象的时候就可以通过 </span><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\"> 来拿到构造器参数的类型了，也就知道怎么注入依赖，怎么去<span class=\"jill\"></span>new<span class=\"jill\"></span>实例。</span></div></div><div id=\"f1tmKU7UGj8qDMrJMQobVH\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"f6dL8R8eCwHSRsWtzVSozZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这也是为什么 nest 会用 ts 来写，因为它很依赖这个 </span><span class=\"inline-wrap\"><b>emitDecoratorMetadata</b></span><span class=\"inline-wrap\"> 的编译选项。</span></div></div><blockquote id=\"PQQ3ZJ943SdA7r1h8Xi7Y\" class=\"wolai-block\"><span class=\"gray inline-wrap\">nest cli<span class=\"jill\"></span>生成的模板是默认开启这个编译选项的。</span></blockquote><div id=\"2Xczw3J5tbg2pVoWnvhfu4\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">总结一下核心实现原理：</span><span class=\"inline-wrap\"><b>通过装饰器给 class 或者对象添加 metadata，并且开启 ts 的 emitDecoratorMetadata 来自动添加类型相关的 metadata，然后运行的时候通过这些元数据来实现依赖的扫描，对象的创建等等功能。</b></span></div></div><div id=\"2HRMYXRMxutvhzVRdXPxrW\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"8mfWTajKvBgZeH9zhq3S5a\" class=\"wolai-block\"><span class=\"inline-wrap\">自定义装饰器：</span><span class=\"inline-wrap\"><b>@SetMetadata </b></span></h3><div id=\"Fag4iGXMHA8mEw2sruMoZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest<span class=\"jill\"></span>还提供了一个 </span><span class=\"inline-wrap\"><code>@SetMetadata</code></span><span class=\"inline-wrap\"> 的装饰器让我们可以自定义装饰器去给 class、method 添加一些 metadata;</span></div></div><div id=\"wtoqAPc1N2nisQJ8rFY6Hc\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"hGp8Fsdjjxs8gL9Lipc8Cr\" class=\"wolai-block\"><span class=\"inline-wrap\">自定义装饰器的应用场景</span></h2><h4 id=\"ejhvTs7vWkGZDirXgXuXW4\" class=\"wolai-block\"><span class=\"inline-wrap\">性能日志记录</span></h4><details id=\"m6GkkvhNzQo15kscykfbSD\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">创建 </span><span class=\"inline-wrap\"><code>@PerformanceLogger()</code></span><span class=\"inline-wrap\"> 装饰器</span></summary><code-block id=\"H8hF1QYNJgYBaZu7z2Quh\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// performance-logger.decorator.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> SetMetadata <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">PERFORMANCE_LOGGER_KEY</span> <span class=\"token operator\">=</span> <span class=\"token string\">'performance-logger'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">PerformanceLogger</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">SetMetadata</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PERFORMANCE_LOGGER_KEY</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block><code-block id=\"vwrhj8CSdHhaqmBoT345Cr\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// performance-logger.interceptor.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CallHandler<span class=\"token punctuation\">,</span> ExecutionContext<span class=\"token punctuation\">,</span> Injectable<span class=\"token punctuation\">,</span> NestInterceptor <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Observable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> tap <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs/operators'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PerformanceLoggerInterceptor</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">NestInterceptor</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">intercept</span><span class=\"token punctuation\">(</span>context<span class=\"token operator\">:</span> ExecutionContext<span class=\"token punctuation\">,</span> next<span class=\"token operator\">:</span> CallHandler<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Observable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> startTime <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> next\n      <span class=\"token punctuation\">.</span><span class=\"token function\">handle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n        <span class=\"token function\">tap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> requestTime <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> startTime<span class=\"token punctuation\">;</span>\n          <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Request took </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>requestTime<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">ms</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"cKSKGGAeKLnE58EqBFyApN\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">在控制器方法上应用，实现性能监控</span></summary><code-block id=\"94gdGB7uBMFbsQJffert4Y\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// app.controller.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> UseInterceptors <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> PerformanceLogger <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./performance-logger.decorator'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> PerformanceLoggerInterceptor <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./performance-logger.interceptor'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'app'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">PerformanceLogger</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UseInterceptors</span></span><span class=\"token punctuation\">(</span>PerformanceLoggerInterceptor<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getAdminData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Admin Data'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><h4 id=\"ac4r3X9dHoq6okvLrnrPH7\" class=\"wolai-block\"><span class=\"inline-wrap\">权限验证</span></h4><details id=\"nZbddHrr5LKe98VwXKE2AY\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">创建 </span><span class=\"inline-wrap\"><code>@RoleGuard(role: string)</code></span><span class=\"inline-wrap\"> 装饰器</span></summary><code-block id=\"3giAs7wdxYsa2G8aEUpEQZ\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// role-guard.decorator.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> SetMetadata <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">ROLE_GUARD_KEY</span> <span class=\"token operator\">=</span> <span class=\"token string\">'role-guard'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">RoleGuard</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>role<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">SetMetadata</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ROLE_GUARD_KEY</span><span class=\"token punctuation\">,</span> role<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block><code-block id=\"4Fw9nhTenY7G7krNpZh3D3\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// role-guard.guard.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CanActivate<span class=\"token punctuation\">,</span> ExecutionContext<span class=\"token punctuation\">,</span> Injectable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Reflector <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">ROLE_GUARD_KEY</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./role-guard.decorator'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RoleGuard</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">CanActivate</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> reflector<span class=\"token operator\">:</span> Reflector<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">canActivate</span><span class=\"token punctuation\">(</span>context<span class=\"token operator\">:</span> ExecutionContext<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> requiredRole <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>reflector<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token constant\">ROLE_GUARD_KEY</span><span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">getHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>requiredRole<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 如果没有设置角色要求，则允许访问</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> user <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">switchToHttp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> user<span class=\"token punctuation\">.</span>roles<span class=\"token operator\">?.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>requiredRole<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"w3LwUHoCKJuypjR9NLp2v4\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">限制特定角色用户访问控制器方法</span></summary><code-block id=\"bZim51FL9ydRoZGAeTsvY3\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// app.controller.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> UseGuards <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> RoleGuard <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./role-guard.guard'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> RoleGuard <span class=\"token keyword\">as</span> RoleGuardDecorator <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./role-guard.decorator'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'app'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">RoleGuardDecorator</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用 @RoleGuard 装饰器设置角色要求</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UseGuards</span></span><span class=\"token punctuation\">(</span>RoleGuard<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用守卫进行权限检查</span>\n  <span class=\"token function\">getAdminData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Admin Data'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><h4 id=\"pmXxfc2GJhtbrGGzdMtsek\" class=\"wolai-block\"><span class=\"inline-wrap\">参数装饰器</span></h4><details id=\"xrFKYH8voBGeoKN4Wwgwbv\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">创建 </span><span class=\"inline-wrap\"><code>@LogParams()</code></span><span class=\"inline-wrap\"> 装饰器</span></summary><code-block id=\"hYV6yp8aEZhGjcJLYdAiic\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// log-params.decorator.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> SetMetadata<span class=\"token punctuation\">,</span> createParamDecorator<span class=\"token punctuation\">,</span> ExecutionContext <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">LOG_PARAMS_KEY</span> <span class=\"token operator\">=</span> <span class=\"token string\">'log-params'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> LogParams <span class=\"token operator\">=</span> <span class=\"token function\">createParamDecorator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">,</span> context<span class=\"token operator\">:</span> ExecutionContext<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> request <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">switchToHttp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Params: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> request<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</pre></div></code-block></details><details id=\"wftYw3cLLdAxxoCZRUhgVw\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">在控制器方法的参数上应用，实现参数日志记录</span></summary><code-block id=\"i3B7b5WvJRm1Sg17r79JhT\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// app.controller.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Param <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> LogParams <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./log-params.decorator'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'app'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'user/:id'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getUserData</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">LogParams</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> params<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">User Data for ID: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>params<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</pre></div></code-block></details><h2 id=\"wzjHT7Pdfj9QJD2pj9iP9Y\" class=\"wolai-block\"><span class=\"inline-wrap\">总结</span></h2><div id=\"owp5x1tLx7DeFoq6XyEuHS\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest.js 的装饰器实现原理基于 TypeScript 提供的装饰器特性和 Reflect Metadata API。</span></div></div><div id=\"8ubegyqcX3VhJWrQqtcq9K\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">通过在类、方法等上添加元数据，去实现了依赖注入、路由映射等功能。</span></div></div><div id=\"3dWhVjcR1bKjFBfFpccDFH\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">以下是主要的实现原理要点：</span></div></div><ol class=\"wolai-block\"><li id=\"7McpACECUM15q9VjbFyrtd\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>Reflect Metadata API:</b></span><span class=\"inline-wrap\"> Nest<span class=\"jill\"></span>使用 Reflect Metadata API 提供的 </span><span class=\"inline-wrap\"><code>Reflect.getMetadata</code></span><span class=\"inline-wrap\"> 和 </span><span class=\"inline-wrap\"><code>Reflect.defineMetadata</code></span><span class=\"inline-wrap\"> 等方法来动态添加和获取元数据，包含了装饰器在类、方法等上的信息。</span></li><li id=\"29hysMeGnWRkYMLaCz1fpa\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>依赖注入:</b></span><span class=\"inline-wrap\"> Nest<span class=\"jill\"></span>中所有的装饰器都使用 Reflect Metadata 来添加元数据，以便在初始化阶段进行依赖扫描和注入。Nest.js 利用这些元数据实现了依赖注入。</span></li><li id=\"7MXrruDSWG6HGDQQyf1krA\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>emitDecoratorMetadata 选项:</b></span><span class=\"inline-wrap\"> TypeScript 提供了 </span><span class=\"inline-wrap\"><code>emitDecoratorMetadata</code></span><span class=\"inline-wrap\"> 编译选项，开启后会自动为装饰器添加一些元数据，包括 </span><span class=\"inline-wrap\"><code>design:type</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>design:returntype</code></span><span class=\"inline-wrap\">。这些元数据用于识别类、方法的类型信息，帮助在运行时进行实例化和注入。</span></li><li id=\"7f1DzjgNkAQSp8sVG7mLou\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>@SetMetadata 装饰器:</b></span><span class=\"inline-wrap\"> Nest.js 还提供了 </span><span class=\"inline-wrap\"><code>@SetMetadata</code></span><span class=\"inline-wrap\"> 装饰器，允许我们自定义装饰器，在控制器的类和方法上添加自定义的元数据，再从拦截器和守卫中通过 </span><span class=\"inline-wrap\"><code>reflector</code></span><span class=\"inline-wrap\"> 的 API 取出来进行相应的处理。</span></li></ol><div id=\"q6xWBPfpMzWNUJSr7MDCxZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">通过理解这些概念，可以更好地理解 Nest.js 中装饰器的工作原理和如何实现依赖注入、路由映射等功能。</span></div></div><div id=\"5FoqNek3vuxpoJo92jveZp\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"m5rQqTjKpaCkHRoTRWj84B\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"rGEo6es7WjJTbNis73kK16\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div></article><footer></footer></body></html>","source":"html/nest/nest中的装饰器/Nest中的装饰器.html","raw":"---\ntitle: Nest中的装饰器\n---\n\n<!DOCTYPE html>\n<html lang=\"zh-Hans-CN\"><head><meta charset=\"utf-8\"/><meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/modern-norm.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/prism.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/katex.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/wolai.css\"/><title>Nest中的装饰器 - wolai 笔记</title><link rel=\"shortcut icon\"></link></head><body class=\"full-width\"><header><div class=\"image has\" style=\"background-position-y: 50%; background-image: url(&quot;https://cdn.wostatic.cn/cover/painting/26HnnzT7aex1JAZ7fiAirc.jpg&quot;)\"></div><div class=\"title\"><div class=\"banner\"><div class=\"icon\"></div></div><div data-title=\"Nest中的装饰器\" class=\"main-title\"></div></div></header><article><h2 id=\"kfs9RQGPHcqMqeoQUqgSEL\" class=\"wolai-block\"><span class=\"inline-wrap\">回顾</span></h2><div id=\"xp4jdqwNXNrbFPzvc2c8y2\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">前两篇中主要介绍了<span class=\"jill\"></span>Nest<span class=\"jill\"></span>的入门使用以及一些框架特性，包括模块、控制器、服务注入、Http<span class=\"jill\"></span>服务、数据库服务等功能，都涉及到很多的装饰器，这一篇会介绍<span class=\"jill\"></span>Nest<span class=\"jill\"></span>中的装饰器，以及工作原理。</span></div></div><h2 id=\"8frTphd6WnbW2Gz9kQX8nK\" class=\"wolai-block\"><span class=\"inline-wrap\">引言</span></h2><h3 id=\"aXDSgBmbwUv5HtUajZEgp\" class=\"wolai-block\"><span class=\"inline-wrap\">装饰器在 Nest 中的角色</span></h3><ul class=\"wolai-block\"><li id=\"tp5hUhETK47nNjYNiprmWJ\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">在 NestJS 中，装饰器是一种强大的工具，对于</span><span class=\"inline-wrap\"><b>扩展或修改类、方法、属性或参数</b></span><span class=\"inline-wrap\">的行为，提供了优雅而灵活的方式，使开发人员能够</span><span class=\"inline-wrap\"><b>在不修改原始代码的情况下</b></span><span class=\"inline-wrap\">添加或修改功能。</span></li><li id=\"nzxs1CoQ8JVQeKapPsJa5g\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">装饰器应用非常广泛，包括</span><span class=\"inline-wrap\"><b>路由、控制器、服务、依赖注入</b></span><span class=\"inline-wrap\">等。它们可以用于定义路由处理程序、中间件、管道，使开发者能够</span><span class=\"inline-wrap\"><b>更专注于业务逻辑的实现</b></span><span class=\"inline-wrap\">，而不必过多关注底层框架细节。</span></li><li id=\"imwJWsnNv4joWeZJA7kxuw\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">NestJS 通过装饰器，提供了</span><span class=\"inline-wrap\"><b>声明式的编程方式</b></span><span class=\"inline-wrap\">，使代码更清晰、易于维护。开发者可以通过在类、方法或属性上应用装饰器来定义元数据或增强其行为，提高代码的</span><span class=\"inline-wrap\"><b>可读性和可维护性</b></span><span class=\"inline-wrap\">。</span></li></ul><h2 id=\"nzaxxzzXj35YibEtADNUcm\" class=\"wolai-block\"><span class=\"inline-wrap\">NestJS 装饰器基础</span></h2><h3 id=\"u3b5D98NuVTAc13aqDMr4m\" class=\"wolai-block\"><span class=\"inline-wrap\">类装饰器</span></h3><ul class=\"wolai-block\"><li id=\"9jUtK6JSizJmiDy2p2JSSY\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">模块相关</span><details id=\"x7BqRk5i3EQojs1W3JCRRe\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Module()</code></span><span class=\"inline-wrap\">: 声明 Nest 模块。</span></summary><code-block id=\"3pJH2UXmTmf8RZEpYks6e3\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppController <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></pre></div></code-block></details><details id=\"t6baGLxJPrsmT42Li8eKV8\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Global()</code></span><span class=\"inline-wrap\">: 声明全局模块。</span></summary><code-block id=\"hzfaHbGf4sed5zYjtjNNXH\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// helper.module.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module<span class=\"token punctuation\">,</span> Global <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HelperService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./helper.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Global</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>HelperService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  exports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>HelperService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelperModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n</pre></div></code-block><div id=\"bPu8gqVFv1RVUgs8Hrk9gp\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">创建了 </span><span class=\"inline-wrap\"><code>HelperModule</code></span><span class=\"inline-wrap\">，并导入了 </span><span class=\"inline-wrap\"><code>HelperService</code></span><span class=\"inline-wrap\">，同时使用 </span><span class=\"inline-wrap\"><code>@Global()</code></span><span class=\"inline-wrap\"> 装饰器标记为全局模块。</span></div></div><code-block id=\"5aYFVr9uNVb6n82zYkqn3w\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// helper.service.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Injectable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelperService</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">generateUniqueId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 实际应用中可能会使用更复杂的算法</span>\n    <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">36</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block><div id=\"8NPDr4CcQNk1AFhSWLHGhk\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>HelperService</code></span><span class=\"inline-wrap\"> 提供了一个生成唯一标识符的简单功能。</span></div></div><code-block id=\"f2TqgKZp5WKZBRNkc9JTV4\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// app.module.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HelperModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./helper/helper.module'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppController <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>HelperModule<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"8vBxLgvSKYPgNH3EAmRhMM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">通过将 </span><span class=\"inline-wrap\"><code>HelperModule</code></span><span class=\"inline-wrap\"> 导入到 </span><span class=\"inline-wrap\"><code>AppModule</code></span><span class=\"inline-wrap\"> 中，我们确保整个应用程序都可以访问 </span><span class=\"inline-wrap\"><code>HelperService</code></span><span class=\"inline-wrap\"> 提供的功能。</span></div></div><code-block id=\"vgscJWEMr22fTbny9Zac8S\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// app.controller.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// import { HelperService } from './helper/helper.service'; 不需要再单独导入</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> appService<span class=\"token operator\">:</span> AppService<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> helperService<span class=\"token operator\">:</span> HelperService<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> uniqueId <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>helperService<span class=\"token punctuation\">.</span><span class=\"token function\">generateUniqueId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> message <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>appService<span class=\"token punctuation\">.</span><span class=\"token function\">getAppMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>message<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> Unique ID: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>uniqueId<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block><div id=\"pBx7hSfDYJMYhwm5rffDsk\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>HelperService</code></span><span class=\"inline-wrap\"> 被注入到 </span><span class=\"inline-wrap\"><code>AppController</code></span><span class=\"inline-wrap\"> 中，然后使用 </span><span class=\"inline-wrap\"><code>generateUniqueId</code></span><span class=\"inline-wrap\"> 方法生成一个唯一标识符。通过这种方式，你可以在整个应用程序中的任何地方注入 </span><span class=\"inline-wrap\"><code>HelperService</code></span><span class=\"inline-wrap\"> 并使用其中的方法，而不需要在每个模块中都重复导入或提供 </span><span class=\"inline-wrap\"><code>HelperService</code></span><span class=\"inline-wrap\">。这有助于避免代码重复，提高可维护性，并确保全局模块中的功能在整个应用中可用。</span></div></div></details></li><li id=\"xdaHL9A11uP4YXX2hFtusP\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">控制器相关</span><details id=\"tVhxgsi7BU27oG5siA7Sys\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Controller()</code></span><span class=\"inline-wrap\">: 声明模块里的控制器。</span></summary><code-block id=\"iHiaayYBefy4nefJAJGV95\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Hello World!'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre></div></code-block></details></li><li id=\"tbMyxVLfWHVHDbrPYD3fBW\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">提供者（服务）相关\n</span><details id=\"2HKVHGR1dKU9sUvHNTfM1q\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Injectable()</code></span><span class=\"inline-wrap\">: 声明模块里可以注入的提供者（服务）。</span></summary><code-block id=\"tKwkqKtfZcie9fRKQB2yVm\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppService</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Hello World!'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"cTcwJ7SjSZJryznRuAPQPq\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Inject</code></span><span class=\"inline-wrap\">：通过 token 手动指定注入的 provider，token 可以是 class 或者 string</span></summary><code-block id=\"kcYwjFanD9XnXktzV9a92e\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// app.service.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Injectable<span class=\"token punctuation\">,</span> Inject <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> LoggerService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./logger.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppService</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Inject</span></span><span class=\"token punctuation\">(</span>LoggerService<span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> logger<span class=\"token operator\">:</span> LoggerService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getAppMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Getting app message...'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Hello from AppService!'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"4xts2F2s5p1FRGYnkrt9Lm\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Optional()</code></span><span class=\"inline-wrap\">: 声明注入的依赖服务是可选的，可以为空。(注入的依赖如果没有的话，创建对象时会报错)</span></summary><code-block id=\"9M3qvatK2JCkJ9vQfJnMDP\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// optional.service.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Injectable<span class=\"token punctuation\">,</span> Optional <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">OptionalService</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Optional Service Data'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// app.service.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Injectable<span class=\"token punctuation\">,</span> Optional <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OptionalService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./optional.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppService</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Optional</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> optionalService<span class=\"token operator\">:</span> OptionalService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> optionalData <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>optionalService <span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>optionalService<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Optional service is not available'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello World! </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>optionalData<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details></li></ul><div id=\"g5SsJdwmgrQV34x4wArCoQ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"nmG2tHRpx4WG9TVNL2ydHf\" class=\"wolai-block\"><span class=\"inline-wrap\">方法装饰器</span></h3><ul class=\"wolai-block\"><li id=\"N87vrx7k8PAGFbW9QLAaq\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">HTTP 相装饰器</span><details id=\"pfg8wncCWvghPknMY9Wu4w\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b><code>@Get()</code></b></span><span class=\"inline-wrap\"><b>、</b></span><span class=\"inline-wrap\"><b><code>@Post()</code></b></span><span class=\"inline-wrap\"><b>、</b></span><span class=\"inline-wrap\"><b><code>@Put()</code></b></span><span class=\"inline-wrap\"><b>、</b></span><span class=\"inline-wrap\"><b><code>@Patch()</code></b></span><span class=\"inline-wrap\"><b>、</b></span><span class=\"inline-wrap\"><b><code>@Delete()</code></b></span><span class=\"inline-wrap\"><b> 、@Options()、@Head()等装饰器：</b></span></summary><code-block id=\"8jyFVj6JxwVtNMZcR2tEdH\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Post<span class=\"token punctuation\">,</span> Put<span class=\"token punctuation\">,</span> Patch<span class=\"token punctuation\">,</span> Delete <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'GET request handled'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Post</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">postData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'POST request handled'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Put</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">putData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'PUT request handled'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Patch</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">patchData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'PATCH request handled'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Delete</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">deleteData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'DELETE request handled'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"eyot87xodUjPeJvBTXX4yr\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@HttpCode()</code></span><span class=\"inline-wrap\">: 修改响应的状态码。</span></summary><code-block id=\"wEDRbMLTcaTEhmjocNTZVH\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> HttpCode <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">HttpCode</span></span><span class=\"token punctuation\">(</span><span class=\"token number\">201</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 将 HTTP 状态码设置为 201 Created</span>\n  <span class=\"token function\">getExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'带有自定义状态码的示例响应'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"7nahEPYLNEJCKaMovKdRtn\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Header()</code></span><span class=\"inline-wrap\">: 修改响应头。</span></summary><code-block id=\"t7RPy39xrj6JA2QHHwwgnL\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Header <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Header</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'Cache-Control'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'no-store'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 将 Cache-Control 头设置为 'no-store'</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Header</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'Custom-Header'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Custom-Value'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 添加自定义头部</span>\n  <span class=\"token function\">getExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'带有自定义头部的示例响应'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"cvwrLoxSqUG878njdZuQdE\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Redirect()</code></span><span class=\"inline-wrap\">: 指定重定向的 URL。</span></summary><code-block id=\"ai6XhJzXECxW4yWpvZ5zUM\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Redirect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'redirect'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Redirect</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.example.com'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 重定向到指定的 URL</span>\n  <span class=\"token function\">getRedirectExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 由于重定向，此方法将不会被执行</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"4w27YzafxMprPDzrotypXz\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Render()</code></span><span class=\"inline-wrap\">: 指定渲染用的模板引擎。</span></summary><code-block id=\"tr2XaTmi2G2GZZgJrPUWsr\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Render <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'render'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Render</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'index'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用默认视图引擎渲染 'index' 模板</span>\n  <span class=\"token function\">getRenderExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> message<span class=\"token operator\">:</span> <span class=\"token string\">'你好，NestJS！'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 传递给视图的数据</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details></li></ul><h3 id=\"vKAFFYKnWjSxexv2LJy9hB\" class=\"wolai-block\"><span class=\"inline-wrap\">参数装饰器</span></h3><ul class=\"wolai-block\"><li id=\"wEKfqXLfkt18LgQUNcLtxk\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><b>请求对象和响应对象相关</b></span><details id=\"tWyWdm6S3NwCnoC1MfbJ5v\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Req()</code></span><span class=\"inline-wrap\">, </span><span class=\"inline-wrap\"><code>@Request()</code></span><span class=\"inline-wrap\">: 注入 request 对象。</span></summary><div id=\"gkhd2LPyoQt6MQGFy2B8oJ\" class=\"wolai-block wolai-text\"><div></div></div><code-block id=\"2uQkyxKQEPhqD2E2LR74JY\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Req<span class=\"token punctuation\">,</span> Request <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Request <span class=\"token keyword\">as</span> ExpressRequest <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Req</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> request<span class=\"token operator\">:</span> ExpressRequest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Request URL: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>request<span class=\"token punctuation\">.</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'/alternative'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getDataAlternative</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Request</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> request<span class=\"token operator\">:</span> ExpressRequest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Request URL (Alternative): </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>request<span class=\"token punctuation\">.</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"eNaMZsRKy1fMZQRhx6WUo\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Res()</code></span><span class=\"inline-wrap\">, </span><span class=\"inline-wrap\"><code>@Response()</code></span><span class=\"inline-wrap\">: 注入 response 对象，</span></summary><code-block id=\"gTZRRrtN9cm6cQGM9k9UE9\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Res<span class=\"token punctuation\">,</span> Response <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Response <span class=\"token keyword\">as</span> ExpressResponse <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">sendData</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Res</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> response<span class=\"token operator\">:</span> ExpressResponse<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello, World!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'/alternative'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">sendDataAlternative</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Response</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> response<span class=\"token operator\">:</span> ExpressResponse<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello, World! (Alternative)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details></li><li id=\"6UuCpiMW1u7Kt484TDVyMh\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><b>路由参数相关</b></span><details id=\"tMvXBC8YDsJJHfiap1Hv95\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Param()</code></span><span class=\"inline-wrap\">: 取出 URL 中的参数。</span></summary><div id=\"vQHXmq8EEHfpcQurSwkLkE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Param(&#39;id&#39;)</code></span><span class=\"inline-wrap\"> 用于提取 URL 中的参数，并将其作为方法参数传递给 </span><span class=\"inline-wrap\"><code>getData</code></span><span class=\"inline-wrap\"> 方法。</span></div></div><code-block id=\"jF5zCWQeaDJAEGRsybxiQt\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Param <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">':id'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Param</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span> id<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Data for ID </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"7RuFiw3vY5SMPV49jp5mok\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Query()</code></span><span class=\"inline-wrap\">: 取出 query 部分的参数。</span></summary><div id=\"bfb7GWupyuEKBUQPT91bVZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Query(&#39;param&#39;)</code></span><span class=\"inline-wrap\"> 用于提取 URL 查询参数，并将其作为方法参数传递给 </span><span class=\"inline-wrap\"><code>getData</code></span><span class=\"inline-wrap\"> 方法。</span></div></div><code-block id=\"qJ9FX8EAUmYEuQKAE7k8BB\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Query <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Query</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'param'</span><span class=\"token punctuation\">)</span> param<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Received query parameter: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>param<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"cTy1m8JwNpKeFxxNYVKhRy\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Body()</code></span><span class=\"inline-wrap\">: 取出请求 body，通过 DTO class 来接收。</span></summary><div id=\"k65opH8jGw47RoQQ2ccx7G\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Body()</code></span><span class=\"inline-wrap\"> 用于提取请求体中的数据，并将其作为方法参数传递给 </span><span class=\"inline-wrap\"><code>createItem</code></span><span class=\"inline-wrap\"> 方法。</span></div></div><code-block id=\"3P7iHCeN69oEgMxB2U3Vor\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Post<span class=\"token punctuation\">,</span> Body <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CreateItemDto</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  description<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Post</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">createItem</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Body</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> createItemDto<span class=\"token operator\">:</span> CreateItemDto<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Logic to create an item using the provided data</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Created item: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>createItemDto<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"8r7YqqAocmKMSq7SGeM6K5\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Headers()</code></span><span class=\"inline-wrap\">: 取出某个或全部请求头。</span></summary><div id=\"obvCgB8RZU7pUBRkCcuf4K\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Headers(&#39;authorization&#39;)</code></span><span class=\"inline-wrap\"> 用于提取请求头中的 </span><span class=\"inline-wrap\"><code>authorization</code></span><span class=\"inline-wrap\"> 数据，并将其作为方法参数传递给 </span><span class=\"inline-wrap\"><code>getData</code></span><span class=\"inline-wrap\"> 方法</span></div></div><code-block id=\"fhLbETPErZuX1wk4fJh8T6\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Headers <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Headers</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'authorization'</span><span class=\"token punctuation\">)</span> authorization<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Authorization header: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>authorization<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"aYQyAykCpTshrvj89A8zrd\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Session()</code></span><span class=\"inline-wrap\">: 取出 session 对象，需要启用 express-session 中间件。</span></summary><div id=\"8qFhqgC31xbiujXHF1SULw\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Session()</code></span><span class=\"inline-wrap\"> 装饰器允许你访问存储在用户会话中的数据。</span></div></div><blockquote id=\"uwtcpyXxjwX363mQHPycQL\" class=\"wolai-block\"><span class=\"inline-wrap\">确保在使用 </span><span class=\"inline-wrap\"><code>@Session()</code></span><span class=\"inline-wrap\"> 装饰器之前，你已经正确配置并启用了 </span><span class=\"inline-wrap\"><code>express-session</code></span><span class=\"inline-wrap\"> 中间件。</span></blockquote><code-block id=\"asqXAUZkKX77h6UaR8Z3JR\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Session <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Session</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> session<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Access session data</span>\n    <span class=\"token keyword\">const</span> userId <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>userId<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">User ID from session: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>userId<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"mDN9EKQroCPwZip9vZsFoo\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@HostParam()</code></span><span class=\"inline-wrap\">: 取出 host 里的参数。</span></summary><code-block id=\"bCBAacxHkwMRZ89jnSdbPK\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> HostParam <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example/:subdomain'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getSubdomain</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">HostParam</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'subdomain'</span><span class=\"token punctuation\">)</span> subdomain<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Subdomain: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>subdomain<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details></li></ul><h3 id=\"wSRR5JymoLx3Wg3TWCfBWe\" class=\"wolai-block\"><span class=\"inline-wrap\">功能性装饰器</span><details id=\"7uTreWNVCFsWfBfr7umdur\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b><code>@UseGuards()</code></b></span><span class=\"inline-wrap\"><b> 添加身份验证、授权等守卫</b></span></summary><code-block id=\"uhdwr6vpKSRmjRLy5WTt4S\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> UseGuards <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AuthGuard <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./auth.guard'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'secured'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SecuredController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UseGuards</span></span><span class=\"token punctuation\">(</span>AuthGuard<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getSecuredData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Secured data'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"a8QefobhvSK6RoSjBniHen\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b><code>@UseInterceptors()</code></b></span><span class=\"inline-wrap\"><b> 使用拦截器</b></span></summary><code-block id=\"c6ViiTe6XbtwHyH573yfsK\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> UseInterceptors <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> LoggingInterceptor <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./logging.interceptor'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UseInterceptors</span></span><span class=\"token punctuation\">(</span>LoggingInterceptor<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'GET request handled'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"qZRyV94GqWLof8bSsm7BNP\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b><code>@UseFilters()</code></b></span><span class=\"inline-wrap\"><b> 使用异常过滤器</b></span></summary><code-block id=\"p7oRrAJm2vEyqEHCPydYae\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> UseFilters <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CustomExceptionFilter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./custom-exception.filter'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UseFilters</span></span><span class=\"token punctuation\">(</span>CustomExceptionFilter<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Unexpected error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"uB2nBjHNtjiBLWtHdmbpx9\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b><code>@UsePipes()</code></b></span><span class=\"inline-wrap\"><b> 使用管道</b></span></summary><code-block id=\"p4RWLEL9qg5aSdQ5E6rDX1\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> UsePipes<span class=\"token punctuation\">,</span> ValidationPipe <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UsePipes</span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ValidationPipe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Some logic here</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"6wZtAcanfxGsRkm9f5XWKr\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b><code>@Next()</code></b></span><span class=\"inline-wrap\">: 注入调用下一个 handler 的 next 方法。</span></summary><div id=\"2yKDRUHTEzvRjbHj28eYTM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Next()</code></span><span class=\"inline-wrap\"> 装饰器注入 </span><span class=\"inline-wrap\"><code>next</code></span><span class=\"inline-wrap\"> 函数，该函数用于将控制传递给下一个中间件或处理程序函数。</span></div></div><code-block id=\"vNjDCQ4gnGHsPFUyWxhakQ\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Injectable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyMiddleware</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">use</span><span class=\"token punctuation\">(</span>req<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> res<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">next</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Before handling the request...'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 调用 @Next() 装饰器注入的 next 函数，将控制传递给下一个中间件或处理程序</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'After handling the request...'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"9Aqaan9JVYwTTM9vbf9g3B\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@SetMetadata()</code></span><span class=\"inline-wrap\">: 在 class 或者 handler 上添加 metadata。</span></summary><div id=\"gd1FyLH6yqjzxBv6YxqCkq\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这个装饰器的底层实现就是 Reflect.defineMetadata；</span></div></div><div id=\"2WrsMP1Uvsyo3wKedwM5pD\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image.png\" style=\"width: 590px\"/></figure></div><div id=\"4ebVEBrHDPutxZphXeeZ6J\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">怎么使用的，举个例子：</span></div></div><div id=\"vN2KjbvVSCpFZ3jpFumSAH\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">我们可以使用 </span><span class=\"inline-wrap\"><code>@SetMetadata()</code></span><span class=\"inline-wrap\"> 装饰器结合自定义装饰器和拦截器来实现一个基本的权限控制系统。</span></div></div><div id=\"d8BtTFLQ9Vh8xuAWqPVwV1\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">首先，定义一个自定义装饰器 </span><span class=\"inline-wrap\"><code>@Roles()</code></span><span class=\"inline-wrap\"> 用于在处理程序上设置角色权限：</span></div></div><code-block id=\"rpmpoLxbcfCHsTehXgkWD6\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// roles.decorator.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> SetMetadata <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Roles</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>roles<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">SetMetadata</span><span class=\"token punctuation\">(</span><span class=\"token string\">'roles'</span><span class=\"token punctuation\">,</span> roles<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block><div id=\"6LBqrfjbcRwh9C3gjvAJv5\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">接下来，创建一个守卫 </span><span class=\"inline-wrap\"><code>RolesGuard</code></span><span class=\"inline-wrap\">检查用户的角色是否符合处理程序所需的角色：</span></div></div><code-block id=\"chwqPWiiTQcyj7Jb51SNQx\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// roles.guard.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CanActivate<span class=\"token punctuation\">,</span> ExecutionContext<span class=\"token punctuation\">,</span> Injectable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Reflector <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RolesGuard</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">CanActivate</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> reflector<span class=\"token operator\">:</span> Reflector<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">canActivate</span><span class=\"token punctuation\">(</span>context<span class=\"token operator\">:</span> ExecutionContext<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> requiredRoles <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>reflector<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'roles'</span><span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">getHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>requiredRoles<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 如果没有设置角色要求，则允许访问</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> user <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">switchToHttp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> requiredRoles<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span>role <span class=\"token operator\">=></span> user<span class=\"token punctuation\">.</span>roles<span class=\"token operator\">?.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>role<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block><div id=\"qABPKcHJvf6qTk25UbgENB\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">最后，将这个守卫应用于一个需要权限控制的控制器：</span></div></div><code-block id=\"n8q1YhL8Mgs48Zv5mYTD88\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// app.controller.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> UseGuards <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> RolesGuard <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./roles.guard'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Roles <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./roles.decorator'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'app'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Roles</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用 @Roles 装饰器设置角色要求</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UseGuards</span></span><span class=\"token punctuation\">(</span>RolesGuard<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用守卫进行权限检查</span>\n  <span class=\"token function\">getAdminData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Admin Data'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Roles</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用 @Roles 装饰器设置角色要求</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UseGuards</span></span><span class=\"token punctuation\">(</span>RolesGuard<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用守卫进行权限检查</span>\n  <span class=\"token function\">getUserData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'User Data'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block><div id=\"4DwtqsbgsmwgPvBBqx92FR\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在这个例子中，</span><span class=\"inline-wrap\"><code>@Roles()</code></span><span class=\"inline-wrap\"> 装饰器用于设置每个处理程序需要的角色权限，然后 </span><span class=\"inline-wrap\"><code>RolesGuard</code></span><span class=\"inline-wrap\"> 拦截器会检查用户是否具备足够的权限。这里使用了 </span><span class=\"inline-wrap\"><code>@UseGuards()</code></span><span class=\"inline-wrap\"> 装饰器来将 </span><span class=\"inline-wrap\"><code>RolesGuard</code></span><span class=\"inline-wrap\"> 拦截器应用于相应的处理程序。</span></div></div><div id=\"gBCQEM8LPsdsGVBtGM1wX4\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">通过使用元数据，我们能够动态地设置和获取处理程序的角色权限要求，实现了一个基本的权限控制系统。这种方式提供了更灵活和可扩展的权限管理机制。</span></div></div></details></h3><div id=\"uyBkSNxsyYz6KXFwMWwB8F\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"7BRaTChsjKDXVa18RELJow\" class=\"wolai-block\"><span class=\"inline-wrap\">深入了解装饰器</span></h2><h3 id=\"hB8yAogDiSVFc1Ne44BhiX\" class=\"wolai-block\"><span class=\"inline-wrap\">装饰器的工作原理</span></h3><ul class=\"wolai-block\"><li id=\"Ln2DZDosCfHcyy7uqkS3b\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">Reflect 对象</span><div id=\"fN7zMFevtrJTa2xdD2qc1j\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>Reflect</code></span><span class=\"inline-wrap\"> 是 JavaScript 的内置对象，提供了一组静态方法，用于拦截和修改 JavaScript 操作。</span></div></div><details id=\"kNLyKTihtdeqPKA2aE3Xc3\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b>常见 Reflect 方法：</b></span><span class=\"inline-wrap\"> 包括 </span><span class=\"inline-wrap\"><code>Reflect.get</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>Reflect.set</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>Reflect.has</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>Reflect.apply</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>Reflect.construct</code></span><span class=\"inline-wrap\"> 等，用于属性获取、设置、判断存在、方法调用和实例构造等操作。</span></summary><code-block id=\"t8JBWVoAGtgnvaps1c7SJv\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> <span class=\"token number\">42</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 42</span>\nReflect<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> hasProperty <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token function\">Reflect</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span>max<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 5</span>\n<span class=\"token keyword\">let</span> instance <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">construct</span><span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 当前时间的 Date 实例</span>\n</pre></div></code-block></details><details id=\"p89hNw5TpgrcnctwosoRm3\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b>Metadata API</b></span></summary><div id=\"mVJFwvowxUuqFMNN93HNzK\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">但实现 Nest 用到的 api 还没有进入标准，还在草案阶段；</span></div></div><code-block id=\"aRnhtvdcFDXVWSwvo14E6F\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre>Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">defineMetadata</span><span class=\"token punctuation\">(</span>metadataKey<span class=\"token punctuation\">,</span> metadataValue<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nReflect<span class=\"token punctuation\">.</span><span class=\"token function\">defineMetadata</span><span class=\"token punctuation\">(</span>metadataKey<span class=\"token punctuation\">,</span> metadataValue<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> propertyKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">getMetadata</span><span class=\"token punctuation\">(</span>metadataKey<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">getMetadata</span><span class=\"token punctuation\">(</span>metadataKey<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> propertyKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block><div id=\"41qcbKhmNbvpoVeY5tk88C\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><b>Reflect.defineMetadata</b></span><span class=\"inline-wrap\"> 和 </span><span class=\"inline-wrap\"><b>Reflect.getMetadata</b></span><span class=\"inline-wrap\"> 分别用于设置和获取某个类的元数据，如果最后传入了属性名，还可以单独为某个属性设置元数据。</span></div></div></details></li></ul><details id=\"asqT6YtgYjqJY8bJvKHxZy\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">元数据的存储和读取</span></summary><div id=\"gxacnjJqhRoVxR4A5gaA2L\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><b>元数据存在哪呢？</b></span></div></div><div id=\"3bgvG5FtX64YiVh1Abqyvq\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">存在类或者对象上，如果</span><span class=\"inline-wrap\"><b>给类或者类的静态属性添加元数据</b></span><span class=\"inline-wrap\">，那就保存在类上；</span></div></div><div id=\"6D2uq8cnyg366JCXiwteVN\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">如果</span><span class=\"inline-wrap\"><b>给实例属性添加元数据</b></span><span class=\"inline-wrap\">，那就保存在实例对象上，用类似</span><span class=\"inline-wrap\"><b> [[metadata]]</b></span><span class=\"inline-wrap\"> 的 key 来存的。</span></div></div><div id=\"25CBjrwkkFEiq7d8EA72D\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">看上面的 api 确实看不出啥，但它</span><span class=\"inline-wrap\"><b>支持装饰器的方式</b></span><span class=\"inline-wrap\">使用：</span></div></div><div id=\"qiFrx9GVHT8RWQQNoLutUg\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">1.</span><span class=\"inline-wrap\"><b>Reflect.metadata 装饰器</b></span></div></div><code-block id=\"xmTooevCqECpzoYsYXP9Nu\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Reflect</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">metadata</span><span class=\"token punctuation\">(</span>metadataKey<span class=\"token punctuation\">,</span> metadataValue<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Example</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Reflect</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">metadata</span><span class=\"token punctuation\">(</span>metadataKey<span class=\"token punctuation\">,</span> metadataValue<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block><div id=\"7RyfKZuH8FZSctvxbncDVP\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">2.</span><span class=\"inline-wrap\"><b>装饰器的封装：</b></span><span class=\"inline-wrap\"> 将 Reflect.metadata 装饰器封装为更具表达力的装饰器，例如 </span><span class=\"inline-wrap\"><code>Type</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>ParamTypes</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>ReturnType</code></span><span class=\"inline-wrap\">。</span></div></div><code-block id=\"ozvCv2VgtMTaL4PvzHinUb\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Type</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">metadata</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"design:type\"</span><span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ParamTypes</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>types<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">metadata</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"design:paramtypes\"</span><span class=\"token punctuation\">,</span> types<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ReturnType</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">metadata</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"design:returntype\"</span><span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ParamTypes</span></span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">,</span> Number<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Example</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ReturnType</span></span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Type</span></span><span class=\"token punctuation\">(</span><span class=\"token builtin\">Function</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ParamTypes</span></span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">,</span> Number<span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ReturnType</span></span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block><div id=\"2eZt6Sk8NYYC7s5c1oSvng\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">然后我们就可以通过 Reflect metadata 的 api 获取这个类和对象的元数据了：</span></div></div><code-block id=\"qKztrD8KzoJygRpPxNba4K\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Example</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> paramTypes <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">getMetadata</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"design:paramtypes\"</span><span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">,</span> <span class=\"token string\">\"add\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// [Number, Number]</span>\n</pre></div></code-block></details><div id=\"eEN2EQetKhLMGixoJ137tE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"uesFiCyVAWbvbu2X7RVyeg\" class=\"wolai-block\"><span class=\"inline-wrap\">NestJS<span class=\"jill\"></span>中是如何实现的</span></h3><div id=\"mY1TaCAAVkkkHuxFm1LXL9\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"> 先看一段源码：</span></div></div><div id=\"5EveQg6h4QDA7tNZUbQ4Y9\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_1.png\" style=\"width: 830px\"/></figure></div><div id=\"cvAdccgjckJKZRu3pkTVK5\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Module</code></span><span class=\"inline-wrap\"> 装饰器调用了 </span><span class=\"inline-wrap\"><code>Reflect.defineMetadata</code></span><span class=\"inline-wrap\"> 来给这个类添加了一些元数据。所以我们这样用的时候：</span></div></div><code-block id=\"wioS5AJQkgxBsRWADyZPS7\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppController <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n</pre></div></code-block><div id=\"pB1kgRNr1M6WMEsEtgx4ir\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"> 其实就是给 AppModule 添加了 controllers 的元数据和 providers 的元数据。后面创建 IOC 容器的时候就会取出这些元数据来处理。</span></div></div><blockquote id=\"nXoyaPv4BTjE8aPRucs8eF\" class=\"wolai-block\"><span class=\"gray inline-wrap\">现在 metadata 的 api 还在草案阶段，需要使用 reflect-metadata 这个 polyfill 包才行。</span></blockquote><div id=\"opxWxCsmyGkevULNRfSbwp\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"hujrHXA584zNBkxwpTV4rk\" class=\"wolai-block\"><span class=\"inline-wrap\">为什么用<span class=\"jill\"></span>Typescript</span></h3><details id=\"ogosepz5JjMStr7TXxW9iA\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">完整例子</span></summary><code-block id=\"fobzw3TWNDWcgfFNCX9Hqs\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// logger.service.ts </span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Injectable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LoggerService</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">log</span><span class=\"token punctuation\">(</span>message<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//  example.service.ts </span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Injectable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> LoggerService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./logger.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleService</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> loggerService<span class=\"token operator\">:</span> LoggerService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">performTask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>loggerService<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Task performed!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//  example.controller.ts </span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ExampleService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./example.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> exampleService<span class=\"token operator\">:</span> ExampleService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>exampleService<span class=\"token punctuation\">.</span><span class=\"token function\">performTask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Data from Nest.js!'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//  app.module.ts </span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ExampleController <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./example.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ExampleService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./example.service'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> LoggerService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./logger.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>ExampleController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>ExampleService<span class=\"token punctuation\">,</span> LoggerService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></pre></div></code-block><div id=\"rLJz8d8ssgjMqJBWuVEmkb\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div></details><details id=\"wrjtpN2z4oDiBfzd6hd1cK\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">执行顺序</span></summary><div id=\"s8FvJjaV8tADViKon8veYi\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在 Nest.js 中，整个依赖扫描和实例化的过程可以按照以下时间线来描述，同时结合三个元数据 (</span><span class=\"inline-wrap\"><code>design:type</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>design:returntype</code></span><span class=\"inline-wrap\">) 的作用：</span></div></div><ol class=\"wolai-block\"><li id=\"px3zbJjBBgm5M2yCwhn8Lb\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>模块装载（Module Loading）：</b></span><ul class=\"wolai-block\"><li id=\"qyGEh6JPdmNp1YaFyp4VLQ\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">Nest.js 应用程序启动时，首先会装载主模块（通常是 </span><span class=\"inline-wrap\"><code>AppModule</code></span><span class=\"inline-wrap\">）。</span></li><li id=\"9Wr9bXHUw2yDmQkfEV9KCN\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">在主模块中，使用 </span><span class=\"inline-wrap\"><code>@Module</code></span><span class=\"inline-wrap\"> 装饰器指定模块的元数据，包括控制器和提供者。</span></li></ul></li><li id=\"dFmcuU1PnAAgXgGdAsjzQ\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>提供者扫描（Provider Scanning）：</b></span><ul class=\"wolai-block\"><li id=\"8awZppggKPNDaq7mmP24j\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">Nest.js 模块扫描提供者（</span><span class=\"inline-wrap\"><code>@Injectable()</code></span><span class=\"inline-wrap\"> 装饰的类），解析其元数据。</span></li><li id=\"phKmLJYchRXyKr6dYyLWmL\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>design:type</code></span><span class=\"inline-wrap\"> 元数据描述提供者的类型。例如，如果有一个提供者类 </span><span class=\"inline-wrap\"><code>LoggerService</code></span><span class=\"inline-wrap\">，</span><span class=\"inline-wrap\"><code>design:type</code></span><span class=\"inline-wrap\"> 可能是 </span><span class=\"inline-wrap\"><code>Function</code></span><span class=\"inline-wrap\"> 表示它是一个类构造函数。</span></li></ul></li><li id=\"9cnKuTdWTTgSbK1K11gR9s\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>构造函数参数扫描（Constructor Parameter Scanning）：</b></span><ul class=\"wolai-block\"><li id=\"vMZUHS5WB4CdWVoBsYJuZP\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">对于每个提供者，检查其构造函数，并使用 </span><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\"> 元数据获取构造函数参数的类型信息。</span></li><li id=\"8BqdVM9D2Z74CJ9HXizRCD\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\"> 是一个数组，描述了构造函数的参数类型。例如，</span><span class=\"inline-wrap\"><code>ExampleService</code></span><span class=\"inline-wrap\"> 的构造函数参数是 </span><span class=\"inline-wrap\"><code>LoggerService</code></span><span class=\"inline-wrap\">，</span><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\"> 可能是 </span><span class=\"inline-wrap\"><code>[LoggerService]</code></span><span class=\"inline-wrap\">。</span></li></ul></li><li id=\"8FuuvMU4UYGq4DoYTTTGqv\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>模块初始化和实例化（Module Initialization and Instantiation）：</b></span><ul class=\"wolai-block\"><li id=\"vSYt5F1sAQvchdS1ko3Qcu\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">对于每个提供者，IoC 容器根据构造函数参数递归实例化其依赖项。</span></li><li id=\"eGBoDgmoBk5GXNFYTrzjiL\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">使用提供者的构造函数创建实例，并将依赖项注入到构造函数中。</span></li><li id=\"jZkn3NQiWSba7LUkP3WHCm\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">如果有其他模块被导入，重复上述步骤。</span></li></ul></li><li id=\"7nywMgjxX6m4oGYmiy2gcY\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>控制器扫描和路由解析（Controller Scanning and Route Resolution）：</b></span><ul class=\"wolai-block\"><li id=\"n2K6Dti2kpGXbpdGY57c4s\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">Nest.js 模块扫描控制器（</span><span class=\"inline-wrap\"><code>@Controller()</code></span><span class=\"inline-wrap\"> 装饰的类）。</span></li><li id=\"cyPMKByJSxd75J57UniQmr\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">对于每个控制器类，解析其元数据，包括路由和路由处理方法。</span></li></ul></li><li id=\"7LrdqCDzLwAreZsiuHhGrJ\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>方法元数据解析（Method Metadata Resolution）：</b></span><ul class=\"wolai-block\"><li id=\"hqMWeMDgyiAfp6Q72c45uw\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">对于每个路由处理方法，解析其元数据，包括 </span><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\"> 和 </span><span class=\"inline-wrap\"><code>design:returntype</code></span><span class=\"inline-wrap\">。</span></li><li id=\"fSTSGVZusYNAT9tKHRRHq1\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\"> 描述了方法的参数类型，而 </span><span class=\"inline-wrap\"><code>design:returntype</code></span><span class=\"inline-wrap\"> 描述了方法的返回值类型。</span></li></ul></li></ol><div id=\"cBdwFhJtiomRb9KKyYfoeK\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">总体而言，Nest.js 的 IoC 容器在模块装载和初始化过程中，通过装饰器中的元数据来实现提供者和控制器的扫描、实例化和依赖注入。三个元数据在这个过程中提供了关键的类型信息，确保了正确的依赖解析和注入。这使得 Nest.js 能够在运行时动态地管理类之间的依赖关系，实现依赖注入和路由解析等功能。</span></div></div></details><div id=\"evx4YBx8GMbJbbJormXMz9\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">细心的同学可能会发现，上面的例子一般是扫描加载指定模块的元数据，包括<span class=\"jill\"></span>controller<span class=\"jill\"></span>和<span class=\"jill\"></span>provider，但是在创建示例时，是需要知道构造器的参数，现在并没有添加这部分 metadata 数据呀，所以这里需要提到<span class=\"jill\"></span>Typescript<span class=\"jill\"></span>的优势，TypeScript 支持编译时自动添加一些 metadata 数据：</span></div></div><div id=\"ppsLMx168a48ggVLaU4gmT\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">比如这段代码：</span></div></div><div id=\"b6mW4Hm9zg3tg9xnEdsubX\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_2.png\" style=\"width: 554px\"/></figure></div><div id=\"us4abxZSQijAwVpVeC6xK8\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">添加了一个元数据，生成后的代码是这样的：</span></div></div><div id=\"gqJr1njpx4AjhJzM5xHocr\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_3.png\" style=\"width: 601px\"/></figure></div><div id=\"babMaqtoFiSZa6XShzYruZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">但是呢，ts 有一个编译选项叫做 </span><span class=\"inline-wrap\"><code>emitDecoratorMetadata</code></span><span class=\"inline-wrap\">，开启它就会自动添加一些元数据。开启之后再试一下：</span></div></div><div id=\"qRDRmbXBBLMpENamJpg4Pr\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_4.png\" style=\"width: 608px\"/></figure></div><div id=\"eVYUtEVdcZZoH1247nHawT\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">会看到多了三个元数据：</span></div></div><div id=\"9Qr4U2HJSycHWBdHDZSKGz\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>design:type</code></span><span class=\"inline-wrap\">是<span class=\"jill\"></span>Function，是描述装饰目标的元数据，这里装饰的是函数</span></div></div><div id=\"uXXpx6XHFVoBUK7piTvWu\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\"> 是 [Number]，是参数的类型</span></div></div><div id=\"qySUZZy71wmQpwReLY31Dz\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>design:returntype</code></span><span class=\"inline-wrap\"> 是 String，是返回值的类型</span></div></div><div id=\"s6stezuQjqkc4jNF41cDMU\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">所以，只要开启了这个编译选项，ts 生成的代码会自动添加一些元数据。然后创建对象的时候就可以通过 </span><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\"> 来拿到构造器参数的类型了，也就知道怎么注入依赖，怎么去<span class=\"jill\"></span>new<span class=\"jill\"></span>实例。</span></div></div><div id=\"f1tmKU7UGj8qDMrJMQobVH\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"f6dL8R8eCwHSRsWtzVSozZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这也是为什么 nest 会用 ts 来写，因为它很依赖这个 </span><span class=\"inline-wrap\"><b>emitDecoratorMetadata</b></span><span class=\"inline-wrap\"> 的编译选项。</span></div></div><blockquote id=\"PQQ3ZJ943SdA7r1h8Xi7Y\" class=\"wolai-block\"><span class=\"gray inline-wrap\">nest cli<span class=\"jill\"></span>生成的模板是默认开启这个编译选项的。</span></blockquote><div id=\"2Xczw3J5tbg2pVoWnvhfu4\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">总结一下核心实现原理：</span><span class=\"inline-wrap\"><b>通过装饰器给 class 或者对象添加 metadata，并且开启 ts 的 emitDecoratorMetadata 来自动添加类型相关的 metadata，然后运行的时候通过这些元数据来实现依赖的扫描，对象的创建等等功能。</b></span></div></div><div id=\"2HRMYXRMxutvhzVRdXPxrW\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"8mfWTajKvBgZeH9zhq3S5a\" class=\"wolai-block\"><span class=\"inline-wrap\">自定义装饰器：</span><span class=\"inline-wrap\"><b>@SetMetadata </b></span></h3><div id=\"Fag4iGXMHA8mEw2sruMoZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest<span class=\"jill\"></span>还提供了一个 </span><span class=\"inline-wrap\"><code>@SetMetadata</code></span><span class=\"inline-wrap\"> 的装饰器让我们可以自定义装饰器去给 class、method 添加一些 metadata;</span></div></div><div id=\"wtoqAPc1N2nisQJ8rFY6Hc\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"hGp8Fsdjjxs8gL9Lipc8Cr\" class=\"wolai-block\"><span class=\"inline-wrap\">自定义装饰器的应用场景</span></h2><h4 id=\"ejhvTs7vWkGZDirXgXuXW4\" class=\"wolai-block\"><span class=\"inline-wrap\">性能日志记录</span></h4><details id=\"m6GkkvhNzQo15kscykfbSD\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">创建 </span><span class=\"inline-wrap\"><code>@PerformanceLogger()</code></span><span class=\"inline-wrap\"> 装饰器</span></summary><code-block id=\"H8hF1QYNJgYBaZu7z2Quh\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// performance-logger.decorator.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> SetMetadata <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">PERFORMANCE_LOGGER_KEY</span> <span class=\"token operator\">=</span> <span class=\"token string\">'performance-logger'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">PerformanceLogger</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">SetMetadata</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PERFORMANCE_LOGGER_KEY</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block><code-block id=\"vwrhj8CSdHhaqmBoT345Cr\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// performance-logger.interceptor.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CallHandler<span class=\"token punctuation\">,</span> ExecutionContext<span class=\"token punctuation\">,</span> Injectable<span class=\"token punctuation\">,</span> NestInterceptor <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Observable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> tap <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs/operators'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PerformanceLoggerInterceptor</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">NestInterceptor</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">intercept</span><span class=\"token punctuation\">(</span>context<span class=\"token operator\">:</span> ExecutionContext<span class=\"token punctuation\">,</span> next<span class=\"token operator\">:</span> CallHandler<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Observable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> startTime <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> next\n      <span class=\"token punctuation\">.</span><span class=\"token function\">handle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n        <span class=\"token function\">tap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> requestTime <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> startTime<span class=\"token punctuation\">;</span>\n          <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Request took </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>requestTime<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">ms</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"cKSKGGAeKLnE58EqBFyApN\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">在控制器方法上应用，实现性能监控</span></summary><code-block id=\"94gdGB7uBMFbsQJffert4Y\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// app.controller.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> UseInterceptors <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> PerformanceLogger <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./performance-logger.decorator'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> PerformanceLoggerInterceptor <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./performance-logger.interceptor'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'app'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">PerformanceLogger</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UseInterceptors</span></span><span class=\"token punctuation\">(</span>PerformanceLoggerInterceptor<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getAdminData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Admin Data'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><h4 id=\"ac4r3X9dHoq6okvLrnrPH7\" class=\"wolai-block\"><span class=\"inline-wrap\">权限验证</span></h4><details id=\"nZbddHrr5LKe98VwXKE2AY\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">创建 </span><span class=\"inline-wrap\"><code>@RoleGuard(role: string)</code></span><span class=\"inline-wrap\"> 装饰器</span></summary><code-block id=\"3giAs7wdxYsa2G8aEUpEQZ\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// role-guard.decorator.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> SetMetadata <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">ROLE_GUARD_KEY</span> <span class=\"token operator\">=</span> <span class=\"token string\">'role-guard'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">RoleGuard</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>role<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">SetMetadata</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ROLE_GUARD_KEY</span><span class=\"token punctuation\">,</span> role<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block><code-block id=\"4Fw9nhTenY7G7krNpZh3D3\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// role-guard.guard.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CanActivate<span class=\"token punctuation\">,</span> ExecutionContext<span class=\"token punctuation\">,</span> Injectable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Reflector <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">ROLE_GUARD_KEY</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./role-guard.decorator'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RoleGuard</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">CanActivate</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> reflector<span class=\"token operator\">:</span> Reflector<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">canActivate</span><span class=\"token punctuation\">(</span>context<span class=\"token operator\">:</span> ExecutionContext<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> requiredRole <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>reflector<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token constant\">ROLE_GUARD_KEY</span><span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">getHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>requiredRole<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 如果没有设置角色要求，则允许访问</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> user <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">switchToHttp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> user<span class=\"token punctuation\">.</span>roles<span class=\"token operator\">?.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>requiredRole<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><details id=\"w3LwUHoCKJuypjR9NLp2v4\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">限制特定角色用户访问控制器方法</span></summary><code-block id=\"bZim51FL9ydRoZGAeTsvY3\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// app.controller.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> UseGuards <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> RoleGuard <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./role-guard.guard'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> RoleGuard <span class=\"token keyword\">as</span> RoleGuardDecorator <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./role-guard.decorator'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'app'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">RoleGuardDecorator</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用 @RoleGuard 装饰器设置角色要求</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UseGuards</span></span><span class=\"token punctuation\">(</span>RoleGuard<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用守卫进行权限检查</span>\n  <span class=\"token function\">getAdminData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Admin Data'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre></div></code-block></details><h4 id=\"pmXxfc2GJhtbrGGzdMtsek\" class=\"wolai-block\"><span class=\"inline-wrap\">参数装饰器</span></h4><details id=\"xrFKYH8voBGeoKN4Wwgwbv\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">创建 </span><span class=\"inline-wrap\"><code>@LogParams()</code></span><span class=\"inline-wrap\"> 装饰器</span></summary><code-block id=\"hYV6yp8aEZhGjcJLYdAiic\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// log-params.decorator.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> SetMetadata<span class=\"token punctuation\">,</span> createParamDecorator<span class=\"token punctuation\">,</span> ExecutionContext <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">LOG_PARAMS_KEY</span> <span class=\"token operator\">=</span> <span class=\"token string\">'log-params'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> LogParams <span class=\"token operator\">=</span> <span class=\"token function\">createParamDecorator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">,</span> context<span class=\"token operator\">:</span> ExecutionContext<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> request <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">switchToHttp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Params: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> request<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</pre></div></code-block></details><details id=\"wftYw3cLLdAxxoCZRUhgVw\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">在控制器方法的参数上应用，实现参数日志记录</span></summary><code-block id=\"i3B7b5WvJRm1Sg17r79JhT\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// app.controller.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Param <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> LogParams <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./log-params.decorator'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'app'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'user/:id'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getUserData</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">LogParams</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> params<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">User Data for ID: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>params<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</pre></div></code-block></details><h2 id=\"wzjHT7Pdfj9QJD2pj9iP9Y\" class=\"wolai-block\"><span class=\"inline-wrap\">总结</span></h2><div id=\"owp5x1tLx7DeFoq6XyEuHS\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest.js 的装饰器实现原理基于 TypeScript 提供的装饰器特性和 Reflect Metadata API。</span></div></div><div id=\"8ubegyqcX3VhJWrQqtcq9K\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">通过在类、方法等上添加元数据，去实现了依赖注入、路由映射等功能。</span></div></div><div id=\"3dWhVjcR1bKjFBfFpccDFH\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">以下是主要的实现原理要点：</span></div></div><ol class=\"wolai-block\"><li id=\"7McpACECUM15q9VjbFyrtd\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>Reflect Metadata API:</b></span><span class=\"inline-wrap\"> Nest<span class=\"jill\"></span>使用 Reflect Metadata API 提供的 </span><span class=\"inline-wrap\"><code>Reflect.getMetadata</code></span><span class=\"inline-wrap\"> 和 </span><span class=\"inline-wrap\"><code>Reflect.defineMetadata</code></span><span class=\"inline-wrap\"> 等方法来动态添加和获取元数据，包含了装饰器在类、方法等上的信息。</span></li><li id=\"29hysMeGnWRkYMLaCz1fpa\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>依赖注入:</b></span><span class=\"inline-wrap\"> Nest<span class=\"jill\"></span>中所有的装饰器都使用 Reflect Metadata 来添加元数据，以便在初始化阶段进行依赖扫描和注入。Nest.js 利用这些元数据实现了依赖注入。</span></li><li id=\"7MXrruDSWG6HGDQQyf1krA\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>emitDecoratorMetadata 选项:</b></span><span class=\"inline-wrap\"> TypeScript 提供了 </span><span class=\"inline-wrap\"><code>emitDecoratorMetadata</code></span><span class=\"inline-wrap\"> 编译选项，开启后会自动为装饰器添加一些元数据，包括 </span><span class=\"inline-wrap\"><code>design:type</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>design:returntype</code></span><span class=\"inline-wrap\">。这些元数据用于识别类、方法的类型信息，帮助在运行时进行实例化和注入。</span></li><li id=\"7f1DzjgNkAQSp8sVG7mLou\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>@SetMetadata 装饰器:</b></span><span class=\"inline-wrap\"> Nest.js 还提供了 </span><span class=\"inline-wrap\"><code>@SetMetadata</code></span><span class=\"inline-wrap\"> 装饰器，允许我们自定义装饰器，在控制器的类和方法上添加自定义的元数据，再从拦截器和守卫中通过 </span><span class=\"inline-wrap\"><code>reflector</code></span><span class=\"inline-wrap\"> 的 API 取出来进行相应的处理。</span></li></ol><div id=\"q6xWBPfpMzWNUJSr7MDCxZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">通过理解这些概念，可以更好地理解 Nest.js 中装饰器的工作原理和如何实现依赖注入、路由映射等功能。</span></div></div><div id=\"5FoqNek3vuxpoJo92jveZp\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"m5rQqTjKpaCkHRoTRWj84B\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"rGEo6es7WjJTbNis73kK16\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div></article><footer></footer></body></html>","date":"2023-12-11T05:32:20.378Z","updated":"2023-12-11T05:32:20.378Z","path":"html/nest/nest中的装饰器/Nest中的装饰器.html","_id":"clq0gtc9w0009zqq9dhkqdal6","comments":1,"layout":"page","content":"\n<!DOCTYPE html>\n<html lang=\"zh-Hans-CN\"><head><meta charset=\"utf-8\"/><meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/modern-norm.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/prism.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/katex.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/wolai.css\"/><title>Nest中的装饰器 - wolai 笔记</title><link rel=\"shortcut icon\"></link></head><body class=\"full-width\"><header><div class=\"image has\" style=\"background-position-y: 50%; background-image: url(&quot;https://cdn.wostatic.cn/cover/painting/26HnnzT7aex1JAZ7fiAirc.jpg&quot;)\"></div><div class=\"title\"><div class=\"banner\"><div class=\"icon\"></div></div><div data-title=\"Nest中的装饰器\" class=\"main-title\"></div></div></header><article><h2 id=\"kfs9RQGPHcqMqeoQUqgSEL\" class=\"wolai-block\"><span class=\"inline-wrap\">回顾</span></h2><div id=\"xp4jdqwNXNrbFPzvc2c8y2\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">前两篇中主要介绍了<span class=\"jill\"></span>Nest<span class=\"jill\"></span>的入门使用以及一些框架特性，包括模块、控制器、服务注入、Http<span class=\"jill\"></span>服务、数据库服务等功能，都涉及到很多的装饰器，这一篇会介绍<span class=\"jill\"></span>Nest<span class=\"jill\"></span>中的装饰器，以及工作原理。</span></div></div><h2 id=\"8frTphd6WnbW2Gz9kQX8nK\" class=\"wolai-block\"><span class=\"inline-wrap\">引言</span></h2><h3 id=\"aXDSgBmbwUv5HtUajZEgp\" class=\"wolai-block\"><span class=\"inline-wrap\">装饰器在 Nest 中的角色</span></h3><ul class=\"wolai-block\"><li id=\"tp5hUhETK47nNjYNiprmWJ\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">在 NestJS 中，装饰器是一种强大的工具，对于</span><span class=\"inline-wrap\"><b>扩展或修改类、方法、属性或参数</b></span><span class=\"inline-wrap\">的行为，提供了优雅而灵活的方式，使开发人员能够</span><span class=\"inline-wrap\"><b>在不修改原始代码的情况下</b></span><span class=\"inline-wrap\">添加或修改功能。</span></li><li id=\"nzxs1CoQ8JVQeKapPsJa5g\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">装饰器应用非常广泛，包括</span><span class=\"inline-wrap\"><b>路由、控制器、服务、依赖注入</b></span><span class=\"inline-wrap\">等。它们可以用于定义路由处理程序、中间件、管道，使开发者能够</span><span class=\"inline-wrap\"><b>更专注于业务逻辑的实现</b></span><span class=\"inline-wrap\">，而不必过多关注底层框架细节。</span></li><li id=\"imwJWsnNv4joWeZJA7kxuw\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">NestJS 通过装饰器，提供了</span><span class=\"inline-wrap\"><b>声明式的编程方式</b></span><span class=\"inline-wrap\">，使代码更清晰、易于维护。开发者可以通过在类、方法或属性上应用装饰器来定义元数据或增强其行为，提高代码的</span><span class=\"inline-wrap\"><b>可读性和可维护性</b></span><span class=\"inline-wrap\">。</span></li></ul><h2 id=\"nzaxxzzXj35YibEtADNUcm\" class=\"wolai-block\"><span class=\"inline-wrap\">NestJS 装饰器基础</span></h2><h3 id=\"u3b5D98NuVTAc13aqDMr4m\" class=\"wolai-block\"><span class=\"inline-wrap\">类装饰器</span></h3><ul class=\"wolai-block\"><li id=\"9jUtK6JSizJmiDy2p2JSSY\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">模块相关</span><details id=\"x7BqRk5i3EQojs1W3JCRRe\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Module()</code></span><span class=\"inline-wrap\">: 声明 Nest 模块。</span></summary><code-block id=\"3pJH2UXmTmf8RZEpYks6e3\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Module <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppController <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></div></code-block></details><details id=\"t6baGLxJPrsmT42Li8eKV8\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Global()</code></span><span class=\"inline-wrap\">: 声明全局模块。</span></summary><code-block id=\"hzfaHbGf4sed5zYjtjNNXH\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// helper.module.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Module<span class=\"token punctuation\">,</span> Global <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> HelperService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./helper.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Global</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>HelperService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  exports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>HelperService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelperModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><div id=\"bPu8gqVFv1RVUgs8Hrk9gp\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">创建了 </span><span class=\"inline-wrap\"><code>HelperModule</code></span><span class=\"inline-wrap\">，并导入了 </span><span class=\"inline-wrap\"><code>HelperService</code></span><span class=\"inline-wrap\">，同时使用 </span><span class=\"inline-wrap\"><code>@Global()</code></span><span class=\"inline-wrap\"> 装饰器标记为全局模块。</span></div></div><code-block id=\"5aYFVr9uNVb6n82zYkqn3w\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// helper.service.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Injectable <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelperService</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">generateUniqueId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 实际应用中可能会使用更复杂的算法</span>\n    <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">36</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><div id=\"8NPDr4CcQNk1AFhSWLHGhk\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>HelperService</code></span><span class=\"inline-wrap\"> 提供了一个生成唯一标识符的简单功能。</span></div></div><code-block id=\"f2TqgKZp5WKZBRNkc9JTV4\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// app.module.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Module <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> HelperModule <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./helper/helper.module'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppController <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>HelperModule<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></div></code-block><div id=\"8vBxLgvSKYPgNH3EAmRhMM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">通过将 </span><span class=\"inline-wrap\"><code>HelperModule</code></span><span class=\"inline-wrap\"> 导入到 </span><span class=\"inline-wrap\"><code>AppModule</code></span><span class=\"inline-wrap\"> 中，我们确保整个应用程序都可以访问 </span><span class=\"inline-wrap\"><code>HelperService</code></span><span class=\"inline-wrap\"> 提供的功能。</span></div></div><code-block id=\"vgscJWEMr22fTbny9Zac8S\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// app.controller.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// import &#123; HelperService &#125; from './helper/helper.service'; 不需要再单独导入</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> appService<span class=\"token operator\">:</span> AppService<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> helperService<span class=\"token operator\">:</span> HelperService<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> uniqueId <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>helperService<span class=\"token punctuation\">.</span><span class=\"token function\">generateUniqueId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> message <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>appService<span class=\"token punctuation\">.</span><span class=\"token function\">getAppMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>message<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\"> Unique ID: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>uniqueId<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><div id=\"pBx7hSfDYJMYhwm5rffDsk\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>HelperService</code></span><span class=\"inline-wrap\"> 被注入到 </span><span class=\"inline-wrap\"><code>AppController</code></span><span class=\"inline-wrap\"> 中，然后使用 </span><span class=\"inline-wrap\"><code>generateUniqueId</code></span><span class=\"inline-wrap\"> 方法生成一个唯一标识符。通过这种方式，你可以在整个应用程序中的任何地方注入 </span><span class=\"inline-wrap\"><code>HelperService</code></span><span class=\"inline-wrap\"> 并使用其中的方法，而不需要在每个模块中都重复导入或提供 </span><span class=\"inline-wrap\"><code>HelperService</code></span><span class=\"inline-wrap\">。这有助于避免代码重复，提高可维护性，并确保全局模块中的功能在整个应用中可用。</span></div></div></details></li><li id=\"xdaHL9A11uP4YXX2hFtusP\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">控制器相关</span><details id=\"tVhxgsi7BU27oG5siA7Sys\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Controller()</code></span><span class=\"inline-wrap\">: 声明模块里的控制器。</span></summary><code-block id=\"iHiaayYBefy4nefJAJGV95\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Hello World!'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></pre></div></code-block></details></li><li id=\"tbMyxVLfWHVHDbrPYD3fBW\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">提供者（服务）相关\n</span><details id=\"2HKVHGR1dKU9sUvHNTfM1q\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Injectable()</code></span><span class=\"inline-wrap\">: 声明模块里可以注入的提供者（服务）。</span></summary><code-block id=\"tKwkqKtfZcie9fRKQB2yVm\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppService</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Hello World!'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"cTcwJ7SjSZJryznRuAPQPq\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Inject</code></span><span class=\"inline-wrap\">：通过 token 手动指定注入的 provider，token 可以是 class 或者 string</span></summary><code-block id=\"kcYwjFanD9XnXktzV9a92e\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// app.service.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Injectable<span class=\"token punctuation\">,</span> Inject <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> LoggerService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./logger.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppService</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Inject</span></span><span class=\"token punctuation\">(</span>LoggerService<span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> logger<span class=\"token operator\">:</span> LoggerService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">getAppMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Getting app message...'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Hello from AppService!'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"4xts2F2s5p1FRGYnkrt9Lm\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Optional()</code></span><span class=\"inline-wrap\">: 声明注入的依赖服务是可选的，可以为空。(注入的依赖如果没有的话，创建对象时会报错)</span></summary><code-block id=\"9M3qvatK2JCkJ9vQfJnMDP\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// optional.service.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Injectable<span class=\"token punctuation\">,</span> Optional <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">OptionalService</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Optional Service Data'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// app.service.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Injectable<span class=\"token punctuation\">,</span> Optional <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> OptionalService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./optional.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppService</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Optional</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> optionalService<span class=\"token operator\">:</span> OptionalService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> optionalData <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>optionalService <span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>optionalService<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Optional service is not available'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello World! </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>optionalData<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details></li></ul><div id=\"g5SsJdwmgrQV34x4wArCoQ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"nmG2tHRpx4WG9TVNL2ydHf\" class=\"wolai-block\"><span class=\"inline-wrap\">方法装饰器</span></h3><ul class=\"wolai-block\"><li id=\"N87vrx7k8PAGFbW9QLAaq\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">HTTP 相装饰器</span><details id=\"pfg8wncCWvghPknMY9Wu4w\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b><code>@Get()</code></b></span><span class=\"inline-wrap\"><b>、</b></span><span class=\"inline-wrap\"><b><code>@Post()</code></b></span><span class=\"inline-wrap\"><b>、</b></span><span class=\"inline-wrap\"><b><code>@Put()</code></b></span><span class=\"inline-wrap\"><b>、</b></span><span class=\"inline-wrap\"><b><code>@Patch()</code></b></span><span class=\"inline-wrap\"><b>、</b></span><span class=\"inline-wrap\"><b><code>@Delete()</code></b></span><span class=\"inline-wrap\"><b> 、@Options()、@Head()等装饰器：</b></span></summary><code-block id=\"8jyFVj6JxwVtNMZcR2tEdH\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Post<span class=\"token punctuation\">,</span> Put<span class=\"token punctuation\">,</span> Patch<span class=\"token punctuation\">,</span> Delete <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'GET request handled'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Post</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">postData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'POST request handled'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Put</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">putData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'PUT request handled'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Patch</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">patchData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'PATCH request handled'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Delete</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">deleteData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'DELETE request handled'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"eyot87xodUjPeJvBTXX4yr\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@HttpCode()</code></span><span class=\"inline-wrap\">: 修改响应的状态码。</span></summary><code-block id=\"wEDRbMLTcaTEhmjocNTZVH\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> HttpCode <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">HttpCode</span></span><span class=\"token punctuation\">(</span><span class=\"token number\">201</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 将 HTTP 状态码设置为 201 Created</span>\n  <span class=\"token function\">getExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'带有自定义状态码的示例响应'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"7nahEPYLNEJCKaMovKdRtn\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Header()</code></span><span class=\"inline-wrap\">: 修改响应头。</span></summary><code-block id=\"t7RPy39xrj6JA2QHHwwgnL\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Header <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Header</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'Cache-Control'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'no-store'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 将 Cache-Control 头设置为 'no-store'</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Header</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'Custom-Header'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Custom-Value'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 添加自定义头部</span>\n  <span class=\"token function\">getExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'带有自定义头部的示例响应'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"cvwrLoxSqUG878njdZuQdE\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Redirect()</code></span><span class=\"inline-wrap\">: 指定重定向的 URL。</span></summary><code-block id=\"ai6XhJzXECxW4yWpvZ5zUM\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Redirect <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'redirect'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Redirect</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.example.com'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 重定向到指定的 URL</span>\n  <span class=\"token function\">getRedirectExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 由于重定向，此方法将不会被执行</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"4w27YzafxMprPDzrotypXz\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Render()</code></span><span class=\"inline-wrap\">: 指定渲染用的模板引擎。</span></summary><code-block id=\"tr2XaTmi2G2GZZgJrPUWsr\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Render <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'render'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Render</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'index'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用默认视图引擎渲染 'index' 模板</span>\n  <span class=\"token function\">getRenderExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span> message<span class=\"token operator\">:</span> <span class=\"token string\">'你好，NestJS！'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 传递给视图的数据</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details></li></ul><h3 id=\"vKAFFYKnWjSxexv2LJy9hB\" class=\"wolai-block\"><span class=\"inline-wrap\">参数装饰器</span></h3><ul class=\"wolai-block\"><li id=\"wEKfqXLfkt18LgQUNcLtxk\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><b>请求对象和响应对象相关</b></span><details id=\"tWyWdm6S3NwCnoC1MfbJ5v\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Req()</code></span><span class=\"inline-wrap\">, </span><span class=\"inline-wrap\"><code>@Request()</code></span><span class=\"inline-wrap\">: 注入 request 对象。</span></summary><div id=\"gkhd2LPyoQt6MQGFy2B8oJ\" class=\"wolai-block wolai-text\"><div></div></div><code-block id=\"2uQkyxKQEPhqD2E2LR74JY\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Req<span class=\"token punctuation\">,</span> Request <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Request <span class=\"token keyword\">as</span> ExpressRequest <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Req</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> request<span class=\"token operator\">:</span> ExpressRequest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Request URL: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>request<span class=\"token punctuation\">.</span>url<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'/alternative'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getDataAlternative</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Request</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> request<span class=\"token operator\">:</span> ExpressRequest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Request URL (Alternative): </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>request<span class=\"token punctuation\">.</span>url<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"eNaMZsRKy1fMZQRhx6WUo\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Res()</code></span><span class=\"inline-wrap\">, </span><span class=\"inline-wrap\"><code>@Response()</code></span><span class=\"inline-wrap\">: 注入 response 对象，</span></summary><code-block id=\"gTZRRrtN9cm6cQGM9k9UE9\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Res<span class=\"token punctuation\">,</span> Response <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Response <span class=\"token keyword\">as</span> ExpressResponse <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">sendData</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Res</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> response<span class=\"token operator\">:</span> ExpressResponse<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello, World!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'/alternative'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">sendDataAlternative</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Response</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> response<span class=\"token operator\">:</span> ExpressResponse<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello, World! (Alternative)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details></li><li id=\"6UuCpiMW1u7Kt484TDVyMh\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><b>路由参数相关</b></span><details id=\"tMvXBC8YDsJJHfiap1Hv95\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Param()</code></span><span class=\"inline-wrap\">: 取出 URL 中的参数。</span></summary><div id=\"vQHXmq8EEHfpcQurSwkLkE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Param(&#39;id&#39;)</code></span><span class=\"inline-wrap\"> 用于提取 URL 中的参数，并将其作为方法参数传递给 </span><span class=\"inline-wrap\"><code>getData</code></span><span class=\"inline-wrap\"> 方法。</span></div></div><code-block id=\"jF5zCWQeaDJAEGRsybxiQt\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Param <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">':id'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Param</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span> id<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Data for ID </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>id<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"7RuFiw3vY5SMPV49jp5mok\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Query()</code></span><span class=\"inline-wrap\">: 取出 query 部分的参数。</span></summary><div id=\"bfb7GWupyuEKBUQPT91bVZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Query(&#39;param&#39;)</code></span><span class=\"inline-wrap\"> 用于提取 URL 查询参数，并将其作为方法参数传递给 </span><span class=\"inline-wrap\"><code>getData</code></span><span class=\"inline-wrap\"> 方法。</span></div></div><code-block id=\"qJ9FX8EAUmYEuQKAE7k8BB\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Query <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Query</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'param'</span><span class=\"token punctuation\">)</span> param<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Received query parameter: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>param<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"cTy1m8JwNpKeFxxNYVKhRy\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Body()</code></span><span class=\"inline-wrap\">: 取出请求 body，通过 DTO class 来接收。</span></summary><div id=\"k65opH8jGw47RoQQ2ccx7G\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Body()</code></span><span class=\"inline-wrap\"> 用于提取请求体中的数据，并将其作为方法参数传递给 </span><span class=\"inline-wrap\"><code>createItem</code></span><span class=\"inline-wrap\"> 方法。</span></div></div><code-block id=\"3P7iHCeN69oEgMxB2U3Vor\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Post<span class=\"token punctuation\">,</span> Body <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CreateItemDto</span> <span class=\"token punctuation\">&#123;</span>\n  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  description<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Post</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">createItem</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Body</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> createItemDto<span class=\"token operator\">:</span> CreateItemDto<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// Logic to create an item using the provided data</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Created item: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>createItemDto<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"8r7YqqAocmKMSq7SGeM6K5\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Headers()</code></span><span class=\"inline-wrap\">: 取出某个或全部请求头。</span></summary><div id=\"obvCgB8RZU7pUBRkCcuf4K\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Headers(&#39;authorization&#39;)</code></span><span class=\"inline-wrap\"> 用于提取请求头中的 </span><span class=\"inline-wrap\"><code>authorization</code></span><span class=\"inline-wrap\"> 数据，并将其作为方法参数传递给 </span><span class=\"inline-wrap\"><code>getData</code></span><span class=\"inline-wrap\"> 方法</span></div></div><code-block id=\"fhLbETPErZuX1wk4fJh8T6\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Headers <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Headers</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'authorization'</span><span class=\"token punctuation\">)</span> authorization<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Authorization header: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>authorization<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"aYQyAykCpTshrvj89A8zrd\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Session()</code></span><span class=\"inline-wrap\">: 取出 session 对象，需要启用 express-session 中间件。</span></summary><div id=\"8qFhqgC31xbiujXHF1SULw\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Session()</code></span><span class=\"inline-wrap\"> 装饰器允许你访问存储在用户会话中的数据。</span></div></div><blockquote id=\"uwtcpyXxjwX363mQHPycQL\" class=\"wolai-block\"><span class=\"inline-wrap\">确保在使用 </span><span class=\"inline-wrap\"><code>@Session()</code></span><span class=\"inline-wrap\"> 装饰器之前，你已经正确配置并启用了 </span><span class=\"inline-wrap\"><code>express-session</code></span><span class=\"inline-wrap\"> 中间件。</span></blockquote><code-block id=\"asqXAUZkKX77h6UaR8Z3JR\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Session <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Session</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> session<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// Access session data</span>\n    <span class=\"token keyword\">const</span> userId <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>userId<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">User ID from session: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>userId<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"mDN9EKQroCPwZip9vZsFoo\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@HostParam()</code></span><span class=\"inline-wrap\">: 取出 host 里的参数。</span></summary><code-block id=\"bCBAacxHkwMRZ89jnSdbPK\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> HostParam <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example/:subdomain'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getSubdomain</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">HostParam</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'subdomain'</span><span class=\"token punctuation\">)</span> subdomain<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Subdomain: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>subdomain<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details></li></ul><h3 id=\"wSRR5JymoLx3Wg3TWCfBWe\" class=\"wolai-block\"><span class=\"inline-wrap\">功能性装饰器</span><details id=\"7uTreWNVCFsWfBfr7umdur\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b><code>@UseGuards()</code></b></span><span class=\"inline-wrap\"><b> 添加身份验证、授权等守卫</b></span></summary><code-block id=\"uhdwr6vpKSRmjRLy5WTt4S\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> UseGuards <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AuthGuard <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./auth.guard'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'secured'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SecuredController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UseGuards</span></span><span class=\"token punctuation\">(</span>AuthGuard<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getSecuredData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Secured data'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"a8QefobhvSK6RoSjBniHen\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b><code>@UseInterceptors()</code></b></span><span class=\"inline-wrap\"><b> 使用拦截器</b></span></summary><code-block id=\"c6ViiTe6XbtwHyH573yfsK\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> UseInterceptors <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> LoggingInterceptor <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./logging.interceptor'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UseInterceptors</span></span><span class=\"token punctuation\">(</span>LoggingInterceptor<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'GET request handled'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"qZRyV94GqWLof8bSsm7BNP\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b><code>@UseFilters()</code></b></span><span class=\"inline-wrap\"><b> 使用异常过滤器</b></span></summary><code-block id=\"p7oRrAJm2vEyqEHCPydYae\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> UseFilters <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> CustomExceptionFilter <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./custom-exception.filter'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UseFilters</span></span><span class=\"token punctuation\">(</span>CustomExceptionFilter<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Unexpected error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"uB2nBjHNtjiBLWtHdmbpx9\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b><code>@UsePipes()</code></b></span><span class=\"inline-wrap\"><b> 使用管道</b></span></summary><code-block id=\"p4RWLEL9qg5aSdQ5E6rDX1\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> UsePipes<span class=\"token punctuation\">,</span> ValidationPipe <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UsePipes</span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ValidationPipe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// Some logic here</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"6wZtAcanfxGsRkm9f5XWKr\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b><code>@Next()</code></b></span><span class=\"inline-wrap\">: 注入调用下一个 handler 的 next 方法。</span></summary><div id=\"2yKDRUHTEzvRjbHj28eYTM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Next()</code></span><span class=\"inline-wrap\"> 装饰器注入 </span><span class=\"inline-wrap\"><code>next</code></span><span class=\"inline-wrap\"> 函数，该函数用于将控制传递给下一个中间件或处理程序函数。</span></div></div><code-block id=\"vNjDCQ4gnGHsPFUyWxhakQ\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Injectable <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyMiddleware</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">use</span><span class=\"token punctuation\">(</span>req<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> res<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">next</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Before handling the request...'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 调用 @Next() 装饰器注入的 next 函数，将控制传递给下一个中间件或处理程序</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'After handling the request...'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"9Aqaan9JVYwTTM9vbf9g3B\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@SetMetadata()</code></span><span class=\"inline-wrap\">: 在 class 或者 handler 上添加 metadata。</span></summary><div id=\"gd1FyLH6yqjzxBv6YxqCkq\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这个装饰器的底层实现就是 Reflect.defineMetadata；</span></div></div><div id=\"2WrsMP1Uvsyo3wKedwM5pD\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image.png\" style=\"width: 590px\"/></figure></div><div id=\"4ebVEBrHDPutxZphXeeZ6J\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">怎么使用的，举个例子：</span></div></div><div id=\"vN2KjbvVSCpFZ3jpFumSAH\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">我们可以使用 </span><span class=\"inline-wrap\"><code>@SetMetadata()</code></span><span class=\"inline-wrap\"> 装饰器结合自定义装饰器和拦截器来实现一个基本的权限控制系统。</span></div></div><div id=\"d8BtTFLQ9Vh8xuAWqPVwV1\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">首先，定义一个自定义装饰器 </span><span class=\"inline-wrap\"><code>@Roles()</code></span><span class=\"inline-wrap\"> 用于在处理程序上设置角色权限：</span></div></div><code-block id=\"rpmpoLxbcfCHsTehXgkWD6\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// roles.decorator.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> SetMetadata <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Roles</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>roles<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">SetMetadata</span><span class=\"token punctuation\">(</span><span class=\"token string\">'roles'</span><span class=\"token punctuation\">,</span> roles<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block><div id=\"6LBqrfjbcRwh9C3gjvAJv5\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">接下来，创建一个守卫 </span><span class=\"inline-wrap\"><code>RolesGuard</code></span><span class=\"inline-wrap\">检查用户的角色是否符合处理程序所需的角色：</span></div></div><code-block id=\"chwqPWiiTQcyj7Jb51SNQx\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// roles.guard.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> CanActivate<span class=\"token punctuation\">,</span> ExecutionContext<span class=\"token punctuation\">,</span> Injectable <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Reflector <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RolesGuard</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">CanActivate</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> reflector<span class=\"token operator\">:</span> Reflector<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">canActivate</span><span class=\"token punctuation\">(</span>context<span class=\"token operator\">:</span> ExecutionContext<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> requiredRoles <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>reflector<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'roles'</span><span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">getHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>requiredRoles<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 如果没有设置角色要求，则允许访问</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> user <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">switchToHttp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> requiredRoles<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span>role <span class=\"token operator\">=></span> user<span class=\"token punctuation\">.</span>roles<span class=\"token operator\">?.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>role<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><div id=\"qABPKcHJvf6qTk25UbgENB\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">最后，将这个守卫应用于一个需要权限控制的控制器：</span></div></div><code-block id=\"n8q1YhL8Mgs48Zv5mYTD88\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// app.controller.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> UseGuards <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> RolesGuard <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./roles.guard'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Roles <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./roles.decorator'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'app'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Roles</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用 @Roles 装饰器设置角色要求</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UseGuards</span></span><span class=\"token punctuation\">(</span>RolesGuard<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用守卫进行权限检查</span>\n  <span class=\"token function\">getAdminData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Admin Data'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Roles</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用 @Roles 装饰器设置角色要求</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UseGuards</span></span><span class=\"token punctuation\">(</span>RolesGuard<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用守卫进行权限检查</span>\n  <span class=\"token function\">getUserData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'User Data'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><div id=\"4DwtqsbgsmwgPvBBqx92FR\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在这个例子中，</span><span class=\"inline-wrap\"><code>@Roles()</code></span><span class=\"inline-wrap\"> 装饰器用于设置每个处理程序需要的角色权限，然后 </span><span class=\"inline-wrap\"><code>RolesGuard</code></span><span class=\"inline-wrap\"> 拦截器会检查用户是否具备足够的权限。这里使用了 </span><span class=\"inline-wrap\"><code>@UseGuards()</code></span><span class=\"inline-wrap\"> 装饰器来将 </span><span class=\"inline-wrap\"><code>RolesGuard</code></span><span class=\"inline-wrap\"> 拦截器应用于相应的处理程序。</span></div></div><div id=\"gBCQEM8LPsdsGVBtGM1wX4\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">通过使用元数据，我们能够动态地设置和获取处理程序的角色权限要求，实现了一个基本的权限控制系统。这种方式提供了更灵活和可扩展的权限管理机制。</span></div></div></details></h3><div id=\"uyBkSNxsyYz6KXFwMWwB8F\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"7BRaTChsjKDXVa18RELJow\" class=\"wolai-block\"><span class=\"inline-wrap\">深入了解装饰器</span></h2><h3 id=\"hB8yAogDiSVFc1Ne44BhiX\" class=\"wolai-block\"><span class=\"inline-wrap\">装饰器的工作原理</span></h3><ul class=\"wolai-block\"><li id=\"Ln2DZDosCfHcyy7uqkS3b\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">Reflect 对象</span><div id=\"fN7zMFevtrJTa2xdD2qc1j\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>Reflect</code></span><span class=\"inline-wrap\"> 是 JavaScript 的内置对象，提供了一组静态方法，用于拦截和修改 JavaScript 操作。</span></div></div><details id=\"kNLyKTihtdeqPKA2aE3Xc3\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b>常见 Reflect 方法：</b></span><span class=\"inline-wrap\"> 包括 </span><span class=\"inline-wrap\"><code>Reflect.get</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>Reflect.set</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>Reflect.has</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>Reflect.apply</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>Reflect.construct</code></span><span class=\"inline-wrap\"> 等，用于属性获取、设置、判断存在、方法调用和实例构造等操作。</span></summary><code-block id=\"t8JBWVoAGtgnvaps1c7SJv\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> x<span class=\"token operator\">:</span> <span class=\"token number\">42</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 42</span>\nReflect<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> hasProperty <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token function\">Reflect</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span>max<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 5</span>\n<span class=\"token keyword\">let</span> instance <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">construct</span><span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 当前时间的 Date 实例</span>\n</pre></div></code-block></details><details id=\"p89hNw5TpgrcnctwosoRm3\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b>Metadata API</b></span></summary><div id=\"mVJFwvowxUuqFMNN93HNzK\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">但实现 Nest 用到的 api 还没有进入标准，还在草案阶段；</span></div></div><code-block id=\"aRnhtvdcFDXVWSwvo14E6F\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre>Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">defineMetadata</span><span class=\"token punctuation\">(</span>metadataKey<span class=\"token punctuation\">,</span> metadataValue<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nReflect<span class=\"token punctuation\">.</span><span class=\"token function\">defineMetadata</span><span class=\"token punctuation\">(</span>metadataKey<span class=\"token punctuation\">,</span> metadataValue<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> propertyKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">getMetadata</span><span class=\"token punctuation\">(</span>metadataKey<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">getMetadata</span><span class=\"token punctuation\">(</span>metadataKey<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> propertyKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block><div id=\"41qcbKhmNbvpoVeY5tk88C\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><b>Reflect.defineMetadata</b></span><span class=\"inline-wrap\"> 和 </span><span class=\"inline-wrap\"><b>Reflect.getMetadata</b></span><span class=\"inline-wrap\"> 分别用于设置和获取某个类的元数据，如果最后传入了属性名，还可以单独为某个属性设置元数据。</span></div></div></details></li></ul><details id=\"asqT6YtgYjqJY8bJvKHxZy\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">元数据的存储和读取</span></summary><div id=\"gxacnjJqhRoVxR4A5gaA2L\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><b>元数据存在哪呢？</b></span></div></div><div id=\"3bgvG5FtX64YiVh1Abqyvq\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">存在类或者对象上，如果</span><span class=\"inline-wrap\"><b>给类或者类的静态属性添加元数据</b></span><span class=\"inline-wrap\">，那就保存在类上；</span></div></div><div id=\"6D2uq8cnyg366JCXiwteVN\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">如果</span><span class=\"inline-wrap\"><b>给实例属性添加元数据</b></span><span class=\"inline-wrap\">，那就保存在实例对象上，用类似</span><span class=\"inline-wrap\"><b> [[metadata]]</b></span><span class=\"inline-wrap\"> 的 key 来存的。</span></div></div><div id=\"25CBjrwkkFEiq7d8EA72D\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">看上面的 api 确实看不出啥，但它</span><span class=\"inline-wrap\"><b>支持装饰器的方式</b></span><span class=\"inline-wrap\">使用：</span></div></div><div id=\"qiFrx9GVHT8RWQQNoLutUg\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">1.</span><span class=\"inline-wrap\"><b>Reflect.metadata 装饰器</b></span></div></div><code-block id=\"xmTooevCqECpzoYsYXP9Nu\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Reflect</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">metadata</span><span class=\"token punctuation\">(</span>metadataKey<span class=\"token punctuation\">,</span> metadataValue<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Example</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Reflect</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">metadata</span><span class=\"token punctuation\">(</span>metadataKey<span class=\"token punctuation\">,</span> metadataValue<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><div id=\"7RyfKZuH8FZSctvxbncDVP\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">2.</span><span class=\"inline-wrap\"><b>装饰器的封装：</b></span><span class=\"inline-wrap\"> 将 Reflect.metadata 装饰器封装为更具表达力的装饰器，例如 </span><span class=\"inline-wrap\"><code>Type</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>ParamTypes</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>ReturnType</code></span><span class=\"inline-wrap\">。</span></div></div><code-block id=\"ozvCv2VgtMTaL4PvzHinUb\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Type</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">metadata</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"design:type\"</span><span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ParamTypes</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>types<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">metadata</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"design:paramtypes\"</span><span class=\"token punctuation\">,</span> types<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ReturnType</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">metadata</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"design:returntype\"</span><span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ParamTypes</span></span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">,</span> Number<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Example</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ReturnType</span></span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Type</span></span><span class=\"token punctuation\">(</span><span class=\"token builtin\">Function</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ParamTypes</span></span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">,</span> Number<span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ReturnType</span></span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><div id=\"2eZt6Sk8NYYC7s5c1oSvng\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">然后我们就可以通过 Reflect metadata 的 api 获取这个类和对象的元数据了：</span></div></div><code-block id=\"qKztrD8KzoJygRpPxNba4K\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Example</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> paramTypes <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">getMetadata</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"design:paramtypes\"</span><span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">,</span> <span class=\"token string\">\"add\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// [Number, Number]</span>\n</pre></div></code-block></details><div id=\"eEN2EQetKhLMGixoJ137tE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"uesFiCyVAWbvbu2X7RVyeg\" class=\"wolai-block\"><span class=\"inline-wrap\">NestJS<span class=\"jill\"></span>中是如何实现的</span></h3><div id=\"mY1TaCAAVkkkHuxFm1LXL9\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"> 先看一段源码：</span></div></div><div id=\"5EveQg6h4QDA7tNZUbQ4Y9\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_1.png\" style=\"width: 830px\"/></figure></div><div id=\"cvAdccgjckJKZRu3pkTVK5\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Module</code></span><span class=\"inline-wrap\"> 装饰器调用了 </span><span class=\"inline-wrap\"><code>Reflect.defineMetadata</code></span><span class=\"inline-wrap\"> 来给这个类添加了一些元数据。所以我们这样用的时候：</span></div></div><code-block id=\"wioS5AJQkgxBsRWADyZPS7\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Module <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppController <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><div id=\"pB1kgRNr1M6WMEsEtgx4ir\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"> 其实就是给 AppModule 添加了 controllers 的元数据和 providers 的元数据。后面创建 IOC 容器的时候就会取出这些元数据来处理。</span></div></div><blockquote id=\"nXoyaPv4BTjE8aPRucs8eF\" class=\"wolai-block\"><span class=\"gray inline-wrap\">现在 metadata 的 api 还在草案阶段，需要使用 reflect-metadata 这个 polyfill 包才行。</span></blockquote><div id=\"opxWxCsmyGkevULNRfSbwp\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"hujrHXA584zNBkxwpTV4rk\" class=\"wolai-block\"><span class=\"inline-wrap\">为什么用<span class=\"jill\"></span>Typescript</span></h3><details id=\"ogosepz5JjMStr7TXxW9iA\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">完整例子</span></summary><code-block id=\"fobzw3TWNDWcgfFNCX9Hqs\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// logger.service.ts </span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Injectable <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LoggerService</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">log</span><span class=\"token punctuation\">(</span>message<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//  example.service.ts </span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Injectable <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> LoggerService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./logger.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleService</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> loggerService<span class=\"token operator\">:</span> LoggerService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">performTask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>loggerService<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Task performed!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//  example.controller.ts </span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ExampleService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./example.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> exampleService<span class=\"token operator\">:</span> ExampleService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>exampleService<span class=\"token punctuation\">.</span><span class=\"token function\">performTask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Data from Nest.js!'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//  app.module.ts </span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Module <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ExampleController <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./example.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ExampleService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./example.service'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> LoggerService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./logger.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>ExampleController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>ExampleService<span class=\"token punctuation\">,</span> LoggerService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></div></code-block><div id=\"rLJz8d8ssgjMqJBWuVEmkb\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div></details><details id=\"wrjtpN2z4oDiBfzd6hd1cK\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">执行顺序</span></summary><div id=\"s8FvJjaV8tADViKon8veYi\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在 Nest.js 中，整个依赖扫描和实例化的过程可以按照以下时间线来描述，同时结合三个元数据 (</span><span class=\"inline-wrap\"><code>design:type</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>design:returntype</code></span><span class=\"inline-wrap\">) 的作用：</span></div></div><ol class=\"wolai-block\"><li id=\"px3zbJjBBgm5M2yCwhn8Lb\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>模块装载（Module Loading）：</b></span><ul class=\"wolai-block\"><li id=\"qyGEh6JPdmNp1YaFyp4VLQ\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">Nest.js 应用程序启动时，首先会装载主模块（通常是 </span><span class=\"inline-wrap\"><code>AppModule</code></span><span class=\"inline-wrap\">）。</span></li><li id=\"9Wr9bXHUw2yDmQkfEV9KCN\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">在主模块中，使用 </span><span class=\"inline-wrap\"><code>@Module</code></span><span class=\"inline-wrap\"> 装饰器指定模块的元数据，包括控制器和提供者。</span></li></ul></li><li id=\"dFmcuU1PnAAgXgGdAsjzQ\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>提供者扫描（Provider Scanning）：</b></span><ul class=\"wolai-block\"><li id=\"8awZppggKPNDaq7mmP24j\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">Nest.js 模块扫描提供者（</span><span class=\"inline-wrap\"><code>@Injectable()</code></span><span class=\"inline-wrap\"> 装饰的类），解析其元数据。</span></li><li id=\"phKmLJYchRXyKr6dYyLWmL\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>design:type</code></span><span class=\"inline-wrap\"> 元数据描述提供者的类型。例如，如果有一个提供者类 </span><span class=\"inline-wrap\"><code>LoggerService</code></span><span class=\"inline-wrap\">，</span><span class=\"inline-wrap\"><code>design:type</code></span><span class=\"inline-wrap\"> 可能是 </span><span class=\"inline-wrap\"><code>Function</code></span><span class=\"inline-wrap\"> 表示它是一个类构造函数。</span></li></ul></li><li id=\"9cnKuTdWTTgSbK1K11gR9s\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>构造函数参数扫描（Constructor Parameter Scanning）：</b></span><ul class=\"wolai-block\"><li id=\"vMZUHS5WB4CdWVoBsYJuZP\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">对于每个提供者，检查其构造函数，并使用 </span><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\"> 元数据获取构造函数参数的类型信息。</span></li><li id=\"8BqdVM9D2Z74CJ9HXizRCD\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\"> 是一个数组，描述了构造函数的参数类型。例如，</span><span class=\"inline-wrap\"><code>ExampleService</code></span><span class=\"inline-wrap\"> 的构造函数参数是 </span><span class=\"inline-wrap\"><code>LoggerService</code></span><span class=\"inline-wrap\">，</span><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\"> 可能是 </span><span class=\"inline-wrap\"><code>[LoggerService]</code></span><span class=\"inline-wrap\">。</span></li></ul></li><li id=\"8FuuvMU4UYGq4DoYTTTGqv\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>模块初始化和实例化（Module Initialization and Instantiation）：</b></span><ul class=\"wolai-block\"><li id=\"vSYt5F1sAQvchdS1ko3Qcu\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">对于每个提供者，IoC 容器根据构造函数参数递归实例化其依赖项。</span></li><li id=\"eGBoDgmoBk5GXNFYTrzjiL\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">使用提供者的构造函数创建实例，并将依赖项注入到构造函数中。</span></li><li id=\"jZkn3NQiWSba7LUkP3WHCm\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">如果有其他模块被导入，重复上述步骤。</span></li></ul></li><li id=\"7nywMgjxX6m4oGYmiy2gcY\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>控制器扫描和路由解析（Controller Scanning and Route Resolution）：</b></span><ul class=\"wolai-block\"><li id=\"n2K6Dti2kpGXbpdGY57c4s\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">Nest.js 模块扫描控制器（</span><span class=\"inline-wrap\"><code>@Controller()</code></span><span class=\"inline-wrap\"> 装饰的类）。</span></li><li id=\"cyPMKByJSxd75J57UniQmr\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">对于每个控制器类，解析其元数据，包括路由和路由处理方法。</span></li></ul></li><li id=\"7LrdqCDzLwAreZsiuHhGrJ\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>方法元数据解析（Method Metadata Resolution）：</b></span><ul class=\"wolai-block\"><li id=\"hqMWeMDgyiAfp6Q72c45uw\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">对于每个路由处理方法，解析其元数据，包括 </span><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\"> 和 </span><span class=\"inline-wrap\"><code>design:returntype</code></span><span class=\"inline-wrap\">。</span></li><li id=\"fSTSGVZusYNAT9tKHRRHq1\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\"> 描述了方法的参数类型，而 </span><span class=\"inline-wrap\"><code>design:returntype</code></span><span class=\"inline-wrap\"> 描述了方法的返回值类型。</span></li></ul></li></ol><div id=\"cBdwFhJtiomRb9KKyYfoeK\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">总体而言，Nest.js 的 IoC 容器在模块装载和初始化过程中，通过装饰器中的元数据来实现提供者和控制器的扫描、实例化和依赖注入。三个元数据在这个过程中提供了关键的类型信息，确保了正确的依赖解析和注入。这使得 Nest.js 能够在运行时动态地管理类之间的依赖关系，实现依赖注入和路由解析等功能。</span></div></div></details><div id=\"evx4YBx8GMbJbbJormXMz9\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">细心的同学可能会发现，上面的例子一般是扫描加载指定模块的元数据，包括<span class=\"jill\"></span>controller<span class=\"jill\"></span>和<span class=\"jill\"></span>provider，但是在创建示例时，是需要知道构造器的参数，现在并没有添加这部分 metadata 数据呀，所以这里需要提到<span class=\"jill\"></span>Typescript<span class=\"jill\"></span>的优势，TypeScript 支持编译时自动添加一些 metadata 数据：</span></div></div><div id=\"ppsLMx168a48ggVLaU4gmT\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">比如这段代码：</span></div></div><div id=\"b6mW4Hm9zg3tg9xnEdsubX\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_2.png\" style=\"width: 554px\"/></figure></div><div id=\"us4abxZSQijAwVpVeC6xK8\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">添加了一个元数据，生成后的代码是这样的：</span></div></div><div id=\"gqJr1njpx4AjhJzM5xHocr\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_3.png\" style=\"width: 601px\"/></figure></div><div id=\"babMaqtoFiSZa6XShzYruZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">但是呢，ts 有一个编译选项叫做 </span><span class=\"inline-wrap\"><code>emitDecoratorMetadata</code></span><span class=\"inline-wrap\">，开启它就会自动添加一些元数据。开启之后再试一下：</span></div></div><div id=\"qRDRmbXBBLMpENamJpg4Pr\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_4.png\" style=\"width: 608px\"/></figure></div><div id=\"eVYUtEVdcZZoH1247nHawT\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">会看到多了三个元数据：</span></div></div><div id=\"9Qr4U2HJSycHWBdHDZSKGz\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>design:type</code></span><span class=\"inline-wrap\">是<span class=\"jill\"></span>Function，是描述装饰目标的元数据，这里装饰的是函数</span></div></div><div id=\"uXXpx6XHFVoBUK7piTvWu\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\"> 是 [Number]，是参数的类型</span></div></div><div id=\"qySUZZy71wmQpwReLY31Dz\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>design:returntype</code></span><span class=\"inline-wrap\"> 是 String，是返回值的类型</span></div></div><div id=\"s6stezuQjqkc4jNF41cDMU\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">所以，只要开启了这个编译选项，ts 生成的代码会自动添加一些元数据。然后创建对象的时候就可以通过 </span><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\"> 来拿到构造器参数的类型了，也就知道怎么注入依赖，怎么去<span class=\"jill\"></span>new<span class=\"jill\"></span>实例。</span></div></div><div id=\"f1tmKU7UGj8qDMrJMQobVH\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"f6dL8R8eCwHSRsWtzVSozZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这也是为什么 nest 会用 ts 来写，因为它很依赖这个 </span><span class=\"inline-wrap\"><b>emitDecoratorMetadata</b></span><span class=\"inline-wrap\"> 的编译选项。</span></div></div><blockquote id=\"PQQ3ZJ943SdA7r1h8Xi7Y\" class=\"wolai-block\"><span class=\"gray inline-wrap\">nest cli<span class=\"jill\"></span>生成的模板是默认开启这个编译选项的。</span></blockquote><div id=\"2Xczw3J5tbg2pVoWnvhfu4\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">总结一下核心实现原理：</span><span class=\"inline-wrap\"><b>通过装饰器给 class 或者对象添加 metadata，并且开启 ts 的 emitDecoratorMetadata 来自动添加类型相关的 metadata，然后运行的时候通过这些元数据来实现依赖的扫描，对象的创建等等功能。</b></span></div></div><div id=\"2HRMYXRMxutvhzVRdXPxrW\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"8mfWTajKvBgZeH9zhq3S5a\" class=\"wolai-block\"><span class=\"inline-wrap\">自定义装饰器：</span><span class=\"inline-wrap\"><b>@SetMetadata </b></span></h3><div id=\"Fag4iGXMHA8mEw2sruMoZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest<span class=\"jill\"></span>还提供了一个 </span><span class=\"inline-wrap\"><code>@SetMetadata</code></span><span class=\"inline-wrap\"> 的装饰器让我们可以自定义装饰器去给 class、method 添加一些 metadata;</span></div></div><div id=\"wtoqAPc1N2nisQJ8rFY6Hc\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"hGp8Fsdjjxs8gL9Lipc8Cr\" class=\"wolai-block\"><span class=\"inline-wrap\">自定义装饰器的应用场景</span></h2><h4 id=\"ejhvTs7vWkGZDirXgXuXW4\" class=\"wolai-block\"><span class=\"inline-wrap\">性能日志记录</span></h4><details id=\"m6GkkvhNzQo15kscykfbSD\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">创建 </span><span class=\"inline-wrap\"><code>@PerformanceLogger()</code></span><span class=\"inline-wrap\"> 装饰器</span></summary><code-block id=\"H8hF1QYNJgYBaZu7z2Quh\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// performance-logger.decorator.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> SetMetadata <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">PERFORMANCE_LOGGER_KEY</span> <span class=\"token operator\">=</span> <span class=\"token string\">'performance-logger'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">PerformanceLogger</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">SetMetadata</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PERFORMANCE_LOGGER_KEY</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block><code-block id=\"vwrhj8CSdHhaqmBoT345Cr\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// performance-logger.interceptor.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> CallHandler<span class=\"token punctuation\">,</span> ExecutionContext<span class=\"token punctuation\">,</span> Injectable<span class=\"token punctuation\">,</span> NestInterceptor <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Observable <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> tap <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs/operators'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PerformanceLoggerInterceptor</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">NestInterceptor</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">intercept</span><span class=\"token punctuation\">(</span>context<span class=\"token operator\">:</span> ExecutionContext<span class=\"token punctuation\">,</span> next<span class=\"token operator\">:</span> CallHandler<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Observable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> startTime <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> next\n      <span class=\"token punctuation\">.</span><span class=\"token function\">handle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n        <span class=\"token function\">tap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">const</span> requestTime <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> startTime<span class=\"token punctuation\">;</span>\n          <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Request took </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>requestTime<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">ms</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"cKSKGGAeKLnE58EqBFyApN\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">在控制器方法上应用，实现性能监控</span></summary><code-block id=\"94gdGB7uBMFbsQJffert4Y\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// app.controller.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> UseInterceptors <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> PerformanceLogger <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./performance-logger.decorator'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> PerformanceLoggerInterceptor <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./performance-logger.interceptor'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'app'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">PerformanceLogger</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UseInterceptors</span></span><span class=\"token punctuation\">(</span>PerformanceLoggerInterceptor<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getAdminData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Admin Data'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><h4 id=\"ac4r3X9dHoq6okvLrnrPH7\" class=\"wolai-block\"><span class=\"inline-wrap\">权限验证</span></h4><details id=\"nZbddHrr5LKe98VwXKE2AY\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">创建 </span><span class=\"inline-wrap\"><code>@RoleGuard(role: string)</code></span><span class=\"inline-wrap\"> 装饰器</span></summary><code-block id=\"3giAs7wdxYsa2G8aEUpEQZ\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// role-guard.decorator.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> SetMetadata <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">ROLE_GUARD_KEY</span> <span class=\"token operator\">=</span> <span class=\"token string\">'role-guard'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">RoleGuard</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>role<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">SetMetadata</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ROLE_GUARD_KEY</span><span class=\"token punctuation\">,</span> role<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block><code-block id=\"4Fw9nhTenY7G7krNpZh3D3\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// role-guard.guard.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> CanActivate<span class=\"token punctuation\">,</span> ExecutionContext<span class=\"token punctuation\">,</span> Injectable <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Reflector <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token constant\">ROLE_GUARD_KEY</span> <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./role-guard.decorator'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RoleGuard</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">CanActivate</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> reflector<span class=\"token operator\">:</span> Reflector<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">canActivate</span><span class=\"token punctuation\">(</span>context<span class=\"token operator\">:</span> ExecutionContext<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> requiredRole <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>reflector<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token constant\">ROLE_GUARD_KEY</span><span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">getHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>requiredRole<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 如果没有设置角色要求，则允许访问</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> user <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">switchToHttp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> user<span class=\"token punctuation\">.</span>roles<span class=\"token operator\">?.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>requiredRole<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"w3LwUHoCKJuypjR9NLp2v4\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">限制特定角色用户访问控制器方法</span></summary><code-block id=\"bZim51FL9ydRoZGAeTsvY3\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// app.controller.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> UseGuards <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> RoleGuard <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./role-guard.guard'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> RoleGuard <span class=\"token keyword\">as</span> RoleGuardDecorator <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./role-guard.decorator'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'app'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">RoleGuardDecorator</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用 @RoleGuard 装饰器设置角色要求</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UseGuards</span></span><span class=\"token punctuation\">(</span>RoleGuard<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用守卫进行权限检查</span>\n  <span class=\"token function\">getAdminData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Admin Data'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><h4 id=\"pmXxfc2GJhtbrGGzdMtsek\" class=\"wolai-block\"><span class=\"inline-wrap\">参数装饰器</span></h4><details id=\"xrFKYH8voBGeoKN4Wwgwbv\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">创建 </span><span class=\"inline-wrap\"><code>@LogParams()</code></span><span class=\"inline-wrap\"> 装饰器</span></summary><code-block id=\"hYV6yp8aEZhGjcJLYdAiic\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// log-params.decorator.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> SetMetadata<span class=\"token punctuation\">,</span> createParamDecorator<span class=\"token punctuation\">,</span> ExecutionContext <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">LOG_PARAMS_KEY</span> <span class=\"token operator\">=</span> <span class=\"token string\">'log-params'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> LogParams <span class=\"token operator\">=</span> <span class=\"token function\">createParamDecorator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">,</span> context<span class=\"token operator\">:</span> ExecutionContext<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> request <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">switchToHttp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Params: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> request<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</pre></div></code-block></details><details id=\"wftYw3cLLdAxxoCZRUhgVw\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">在控制器方法的参数上应用，实现参数日志记录</span></summary><code-block id=\"i3B7b5WvJRm1Sg17r79JhT\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// app.controller.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Param <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> LogParams <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./log-params.decorator'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'app'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'user/:id'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getUserData</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">LogParams</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> params<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">User Data for ID: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>params<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n</pre></div></code-block></details><h2 id=\"wzjHT7Pdfj9QJD2pj9iP9Y\" class=\"wolai-block\"><span class=\"inline-wrap\">总结</span></h2><div id=\"owp5x1tLx7DeFoq6XyEuHS\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest.js 的装饰器实现原理基于 TypeScript 提供的装饰器特性和 Reflect Metadata API。</span></div></div><div id=\"8ubegyqcX3VhJWrQqtcq9K\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">通过在类、方法等上添加元数据，去实现了依赖注入、路由映射等功能。</span></div></div><div id=\"3dWhVjcR1bKjFBfFpccDFH\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">以下是主要的实现原理要点：</span></div></div><ol class=\"wolai-block\"><li id=\"7McpACECUM15q9VjbFyrtd\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>Reflect Metadata API:</b></span><span class=\"inline-wrap\"> Nest<span class=\"jill\"></span>使用 Reflect Metadata API 提供的 </span><span class=\"inline-wrap\"><code>Reflect.getMetadata</code></span><span class=\"inline-wrap\"> 和 </span><span class=\"inline-wrap\"><code>Reflect.defineMetadata</code></span><span class=\"inline-wrap\"> 等方法来动态添加和获取元数据，包含了装饰器在类、方法等上的信息。</span></li><li id=\"29hysMeGnWRkYMLaCz1fpa\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>依赖注入:</b></span><span class=\"inline-wrap\"> Nest<span class=\"jill\"></span>中所有的装饰器都使用 Reflect Metadata 来添加元数据，以便在初始化阶段进行依赖扫描和注入。Nest.js 利用这些元数据实现了依赖注入。</span></li><li id=\"7MXrruDSWG6HGDQQyf1krA\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>emitDecoratorMetadata 选项:</b></span><span class=\"inline-wrap\"> TypeScript 提供了 </span><span class=\"inline-wrap\"><code>emitDecoratorMetadata</code></span><span class=\"inline-wrap\"> 编译选项，开启后会自动为装饰器添加一些元数据，包括 </span><span class=\"inline-wrap\"><code>design:type</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>design:returntype</code></span><span class=\"inline-wrap\">。这些元数据用于识别类、方法的类型信息，帮助在运行时进行实例化和注入。</span></li><li id=\"7f1DzjgNkAQSp8sVG7mLou\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>@SetMetadata 装饰器:</b></span><span class=\"inline-wrap\"> Nest.js 还提供了 </span><span class=\"inline-wrap\"><code>@SetMetadata</code></span><span class=\"inline-wrap\"> 装饰器，允许我们自定义装饰器，在控制器的类和方法上添加自定义的元数据，再从拦截器和守卫中通过 </span><span class=\"inline-wrap\"><code>reflector</code></span><span class=\"inline-wrap\"> 的 API 取出来进行相应的处理。</span></li></ol><div id=\"q6xWBPfpMzWNUJSr7MDCxZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">通过理解这些概念，可以更好地理解 Nest.js 中装饰器的工作原理和如何实现依赖注入、路由映射等功能。</span></div></div><div id=\"5FoqNek3vuxpoJo92jveZp\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"m5rQqTjKpaCkHRoTRWj84B\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"rGEo6es7WjJTbNis73kK16\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div></article><footer></footer></body></html>","site":{"data":{}},"length":23632,"excerpt":"","more":"\n<!DOCTYPE html>\n<html lang=\"zh-Hans-CN\"><head><meta charset=\"utf-8\"/><meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/modern-norm.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/prism.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/katex.min.css\"/><link rel=\"stylesheet\" type=\"text/css\" href=\"../css/wolai.css\"/><title>Nest中的装饰器 - wolai 笔记</title><link rel=\"shortcut icon\"></link></head><body class=\"full-width\"><header><div class=\"image has\" style=\"background-position-y: 50%; background-image: url(&quot;https://cdn.wostatic.cn/cover/painting/26HnnzT7aex1JAZ7fiAirc.jpg&quot;)\"></div><div class=\"title\"><div class=\"banner\"><div class=\"icon\"></div></div><div data-title=\"Nest中的装饰器\" class=\"main-title\"></div></div></header><article><h2 id=\"kfs9RQGPHcqMqeoQUqgSEL\" class=\"wolai-block\"><span class=\"inline-wrap\">回顾</span></h2><div id=\"xp4jdqwNXNrbFPzvc2c8y2\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">前两篇中主要介绍了<span class=\"jill\"></span>Nest<span class=\"jill\"></span>的入门使用以及一些框架特性，包括模块、控制器、服务注入、Http<span class=\"jill\"></span>服务、数据库服务等功能，都涉及到很多的装饰器，这一篇会介绍<span class=\"jill\"></span>Nest<span class=\"jill\"></span>中的装饰器，以及工作原理。</span></div></div><h2 id=\"8frTphd6WnbW2Gz9kQX8nK\" class=\"wolai-block\"><span class=\"inline-wrap\">引言</span></h2><h3 id=\"aXDSgBmbwUv5HtUajZEgp\" class=\"wolai-block\"><span class=\"inline-wrap\">装饰器在 Nest 中的角色</span></h3><ul class=\"wolai-block\"><li id=\"tp5hUhETK47nNjYNiprmWJ\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">在 NestJS 中，装饰器是一种强大的工具，对于</span><span class=\"inline-wrap\"><b>扩展或修改类、方法、属性或参数</b></span><span class=\"inline-wrap\">的行为，提供了优雅而灵活的方式，使开发人员能够</span><span class=\"inline-wrap\"><b>在不修改原始代码的情况下</b></span><span class=\"inline-wrap\">添加或修改功能。</span></li><li id=\"nzxs1CoQ8JVQeKapPsJa5g\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">装饰器应用非常广泛，包括</span><span class=\"inline-wrap\"><b>路由、控制器、服务、依赖注入</b></span><span class=\"inline-wrap\">等。它们可以用于定义路由处理程序、中间件、管道，使开发者能够</span><span class=\"inline-wrap\"><b>更专注于业务逻辑的实现</b></span><span class=\"inline-wrap\">，而不必过多关注底层框架细节。</span></li><li id=\"imwJWsnNv4joWeZJA7kxuw\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">NestJS 通过装饰器，提供了</span><span class=\"inline-wrap\"><b>声明式的编程方式</b></span><span class=\"inline-wrap\">，使代码更清晰、易于维护。开发者可以通过在类、方法或属性上应用装饰器来定义元数据或增强其行为，提高代码的</span><span class=\"inline-wrap\"><b>可读性和可维护性</b></span><span class=\"inline-wrap\">。</span></li></ul><h2 id=\"nzaxxzzXj35YibEtADNUcm\" class=\"wolai-block\"><span class=\"inline-wrap\">NestJS 装饰器基础</span></h2><h3 id=\"u3b5D98NuVTAc13aqDMr4m\" class=\"wolai-block\"><span class=\"inline-wrap\">类装饰器</span></h3><ul class=\"wolai-block\"><li id=\"9jUtK6JSizJmiDy2p2JSSY\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">模块相关</span><details id=\"x7BqRk5i3EQojs1W3JCRRe\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Module()</code></span><span class=\"inline-wrap\">: 声明 Nest 模块。</span></summary><code-block id=\"3pJH2UXmTmf8RZEpYks6e3\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Module <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppController <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></div></code-block></details><details id=\"t6baGLxJPrsmT42Li8eKV8\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Global()</code></span><span class=\"inline-wrap\">: 声明全局模块。</span></summary><code-block id=\"hzfaHbGf4sed5zYjtjNNXH\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// helper.module.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Module<span class=\"token punctuation\">,</span> Global <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> HelperService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./helper.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Global</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>HelperService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  exports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>HelperService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelperModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><div id=\"bPu8gqVFv1RVUgs8Hrk9gp\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">创建了 </span><span class=\"inline-wrap\"><code>HelperModule</code></span><span class=\"inline-wrap\">，并导入了 </span><span class=\"inline-wrap\"><code>HelperService</code></span><span class=\"inline-wrap\">，同时使用 </span><span class=\"inline-wrap\"><code>@Global()</code></span><span class=\"inline-wrap\"> 装饰器标记为全局模块。</span></div></div><code-block id=\"5aYFVr9uNVb6n82zYkqn3w\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// helper.service.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Injectable <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelperService</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">generateUniqueId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 实际应用中可能会使用更复杂的算法</span>\n    <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">36</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><div id=\"8NPDr4CcQNk1AFhSWLHGhk\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>HelperService</code></span><span class=\"inline-wrap\"> 提供了一个生成唯一标识符的简单功能。</span></div></div><code-block id=\"f2TqgKZp5WKZBRNkc9JTV4\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// app.module.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Module <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> HelperModule <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./helper/helper.module'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppController <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>HelperModule<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></div></code-block><div id=\"8vBxLgvSKYPgNH3EAmRhMM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">通过将 </span><span class=\"inline-wrap\"><code>HelperModule</code></span><span class=\"inline-wrap\"> 导入到 </span><span class=\"inline-wrap\"><code>AppModule</code></span><span class=\"inline-wrap\"> 中，我们确保整个应用程序都可以访问 </span><span class=\"inline-wrap\"><code>HelperService</code></span><span class=\"inline-wrap\"> 提供的功能。</span></div></div><code-block id=\"vgscJWEMr22fTbny9Zac8S\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// app.controller.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// import &#123; HelperService &#125; from './helper/helper.service'; 不需要再单独导入</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> appService<span class=\"token operator\">:</span> AppService<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> helperService<span class=\"token operator\">:</span> HelperService<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> uniqueId <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>helperService<span class=\"token punctuation\">.</span><span class=\"token function\">generateUniqueId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> message <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>appService<span class=\"token punctuation\">.</span><span class=\"token function\">getAppMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>message<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\"> Unique ID: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>uniqueId<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><div id=\"pBx7hSfDYJMYhwm5rffDsk\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>HelperService</code></span><span class=\"inline-wrap\"> 被注入到 </span><span class=\"inline-wrap\"><code>AppController</code></span><span class=\"inline-wrap\"> 中，然后使用 </span><span class=\"inline-wrap\"><code>generateUniqueId</code></span><span class=\"inline-wrap\"> 方法生成一个唯一标识符。通过这种方式，你可以在整个应用程序中的任何地方注入 </span><span class=\"inline-wrap\"><code>HelperService</code></span><span class=\"inline-wrap\"> 并使用其中的方法，而不需要在每个模块中都重复导入或提供 </span><span class=\"inline-wrap\"><code>HelperService</code></span><span class=\"inline-wrap\">。这有助于避免代码重复，提高可维护性，并确保全局模块中的功能在整个应用中可用。</span></div></div></details></li><li id=\"xdaHL9A11uP4YXX2hFtusP\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">控制器相关</span><details id=\"tVhxgsi7BU27oG5siA7Sys\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Controller()</code></span><span class=\"inline-wrap\">: 声明模块里的控制器。</span></summary><code-block id=\"iHiaayYBefy4nefJAJGV95\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Hello World!'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></pre></div></code-block></details></li><li id=\"tbMyxVLfWHVHDbrPYD3fBW\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">提供者（服务）相关\n</span><details id=\"2HKVHGR1dKU9sUvHNTfM1q\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Injectable()</code></span><span class=\"inline-wrap\">: 声明模块里可以注入的提供者（服务）。</span></summary><code-block id=\"tKwkqKtfZcie9fRKQB2yVm\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppService</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Hello World!'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"cTcwJ7SjSZJryznRuAPQPq\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Inject</code></span><span class=\"inline-wrap\">：通过 token 手动指定注入的 provider，token 可以是 class 或者 string</span></summary><code-block id=\"kcYwjFanD9XnXktzV9a92e\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// app.service.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Injectable<span class=\"token punctuation\">,</span> Inject <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> LoggerService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./logger.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppService</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Inject</span></span><span class=\"token punctuation\">(</span>LoggerService<span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> logger<span class=\"token operator\">:</span> LoggerService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">getAppMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Getting app message...'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Hello from AppService!'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"4xts2F2s5p1FRGYnkrt9Lm\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Optional()</code></span><span class=\"inline-wrap\">: 声明注入的依赖服务是可选的，可以为空。(注入的依赖如果没有的话，创建对象时会报错)</span></summary><code-block id=\"9M3qvatK2JCkJ9vQfJnMDP\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// optional.service.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Injectable<span class=\"token punctuation\">,</span> Optional <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">OptionalService</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Optional Service Data'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// app.service.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Injectable<span class=\"token punctuation\">,</span> Optional <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> OptionalService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./optional.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppService</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Optional</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> optionalService<span class=\"token operator\">:</span> OptionalService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> optionalData <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>optionalService <span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>optionalService<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Optional service is not available'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello World! </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>optionalData<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details></li></ul><div id=\"g5SsJdwmgrQV34x4wArCoQ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"nmG2tHRpx4WG9TVNL2ydHf\" class=\"wolai-block\"><span class=\"inline-wrap\">方法装饰器</span></h3><ul class=\"wolai-block\"><li id=\"N87vrx7k8PAGFbW9QLAaq\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">HTTP 相装饰器</span><details id=\"pfg8wncCWvghPknMY9Wu4w\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b><code>@Get()</code></b></span><span class=\"inline-wrap\"><b>、</b></span><span class=\"inline-wrap\"><b><code>@Post()</code></b></span><span class=\"inline-wrap\"><b>、</b></span><span class=\"inline-wrap\"><b><code>@Put()</code></b></span><span class=\"inline-wrap\"><b>、</b></span><span class=\"inline-wrap\"><b><code>@Patch()</code></b></span><span class=\"inline-wrap\"><b>、</b></span><span class=\"inline-wrap\"><b><code>@Delete()</code></b></span><span class=\"inline-wrap\"><b> 、@Options()、@Head()等装饰器：</b></span></summary><code-block id=\"8jyFVj6JxwVtNMZcR2tEdH\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Post<span class=\"token punctuation\">,</span> Put<span class=\"token punctuation\">,</span> Patch<span class=\"token punctuation\">,</span> Delete <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'GET request handled'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Post</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">postData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'POST request handled'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Put</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">putData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'PUT request handled'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Patch</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">patchData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'PATCH request handled'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Delete</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">deleteData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'DELETE request handled'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"eyot87xodUjPeJvBTXX4yr\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@HttpCode()</code></span><span class=\"inline-wrap\">: 修改响应的状态码。</span></summary><code-block id=\"wEDRbMLTcaTEhmjocNTZVH\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> HttpCode <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">HttpCode</span></span><span class=\"token punctuation\">(</span><span class=\"token number\">201</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 将 HTTP 状态码设置为 201 Created</span>\n  <span class=\"token function\">getExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'带有自定义状态码的示例响应'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"7nahEPYLNEJCKaMovKdRtn\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Header()</code></span><span class=\"inline-wrap\">: 修改响应头。</span></summary><code-block id=\"t7RPy39xrj6JA2QHHwwgnL\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Header <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Header</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'Cache-Control'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'no-store'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 将 Cache-Control 头设置为 'no-store'</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Header</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'Custom-Header'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Custom-Value'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 添加自定义头部</span>\n  <span class=\"token function\">getExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'带有自定义头部的示例响应'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"cvwrLoxSqUG878njdZuQdE\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Redirect()</code></span><span class=\"inline-wrap\">: 指定重定向的 URL。</span></summary><code-block id=\"ai6XhJzXECxW4yWpvZ5zUM\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Redirect <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'redirect'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Redirect</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.example.com'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 重定向到指定的 URL</span>\n  <span class=\"token function\">getRedirectExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 由于重定向，此方法将不会被执行</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"4w27YzafxMprPDzrotypXz\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Render()</code></span><span class=\"inline-wrap\">: 指定渲染用的模板引擎。</span></summary><code-block id=\"tr2XaTmi2G2GZZgJrPUWsr\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Render <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'render'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Render</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'index'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用默认视图引擎渲染 'index' 模板</span>\n  <span class=\"token function\">getRenderExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span> message<span class=\"token operator\">:</span> <span class=\"token string\">'你好，NestJS！'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 传递给视图的数据</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details></li></ul><h3 id=\"vKAFFYKnWjSxexv2LJy9hB\" class=\"wolai-block\"><span class=\"inline-wrap\">参数装饰器</span></h3><ul class=\"wolai-block\"><li id=\"wEKfqXLfkt18LgQUNcLtxk\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><b>请求对象和响应对象相关</b></span><details id=\"tWyWdm6S3NwCnoC1MfbJ5v\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Req()</code></span><span class=\"inline-wrap\">, </span><span class=\"inline-wrap\"><code>@Request()</code></span><span class=\"inline-wrap\">: 注入 request 对象。</span></summary><div id=\"gkhd2LPyoQt6MQGFy2B8oJ\" class=\"wolai-block wolai-text\"><div></div></div><code-block id=\"2uQkyxKQEPhqD2E2LR74JY\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Req<span class=\"token punctuation\">,</span> Request <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Request <span class=\"token keyword\">as</span> ExpressRequest <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Req</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> request<span class=\"token operator\">:</span> ExpressRequest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Request URL: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>request<span class=\"token punctuation\">.</span>url<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'/alternative'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getDataAlternative</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Request</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> request<span class=\"token operator\">:</span> ExpressRequest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Request URL (Alternative): </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>request<span class=\"token punctuation\">.</span>url<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"eNaMZsRKy1fMZQRhx6WUo\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Res()</code></span><span class=\"inline-wrap\">, </span><span class=\"inline-wrap\"><code>@Response()</code></span><span class=\"inline-wrap\">: 注入 response 对象，</span></summary><code-block id=\"gTZRRrtN9cm6cQGM9k9UE9\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Res<span class=\"token punctuation\">,</span> Response <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Response <span class=\"token keyword\">as</span> ExpressResponse <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">sendData</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Res</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> response<span class=\"token operator\">:</span> ExpressResponse<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello, World!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'/alternative'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">sendDataAlternative</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Response</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> response<span class=\"token operator\">:</span> ExpressResponse<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello, World! (Alternative)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details></li><li id=\"6UuCpiMW1u7Kt484TDVyMh\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><b>路由参数相关</b></span><details id=\"tMvXBC8YDsJJHfiap1Hv95\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Param()</code></span><span class=\"inline-wrap\">: 取出 URL 中的参数。</span></summary><div id=\"vQHXmq8EEHfpcQurSwkLkE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Param(&#39;id&#39;)</code></span><span class=\"inline-wrap\"> 用于提取 URL 中的参数，并将其作为方法参数传递给 </span><span class=\"inline-wrap\"><code>getData</code></span><span class=\"inline-wrap\"> 方法。</span></div></div><code-block id=\"jF5zCWQeaDJAEGRsybxiQt\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Param <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">':id'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Param</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span> id<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Data for ID </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>id<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"7RuFiw3vY5SMPV49jp5mok\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Query()</code></span><span class=\"inline-wrap\">: 取出 query 部分的参数。</span></summary><div id=\"bfb7GWupyuEKBUQPT91bVZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Query(&#39;param&#39;)</code></span><span class=\"inline-wrap\"> 用于提取 URL 查询参数，并将其作为方法参数传递给 </span><span class=\"inline-wrap\"><code>getData</code></span><span class=\"inline-wrap\"> 方法。</span></div></div><code-block id=\"qJ9FX8EAUmYEuQKAE7k8BB\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Query <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Query</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'param'</span><span class=\"token punctuation\">)</span> param<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Received query parameter: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>param<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"cTy1m8JwNpKeFxxNYVKhRy\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Body()</code></span><span class=\"inline-wrap\">: 取出请求 body，通过 DTO class 来接收。</span></summary><div id=\"k65opH8jGw47RoQQ2ccx7G\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Body()</code></span><span class=\"inline-wrap\"> 用于提取请求体中的数据，并将其作为方法参数传递给 </span><span class=\"inline-wrap\"><code>createItem</code></span><span class=\"inline-wrap\"> 方法。</span></div></div><code-block id=\"3P7iHCeN69oEgMxB2U3Vor\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Post<span class=\"token punctuation\">,</span> Body <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CreateItemDto</span> <span class=\"token punctuation\">&#123;</span>\n  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  description<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Post</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">createItem</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Body</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> createItemDto<span class=\"token operator\">:</span> CreateItemDto<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// Logic to create an item using the provided data</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Created item: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>createItemDto<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"8r7YqqAocmKMSq7SGeM6K5\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Headers()</code></span><span class=\"inline-wrap\">: 取出某个或全部请求头。</span></summary><div id=\"obvCgB8RZU7pUBRkCcuf4K\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Headers(&#39;authorization&#39;)</code></span><span class=\"inline-wrap\"> 用于提取请求头中的 </span><span class=\"inline-wrap\"><code>authorization</code></span><span class=\"inline-wrap\"> 数据，并将其作为方法参数传递给 </span><span class=\"inline-wrap\"><code>getData</code></span><span class=\"inline-wrap\"> 方法</span></div></div><code-block id=\"fhLbETPErZuX1wk4fJh8T6\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Headers <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Headers</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'authorization'</span><span class=\"token punctuation\">)</span> authorization<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Authorization header: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>authorization<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"aYQyAykCpTshrvj89A8zrd\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@Session()</code></span><span class=\"inline-wrap\">: 取出 session 对象，需要启用 express-session 中间件。</span></summary><div id=\"8qFhqgC31xbiujXHF1SULw\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Session()</code></span><span class=\"inline-wrap\"> 装饰器允许你访问存储在用户会话中的数据。</span></div></div><blockquote id=\"uwtcpyXxjwX363mQHPycQL\" class=\"wolai-block\"><span class=\"inline-wrap\">确保在使用 </span><span class=\"inline-wrap\"><code>@Session()</code></span><span class=\"inline-wrap\"> 装饰器之前，你已经正确配置并启用了 </span><span class=\"inline-wrap\"><code>express-session</code></span><span class=\"inline-wrap\"> 中间件。</span></blockquote><code-block id=\"asqXAUZkKX77h6UaR8Z3JR\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Session <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Session</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> session<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// Access session data</span>\n    <span class=\"token keyword\">const</span> userId <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>userId<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">User ID from session: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>userId<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"mDN9EKQroCPwZip9vZsFoo\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@HostParam()</code></span><span class=\"inline-wrap\">: 取出 host 里的参数。</span></summary><code-block id=\"bCBAacxHkwMRZ89jnSdbPK\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> HostParam <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example/:subdomain'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getSubdomain</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">HostParam</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'subdomain'</span><span class=\"token punctuation\">)</span> subdomain<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Subdomain: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>subdomain<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details></li></ul><h3 id=\"wSRR5JymoLx3Wg3TWCfBWe\" class=\"wolai-block\"><span class=\"inline-wrap\">功能性装饰器</span><details id=\"7uTreWNVCFsWfBfr7umdur\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b><code>@UseGuards()</code></b></span><span class=\"inline-wrap\"><b> 添加身份验证、授权等守卫</b></span></summary><code-block id=\"uhdwr6vpKSRmjRLy5WTt4S\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> UseGuards <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AuthGuard <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./auth.guard'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'secured'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SecuredController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UseGuards</span></span><span class=\"token punctuation\">(</span>AuthGuard<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getSecuredData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Secured data'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"a8QefobhvSK6RoSjBniHen\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b><code>@UseInterceptors()</code></b></span><span class=\"inline-wrap\"><b> 使用拦截器</b></span></summary><code-block id=\"c6ViiTe6XbtwHyH573yfsK\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> UseInterceptors <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> LoggingInterceptor <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./logging.interceptor'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UseInterceptors</span></span><span class=\"token punctuation\">(</span>LoggingInterceptor<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'GET request handled'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"qZRyV94GqWLof8bSsm7BNP\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b><code>@UseFilters()</code></b></span><span class=\"inline-wrap\"><b> 使用异常过滤器</b></span></summary><code-block id=\"p7oRrAJm2vEyqEHCPydYae\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> UseFilters <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> CustomExceptionFilter <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./custom-exception.filter'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UseFilters</span></span><span class=\"token punctuation\">(</span>CustomExceptionFilter<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Unexpected error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"uB2nBjHNtjiBLWtHdmbpx9\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b><code>@UsePipes()</code></b></span><span class=\"inline-wrap\"><b> 使用管道</b></span></summary><code-block id=\"p4RWLEL9qg5aSdQ5E6rDX1\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> UsePipes<span class=\"token punctuation\">,</span> ValidationPipe <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UsePipes</span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ValidationPipe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// Some logic here</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"6wZtAcanfxGsRkm9f5XWKr\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b><code>@Next()</code></b></span><span class=\"inline-wrap\">: 注入调用下一个 handler 的 next 方法。</span></summary><div id=\"2yKDRUHTEzvRjbHj28eYTM\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Next()</code></span><span class=\"inline-wrap\"> 装饰器注入 </span><span class=\"inline-wrap\"><code>next</code></span><span class=\"inline-wrap\"> 函数，该函数用于将控制传递给下一个中间件或处理程序函数。</span></div></div><code-block id=\"vNjDCQ4gnGHsPFUyWxhakQ\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Injectable <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyMiddleware</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">use</span><span class=\"token punctuation\">(</span>req<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> res<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">next</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Before handling the request...'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 调用 @Next() 装饰器注入的 next 函数，将控制传递给下一个中间件或处理程序</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'After handling the request...'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"9Aqaan9JVYwTTM9vbf9g3B\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><code>@SetMetadata()</code></span><span class=\"inline-wrap\">: 在 class 或者 handler 上添加 metadata。</span></summary><div id=\"gd1FyLH6yqjzxBv6YxqCkq\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这个装饰器的底层实现就是 Reflect.defineMetadata；</span></div></div><div id=\"2WrsMP1Uvsyo3wKedwM5pD\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image.png\" style=\"width: 590px\"/></figure></div><div id=\"4ebVEBrHDPutxZphXeeZ6J\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">怎么使用的，举个例子：</span></div></div><div id=\"vN2KjbvVSCpFZ3jpFumSAH\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">我们可以使用 </span><span class=\"inline-wrap\"><code>@SetMetadata()</code></span><span class=\"inline-wrap\"> 装饰器结合自定义装饰器和拦截器来实现一个基本的权限控制系统。</span></div></div><div id=\"d8BtTFLQ9Vh8xuAWqPVwV1\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">首先，定义一个自定义装饰器 </span><span class=\"inline-wrap\"><code>@Roles()</code></span><span class=\"inline-wrap\"> 用于在处理程序上设置角色权限：</span></div></div><code-block id=\"rpmpoLxbcfCHsTehXgkWD6\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// roles.decorator.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> SetMetadata <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Roles</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>roles<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">SetMetadata</span><span class=\"token punctuation\">(</span><span class=\"token string\">'roles'</span><span class=\"token punctuation\">,</span> roles<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block><div id=\"6LBqrfjbcRwh9C3gjvAJv5\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">接下来，创建一个守卫 </span><span class=\"inline-wrap\"><code>RolesGuard</code></span><span class=\"inline-wrap\">检查用户的角色是否符合处理程序所需的角色：</span></div></div><code-block id=\"chwqPWiiTQcyj7Jb51SNQx\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// roles.guard.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> CanActivate<span class=\"token punctuation\">,</span> ExecutionContext<span class=\"token punctuation\">,</span> Injectable <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Reflector <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RolesGuard</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">CanActivate</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> reflector<span class=\"token operator\">:</span> Reflector<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">canActivate</span><span class=\"token punctuation\">(</span>context<span class=\"token operator\">:</span> ExecutionContext<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> requiredRoles <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>reflector<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'roles'</span><span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">getHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>requiredRoles<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 如果没有设置角色要求，则允许访问</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> user <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">switchToHttp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> requiredRoles<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span>role <span class=\"token operator\">=></span> user<span class=\"token punctuation\">.</span>roles<span class=\"token operator\">?.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>role<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><div id=\"qABPKcHJvf6qTk25UbgENB\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">最后，将这个守卫应用于一个需要权限控制的控制器：</span></div></div><code-block id=\"n8q1YhL8Mgs48Zv5mYTD88\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// app.controller.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> UseGuards <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> RolesGuard <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./roles.guard'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Roles <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./roles.decorator'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'app'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Roles</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用 @Roles 装饰器设置角色要求</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UseGuards</span></span><span class=\"token punctuation\">(</span>RolesGuard<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用守卫进行权限检查</span>\n  <span class=\"token function\">getAdminData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Admin Data'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Roles</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用 @Roles 装饰器设置角色要求</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UseGuards</span></span><span class=\"token punctuation\">(</span>RolesGuard<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用守卫进行权限检查</span>\n  <span class=\"token function\">getUserData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'User Data'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><div id=\"4DwtqsbgsmwgPvBBqx92FR\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在这个例子中，</span><span class=\"inline-wrap\"><code>@Roles()</code></span><span class=\"inline-wrap\"> 装饰器用于设置每个处理程序需要的角色权限，然后 </span><span class=\"inline-wrap\"><code>RolesGuard</code></span><span class=\"inline-wrap\"> 拦截器会检查用户是否具备足够的权限。这里使用了 </span><span class=\"inline-wrap\"><code>@UseGuards()</code></span><span class=\"inline-wrap\"> 装饰器来将 </span><span class=\"inline-wrap\"><code>RolesGuard</code></span><span class=\"inline-wrap\"> 拦截器应用于相应的处理程序。</span></div></div><div id=\"gBCQEM8LPsdsGVBtGM1wX4\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">通过使用元数据，我们能够动态地设置和获取处理程序的角色权限要求，实现了一个基本的权限控制系统。这种方式提供了更灵活和可扩展的权限管理机制。</span></div></div></details></h3><div id=\"uyBkSNxsyYz6KXFwMWwB8F\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"7BRaTChsjKDXVa18RELJow\" class=\"wolai-block\"><span class=\"inline-wrap\">深入了解装饰器</span></h2><h3 id=\"hB8yAogDiSVFc1Ne44BhiX\" class=\"wolai-block\"><span class=\"inline-wrap\">装饰器的工作原理</span></h3><ul class=\"wolai-block\"><li id=\"Ln2DZDosCfHcyy7uqkS3b\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">Reflect 对象</span><div id=\"fN7zMFevtrJTa2xdD2qc1j\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>Reflect</code></span><span class=\"inline-wrap\"> 是 JavaScript 的内置对象，提供了一组静态方法，用于拦截和修改 JavaScript 操作。</span></div></div><details id=\"kNLyKTihtdeqPKA2aE3Xc3\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b>常见 Reflect 方法：</b></span><span class=\"inline-wrap\"> 包括 </span><span class=\"inline-wrap\"><code>Reflect.get</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>Reflect.set</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>Reflect.has</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>Reflect.apply</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>Reflect.construct</code></span><span class=\"inline-wrap\"> 等，用于属性获取、设置、判断存在、方法调用和实例构造等操作。</span></summary><code-block id=\"t8JBWVoAGtgnvaps1c7SJv\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> x<span class=\"token operator\">:</span> <span class=\"token number\">42</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 42</span>\nReflect<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> hasProperty <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token function\">Reflect</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span>max<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 5</span>\n<span class=\"token keyword\">let</span> instance <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">construct</span><span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 当前时间的 Date 实例</span>\n</pre></div></code-block></details><details id=\"p89hNw5TpgrcnctwosoRm3\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\"><b>Metadata API</b></span></summary><div id=\"mVJFwvowxUuqFMNN93HNzK\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">但实现 Nest 用到的 api 还没有进入标准，还在草案阶段；</span></div></div><code-block id=\"aRnhtvdcFDXVWSwvo14E6F\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre>Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">defineMetadata</span><span class=\"token punctuation\">(</span>metadataKey<span class=\"token punctuation\">,</span> metadataValue<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nReflect<span class=\"token punctuation\">.</span><span class=\"token function\">defineMetadata</span><span class=\"token punctuation\">(</span>metadataKey<span class=\"token punctuation\">,</span> metadataValue<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> propertyKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">getMetadata</span><span class=\"token punctuation\">(</span>metadataKey<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">getMetadata</span><span class=\"token punctuation\">(</span>metadataKey<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> propertyKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block><div id=\"41qcbKhmNbvpoVeY5tk88C\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><b>Reflect.defineMetadata</b></span><span class=\"inline-wrap\"> 和 </span><span class=\"inline-wrap\"><b>Reflect.getMetadata</b></span><span class=\"inline-wrap\"> 分别用于设置和获取某个类的元数据，如果最后传入了属性名，还可以单独为某个属性设置元数据。</span></div></div></details></li></ul><details id=\"asqT6YtgYjqJY8bJvKHxZy\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">元数据的存储和读取</span></summary><div id=\"gxacnjJqhRoVxR4A5gaA2L\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><b>元数据存在哪呢？</b></span></div></div><div id=\"3bgvG5FtX64YiVh1Abqyvq\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">存在类或者对象上，如果</span><span class=\"inline-wrap\"><b>给类或者类的静态属性添加元数据</b></span><span class=\"inline-wrap\">，那就保存在类上；</span></div></div><div id=\"6D2uq8cnyg366JCXiwteVN\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">如果</span><span class=\"inline-wrap\"><b>给实例属性添加元数据</b></span><span class=\"inline-wrap\">，那就保存在实例对象上，用类似</span><span class=\"inline-wrap\"><b> [[metadata]]</b></span><span class=\"inline-wrap\"> 的 key 来存的。</span></div></div><div id=\"25CBjrwkkFEiq7d8EA72D\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">看上面的 api 确实看不出啥，但它</span><span class=\"inline-wrap\"><b>支持装饰器的方式</b></span><span class=\"inline-wrap\">使用：</span></div></div><div id=\"qiFrx9GVHT8RWQQNoLutUg\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">1.</span><span class=\"inline-wrap\"><b>Reflect.metadata 装饰器</b></span></div></div><code-block id=\"xmTooevCqECpzoYsYXP9Nu\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Reflect</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">metadata</span><span class=\"token punctuation\">(</span>metadataKey<span class=\"token punctuation\">,</span> metadataValue<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Example</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Reflect</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">metadata</span><span class=\"token punctuation\">(</span>metadataKey<span class=\"token punctuation\">,</span> metadataValue<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><div id=\"7RyfKZuH8FZSctvxbncDVP\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">2.</span><span class=\"inline-wrap\"><b>装饰器的封装：</b></span><span class=\"inline-wrap\"> 将 Reflect.metadata 装饰器封装为更具表达力的装饰器，例如 </span><span class=\"inline-wrap\"><code>Type</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>ParamTypes</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>ReturnType</code></span><span class=\"inline-wrap\">。</span></div></div><code-block id=\"ozvCv2VgtMTaL4PvzHinUb\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Type</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">metadata</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"design:type\"</span><span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ParamTypes</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>types<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">metadata</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"design:paramtypes\"</span><span class=\"token punctuation\">,</span> types<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ReturnType</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">metadata</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"design:returntype\"</span><span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ParamTypes</span></span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">,</span> Number<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Example</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ReturnType</span></span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Type</span></span><span class=\"token punctuation\">(</span><span class=\"token builtin\">Function</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ParamTypes</span></span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">,</span> Number<span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">ReturnType</span></span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><div id=\"2eZt6Sk8NYYC7s5c1oSvng\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">然后我们就可以通过 Reflect metadata 的 api 获取这个类和对象的元数据了：</span></div></div><code-block id=\"qKztrD8KzoJygRpPxNba4K\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Example</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> paramTypes <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">getMetadata</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"design:paramtypes\"</span><span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">,</span> <span class=\"token string\">\"add\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// [Number, Number]</span>\n</pre></div></code-block></details><div id=\"eEN2EQetKhLMGixoJ137tE\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"uesFiCyVAWbvbu2X7RVyeg\" class=\"wolai-block\"><span class=\"inline-wrap\">NestJS<span class=\"jill\"></span>中是如何实现的</span></h3><div id=\"mY1TaCAAVkkkHuxFm1LXL9\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"> 先看一段源码：</span></div></div><div id=\"5EveQg6h4QDA7tNZUbQ4Y9\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_1.png\" style=\"width: 830px\"/></figure></div><div id=\"cvAdccgjckJKZRu3pkTVK5\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>@Module</code></span><span class=\"inline-wrap\"> 装饰器调用了 </span><span class=\"inline-wrap\"><code>Reflect.defineMetadata</code></span><span class=\"inline-wrap\"> 来给这个类添加了一些元数据。所以我们这样用的时候：</span></div></div><code-block id=\"wioS5AJQkgxBsRWADyZPS7\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Module <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppController <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block><div id=\"pB1kgRNr1M6WMEsEtgx4ir\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"> 其实就是给 AppModule 添加了 controllers 的元数据和 providers 的元数据。后面创建 IOC 容器的时候就会取出这些元数据来处理。</span></div></div><blockquote id=\"nXoyaPv4BTjE8aPRucs8eF\" class=\"wolai-block\"><span class=\"gray inline-wrap\">现在 metadata 的 api 还在草案阶段，需要使用 reflect-metadata 这个 polyfill 包才行。</span></blockquote><div id=\"opxWxCsmyGkevULNRfSbwp\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"hujrHXA584zNBkxwpTV4rk\" class=\"wolai-block\"><span class=\"inline-wrap\">为什么用<span class=\"jill\"></span>Typescript</span></h3><details id=\"ogosepz5JjMStr7TXxW9iA\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">完整例子</span></summary><code-block id=\"fobzw3TWNDWcgfFNCX9Hqs\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// logger.service.ts </span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Injectable <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LoggerService</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">log</span><span class=\"token punctuation\">(</span>message<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//  example.service.ts </span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Injectable <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> LoggerService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./logger.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleService</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> loggerService<span class=\"token operator\">:</span> LoggerService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">performTask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>loggerService<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Task performed!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//  example.controller.ts </span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ExampleService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./example.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> exampleService<span class=\"token operator\">:</span> ExampleService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>exampleService<span class=\"token punctuation\">.</span><span class=\"token function\">performTask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Data from Nest.js!'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//  app.module.ts </span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Module <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ExampleController <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./example.controller'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ExampleService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./example.service'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> LoggerService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./logger.service'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>ExampleController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>ExampleService<span class=\"token punctuation\">,</span> LoggerService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></div></code-block><div id=\"rLJz8d8ssgjMqJBWuVEmkb\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div></details><details id=\"wrjtpN2z4oDiBfzd6hd1cK\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">执行顺序</span></summary><div id=\"s8FvJjaV8tADViKon8veYi\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">在 Nest.js 中，整个依赖扫描和实例化的过程可以按照以下时间线来描述，同时结合三个元数据 (</span><span class=\"inline-wrap\"><code>design:type</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>design:returntype</code></span><span class=\"inline-wrap\">) 的作用：</span></div></div><ol class=\"wolai-block\"><li id=\"px3zbJjBBgm5M2yCwhn8Lb\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>模块装载（Module Loading）：</b></span><ul class=\"wolai-block\"><li id=\"qyGEh6JPdmNp1YaFyp4VLQ\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">Nest.js 应用程序启动时，首先会装载主模块（通常是 </span><span class=\"inline-wrap\"><code>AppModule</code></span><span class=\"inline-wrap\">）。</span></li><li id=\"9Wr9bXHUw2yDmQkfEV9KCN\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">在主模块中，使用 </span><span class=\"inline-wrap\"><code>@Module</code></span><span class=\"inline-wrap\"> 装饰器指定模块的元数据，包括控制器和提供者。</span></li></ul></li><li id=\"dFmcuU1PnAAgXgGdAsjzQ\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>提供者扫描（Provider Scanning）：</b></span><ul class=\"wolai-block\"><li id=\"8awZppggKPNDaq7mmP24j\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">Nest.js 模块扫描提供者（</span><span class=\"inline-wrap\"><code>@Injectable()</code></span><span class=\"inline-wrap\"> 装饰的类），解析其元数据。</span></li><li id=\"phKmLJYchRXyKr6dYyLWmL\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>design:type</code></span><span class=\"inline-wrap\"> 元数据描述提供者的类型。例如，如果有一个提供者类 </span><span class=\"inline-wrap\"><code>LoggerService</code></span><span class=\"inline-wrap\">，</span><span class=\"inline-wrap\"><code>design:type</code></span><span class=\"inline-wrap\"> 可能是 </span><span class=\"inline-wrap\"><code>Function</code></span><span class=\"inline-wrap\"> 表示它是一个类构造函数。</span></li></ul></li><li id=\"9cnKuTdWTTgSbK1K11gR9s\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>构造函数参数扫描（Constructor Parameter Scanning）：</b></span><ul class=\"wolai-block\"><li id=\"vMZUHS5WB4CdWVoBsYJuZP\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">对于每个提供者，检查其构造函数，并使用 </span><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\"> 元数据获取构造函数参数的类型信息。</span></li><li id=\"8BqdVM9D2Z74CJ9HXizRCD\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\"> 是一个数组，描述了构造函数的参数类型。例如，</span><span class=\"inline-wrap\"><code>ExampleService</code></span><span class=\"inline-wrap\"> 的构造函数参数是 </span><span class=\"inline-wrap\"><code>LoggerService</code></span><span class=\"inline-wrap\">，</span><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\"> 可能是 </span><span class=\"inline-wrap\"><code>[LoggerService]</code></span><span class=\"inline-wrap\">。</span></li></ul></li><li id=\"8FuuvMU4UYGq4DoYTTTGqv\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>模块初始化和实例化（Module Initialization and Instantiation）：</b></span><ul class=\"wolai-block\"><li id=\"vSYt5F1sAQvchdS1ko3Qcu\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">对于每个提供者，IoC 容器根据构造函数参数递归实例化其依赖项。</span></li><li id=\"eGBoDgmoBk5GXNFYTrzjiL\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">使用提供者的构造函数创建实例，并将依赖项注入到构造函数中。</span></li><li id=\"jZkn3NQiWSba7LUkP3WHCm\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">如果有其他模块被导入，重复上述步骤。</span></li></ul></li><li id=\"7nywMgjxX6m4oGYmiy2gcY\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>控制器扫描和路由解析（Controller Scanning and Route Resolution）：</b></span><ul class=\"wolai-block\"><li id=\"n2K6Dti2kpGXbpdGY57c4s\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">Nest.js 模块扫描控制器（</span><span class=\"inline-wrap\"><code>@Controller()</code></span><span class=\"inline-wrap\"> 装饰的类）。</span></li><li id=\"cyPMKByJSxd75J57UniQmr\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">对于每个控制器类，解析其元数据，包括路由和路由处理方法。</span></li></ul></li><li id=\"7LrdqCDzLwAreZsiuHhGrJ\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>方法元数据解析（Method Metadata Resolution）：</b></span><ul class=\"wolai-block\"><li id=\"hqMWeMDgyiAfp6Q72c45uw\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\">对于每个路由处理方法，解析其元数据，包括 </span><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\"> 和 </span><span class=\"inline-wrap\"><code>design:returntype</code></span><span class=\"inline-wrap\">。</span></li><li id=\"fSTSGVZusYNAT9tKHRRHq1\"><div class=\"marker\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\"></path></svg></div><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\"> 描述了方法的参数类型，而 </span><span class=\"inline-wrap\"><code>design:returntype</code></span><span class=\"inline-wrap\"> 描述了方法的返回值类型。</span></li></ul></li></ol><div id=\"cBdwFhJtiomRb9KKyYfoeK\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">总体而言，Nest.js 的 IoC 容器在模块装载和初始化过程中，通过装饰器中的元数据来实现提供者和控制器的扫描、实例化和依赖注入。三个元数据在这个过程中提供了关键的类型信息，确保了正确的依赖解析和注入。这使得 Nest.js 能够在运行时动态地管理类之间的依赖关系，实现依赖注入和路由解析等功能。</span></div></div></details><div id=\"evx4YBx8GMbJbbJormXMz9\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">细心的同学可能会发现，上面的例子一般是扫描加载指定模块的元数据，包括<span class=\"jill\"></span>controller<span class=\"jill\"></span>和<span class=\"jill\"></span>provider，但是在创建示例时，是需要知道构造器的参数，现在并没有添加这部分 metadata 数据呀，所以这里需要提到<span class=\"jill\"></span>Typescript<span class=\"jill\"></span>的优势，TypeScript 支持编译时自动添加一些 metadata 数据：</span></div></div><div id=\"ppsLMx168a48ggVLaU4gmT\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">比如这段代码：</span></div></div><div id=\"b6mW4Hm9zg3tg9xnEdsubX\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_2.png\" style=\"width: 554px\"/></figure></div><div id=\"us4abxZSQijAwVpVeC6xK8\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">添加了一个元数据，生成后的代码是这样的：</span></div></div><div id=\"gqJr1njpx4AjhJzM5xHocr\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_3.png\" style=\"width: 601px\"/></figure></div><div id=\"babMaqtoFiSZa6XShzYruZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">但是呢，ts 有一个编译选项叫做 </span><span class=\"inline-wrap\"><code>emitDecoratorMetadata</code></span><span class=\"inline-wrap\">，开启它就会自动添加一些元数据。开启之后再试一下：</span></div></div><div id=\"qRDRmbXBBLMpENamJpg4Pr\" class=\"wolai-block\"><figure class=\"wolai-left\" style=\"width: 100%\"><img src=\"media/image_4.png\" style=\"width: 608px\"/></figure></div><div id=\"eVYUtEVdcZZoH1247nHawT\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">会看到多了三个元数据：</span></div></div><div id=\"9Qr4U2HJSycHWBdHDZSKGz\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>design:type</code></span><span class=\"inline-wrap\">是<span class=\"jill\"></span>Function，是描述装饰目标的元数据，这里装饰的是函数</span></div></div><div id=\"uXXpx6XHFVoBUK7piTvWu\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\"> 是 [Number]，是参数的类型</span></div></div><div id=\"qySUZZy71wmQpwReLY31Dz\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"><code>design:returntype</code></span><span class=\"inline-wrap\"> 是 String，是返回值的类型</span></div></div><div id=\"s6stezuQjqkc4jNF41cDMU\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">所以，只要开启了这个编译选项，ts 生成的代码会自动添加一些元数据。然后创建对象的时候就可以通过 </span><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\"> 来拿到构造器参数的类型了，也就知道怎么注入依赖，怎么去<span class=\"jill\"></span>new<span class=\"jill\"></span>实例。</span></div></div><div id=\"f1tmKU7UGj8qDMrJMQobVH\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"f6dL8R8eCwHSRsWtzVSozZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">这也是为什么 nest 会用 ts 来写，因为它很依赖这个 </span><span class=\"inline-wrap\"><b>emitDecoratorMetadata</b></span><span class=\"inline-wrap\"> 的编译选项。</span></div></div><blockquote id=\"PQQ3ZJ943SdA7r1h8Xi7Y\" class=\"wolai-block\"><span class=\"gray inline-wrap\">nest cli<span class=\"jill\"></span>生成的模板是默认开启这个编译选项的。</span></blockquote><div id=\"2Xczw3J5tbg2pVoWnvhfu4\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">总结一下核心实现原理：</span><span class=\"inline-wrap\"><b>通过装饰器给 class 或者对象添加 metadata，并且开启 ts 的 emitDecoratorMetadata 来自动添加类型相关的 metadata，然后运行的时候通过这些元数据来实现依赖的扫描，对象的创建等等功能。</b></span></div></div><div id=\"2HRMYXRMxutvhzVRdXPxrW\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h3 id=\"8mfWTajKvBgZeH9zhq3S5a\" class=\"wolai-block\"><span class=\"inline-wrap\">自定义装饰器：</span><span class=\"inline-wrap\"><b>@SetMetadata </b></span></h3><div id=\"Fag4iGXMHA8mEw2sruMoZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest<span class=\"jill\"></span>还提供了一个 </span><span class=\"inline-wrap\"><code>@SetMetadata</code></span><span class=\"inline-wrap\"> 的装饰器让我们可以自定义装饰器去给 class、method 添加一些 metadata;</span></div></div><div id=\"wtoqAPc1N2nisQJ8rFY6Hc\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><h2 id=\"hGp8Fsdjjxs8gL9Lipc8Cr\" class=\"wolai-block\"><span class=\"inline-wrap\">自定义装饰器的应用场景</span></h2><h4 id=\"ejhvTs7vWkGZDirXgXuXW4\" class=\"wolai-block\"><span class=\"inline-wrap\">性能日志记录</span></h4><details id=\"m6GkkvhNzQo15kscykfbSD\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">创建 </span><span class=\"inline-wrap\"><code>@PerformanceLogger()</code></span><span class=\"inline-wrap\"> 装饰器</span></summary><code-block id=\"H8hF1QYNJgYBaZu7z2Quh\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// performance-logger.decorator.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> SetMetadata <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">PERFORMANCE_LOGGER_KEY</span> <span class=\"token operator\">=</span> <span class=\"token string\">'performance-logger'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">PerformanceLogger</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">SetMetadata</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PERFORMANCE_LOGGER_KEY</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block><code-block id=\"vwrhj8CSdHhaqmBoT345Cr\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// performance-logger.interceptor.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> CallHandler<span class=\"token punctuation\">,</span> ExecutionContext<span class=\"token punctuation\">,</span> Injectable<span class=\"token punctuation\">,</span> NestInterceptor <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Observable <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> tap <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs/operators'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PerformanceLoggerInterceptor</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">NestInterceptor</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">intercept</span><span class=\"token punctuation\">(</span>context<span class=\"token operator\">:</span> ExecutionContext<span class=\"token punctuation\">,</span> next<span class=\"token operator\">:</span> CallHandler<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Observable<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> startTime <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> next\n      <span class=\"token punctuation\">.</span><span class=\"token function\">handle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n        <span class=\"token function\">tap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">const</span> requestTime <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> startTime<span class=\"token punctuation\">;</span>\n          <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Request took </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>requestTime<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">ms</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"cKSKGGAeKLnE58EqBFyApN\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">在控制器方法上应用，实现性能监控</span></summary><code-block id=\"94gdGB7uBMFbsQJffert4Y\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// app.controller.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> UseInterceptors <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> PerformanceLogger <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./performance-logger.decorator'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> PerformanceLoggerInterceptor <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./performance-logger.interceptor'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'app'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">PerformanceLogger</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UseInterceptors</span></span><span class=\"token punctuation\">(</span>PerformanceLoggerInterceptor<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getAdminData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Admin Data'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><h4 id=\"ac4r3X9dHoq6okvLrnrPH7\" class=\"wolai-block\"><span class=\"inline-wrap\">权限验证</span></h4><details id=\"nZbddHrr5LKe98VwXKE2AY\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">创建 </span><span class=\"inline-wrap\"><code>@RoleGuard(role: string)</code></span><span class=\"inline-wrap\"> 装饰器</span></summary><code-block id=\"3giAs7wdxYsa2G8aEUpEQZ\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// role-guard.decorator.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> SetMetadata <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">ROLE_GUARD_KEY</span> <span class=\"token operator\">=</span> <span class=\"token string\">'role-guard'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">RoleGuard</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>role<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">SetMetadata</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ROLE_GUARD_KEY</span><span class=\"token punctuation\">,</span> role<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre></div></code-block><code-block id=\"4Fw9nhTenY7G7krNpZh3D3\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// role-guard.guard.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> CanActivate<span class=\"token punctuation\">,</span> ExecutionContext<span class=\"token punctuation\">,</span> Injectable <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Reflector <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token constant\">ROLE_GUARD_KEY</span> <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./role-guard.decorator'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RoleGuard</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">CanActivate</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> reflector<span class=\"token operator\">:</span> Reflector<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">canActivate</span><span class=\"token punctuation\">(</span>context<span class=\"token operator\">:</span> ExecutionContext<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> requiredRole <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>reflector<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token constant\">ROLE_GUARD_KEY</span><span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">getHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>requiredRole<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 如果没有设置角色要求，则允许访问</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> user <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">switchToHttp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> user<span class=\"token punctuation\">.</span>roles<span class=\"token operator\">?.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>requiredRole<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><details id=\"w3LwUHoCKJuypjR9NLp2v4\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">限制特定角色用户访问控制器方法</span></summary><code-block id=\"bZim51FL9ydRoZGAeTsvY3\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// app.controller.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> UseGuards <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> RoleGuard <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./role-guard.guard'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> RoleGuard <span class=\"token keyword\">as</span> RoleGuardDecorator <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./role-guard.decorator'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'app'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">RoleGuardDecorator</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用 @RoleGuard 装饰器设置角色要求</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">UseGuards</span></span><span class=\"token punctuation\">(</span>RoleGuard<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用守卫进行权限检查</span>\n  <span class=\"token function\">getAdminData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Admin Data'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</pre></div></code-block></details><h4 id=\"pmXxfc2GJhtbrGGzdMtsek\" class=\"wolai-block\"><span class=\"inline-wrap\">参数装饰器</span></h4><details id=\"xrFKYH8voBGeoKN4Wwgwbv\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">创建 </span><span class=\"inline-wrap\"><code>@LogParams()</code></span><span class=\"inline-wrap\"> 装饰器</span></summary><code-block id=\"hYV6yp8aEZhGjcJLYdAiic\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// log-params.decorator.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> SetMetadata<span class=\"token punctuation\">,</span> createParamDecorator<span class=\"token punctuation\">,</span> ExecutionContext <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">LOG_PARAMS_KEY</span> <span class=\"token operator\">=</span> <span class=\"token string\">'log-params'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> LogParams <span class=\"token operator\">=</span> <span class=\"token function\">createParamDecorator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">,</span> context<span class=\"token operator\">:</span> ExecutionContext<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> request <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">switchToHttp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Params: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> request<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</pre></div></code-block></details><details id=\"wftYw3cLLdAxxoCZRUhgVw\" class=\"wolai-block\"><summary><div class=\"marker\"></div><span class=\"inline-wrap\">在控制器方法的参数上应用，实现参数日志记录</span></summary><code-block id=\"i3B7b5WvJRm1Sg17r79JhT\" class=\"wolai-block\"><div class=\"wolai-pre\"><div data-lang=\"TypeScript\" class=\"marker\"></div><pre><span class=\"token comment\">// app.controller.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get<span class=\"token punctuation\">,</span> Param <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> LogParams <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./log-params.decorator'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'app'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppController</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'user/:id'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">getUserData</span><span class=\"token punctuation\">(</span><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">LogParams</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> params<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">User Data for ID: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>params<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n</pre></div></code-block></details><h2 id=\"wzjHT7Pdfj9QJD2pj9iP9Y\" class=\"wolai-block\"><span class=\"inline-wrap\">总结</span></h2><div id=\"owp5x1tLx7DeFoq6XyEuHS\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">Nest.js 的装饰器实现原理基于 TypeScript 提供的装饰器特性和 Reflect Metadata API。</span></div></div><div id=\"8ubegyqcX3VhJWrQqtcq9K\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">通过在类、方法等上添加元数据，去实现了依赖注入、路由映射等功能。</span></div></div><div id=\"3dWhVjcR1bKjFBfFpccDFH\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">以下是主要的实现原理要点：</span></div></div><ol class=\"wolai-block\"><li id=\"7McpACECUM15q9VjbFyrtd\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>Reflect Metadata API:</b></span><span class=\"inline-wrap\"> Nest<span class=\"jill\"></span>使用 Reflect Metadata API 提供的 </span><span class=\"inline-wrap\"><code>Reflect.getMetadata</code></span><span class=\"inline-wrap\"> 和 </span><span class=\"inline-wrap\"><code>Reflect.defineMetadata</code></span><span class=\"inline-wrap\"> 等方法来动态添加和获取元数据，包含了装饰器在类、方法等上的信息。</span></li><li id=\"29hysMeGnWRkYMLaCz1fpa\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>依赖注入:</b></span><span class=\"inline-wrap\"> Nest<span class=\"jill\"></span>中所有的装饰器都使用 Reflect Metadata 来添加元数据，以便在初始化阶段进行依赖扫描和注入。Nest.js 利用这些元数据实现了依赖注入。</span></li><li id=\"7MXrruDSWG6HGDQQyf1krA\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>emitDecoratorMetadata 选项:</b></span><span class=\"inline-wrap\"> TypeScript 提供了 </span><span class=\"inline-wrap\"><code>emitDecoratorMetadata</code></span><span class=\"inline-wrap\"> 编译选项，开启后会自动为装饰器添加一些元数据，包括 </span><span class=\"inline-wrap\"><code>design:type</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>design:paramtypes</code></span><span class=\"inline-wrap\">、</span><span class=\"inline-wrap\"><code>design:returntype</code></span><span class=\"inline-wrap\">。这些元数据用于识别类、方法的类型信息，帮助在运行时进行实例化和注入。</span></li><li id=\"7f1DzjgNkAQSp8sVG7mLou\"><div class=\"marker\"></div><span class=\"inline-wrap\"><b>@SetMetadata 装饰器:</b></span><span class=\"inline-wrap\"> Nest.js 还提供了 </span><span class=\"inline-wrap\"><code>@SetMetadata</code></span><span class=\"inline-wrap\"> 装饰器，允许我们自定义装饰器，在控制器的类和方法上添加自定义的元数据，再从拦截器和守卫中通过 </span><span class=\"inline-wrap\"><code>reflector</code></span><span class=\"inline-wrap\"> 的 API 取出来进行相应的处理。</span></li></ol><div id=\"q6xWBPfpMzWNUJSr7MDCxZ\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\">通过理解这些概念，可以更好地理解 Nest.js 中装饰器的工作原理和如何实现依赖注入、路由映射等功能。</span></div></div><div id=\"5FoqNek3vuxpoJo92jveZp\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"m5rQqTjKpaCkHRoTRWj84B\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div><div id=\"rGEo6es7WjJTbNis73kK16\" class=\"wolai-block wolai-text\"><div><span class=\"inline-wrap\"></span><br/></div></div></article><footer></footer></body></html>"},{"_content":"article {\n  width: 100% !important;\n  padding: 0;\n}","source":"html/nest/css/style.css","raw":"article {\n  width: 100% !important;\n  padding: 0;\n}","date":"2023-12-11T05:24:48.849Z","updated":"2023-12-11T05:24:48.849Z","path":"html/nest/css/style.css","layout":"false","_id":"clq0gv744000020q91ubw7ogi","title":"","comments":1,"content":"article {\n  width: 100% !important;\n  padding: 0;\n}","site":{"data":{}},"length":6,"excerpt":"","more":"article {\n  width: 100% !important;\n  padding: 0;\n}"}],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2023-12-11T01:26:02.872Z","updated":"2023-12-11T01:26:02.874Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clq0gtc9v0006zqq9bz1e8std","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"length":78,"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}